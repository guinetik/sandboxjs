{"version":3,"file":"index-KO7hfsOL.js","sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\r\nimport { Logger } from './logger.js';\r\n\r\n/**\r\n * Simple localStorage wrapper for persistent code storage\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class Storage {\r\n  /**\r\n   * Creates a new Storage instance\r\n   * @param {string} [key] - The localStorage key to use\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\r\n    this.key = key;\r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'warn',\r\n      prefix: 'Storage'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Saves code to localStorage\r\n   * @param {string} code - The code to save\r\n   * @returns {boolean} True if save was successful\r\n   */\r\n  save(code) {\r\n    try {\r\n      localStorage.setItem(this.key, code);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to save code to localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads code from localStorage\r\n   * @returns {string|null} The saved code or null if not found\r\n   */\r\n  load() {\r\n    try {\r\n      return localStorage.getItem(this.key);\r\n    } catch (e) {\r\n      this.logger.warn('Failed to load code from localStorage:', e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the saved code\r\n   * @returns {boolean} True if clear was successful\r\n   */\r\n  clear() {\r\n    try {\r\n      localStorage.removeItem(this.key);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to clear localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../core/logger.js';\r\nimport { fetchWithTimeout } from '../core/utils.js';\r\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\r\n\r\n/**\r\n * Examples loader for the JavaScript sandbox\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesLoader {\r\n  /**\r\n   * Creates a new ExamplesLoader instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.examplesPath] - Path to examples directory\r\n   * @param {Function} [options.onLoad] - Callback when example is loaded\r\n   * @param {Function} [options.onError] - Callback when loading fails\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\r\n    this.onLoad = options.onLoad || (() => {});\r\n    this.onError = options.onError || (() => {});\r\n    this.examples = new Map();\r\n    \r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'info',\r\n      prefix: 'ExamplesLoader'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Discovers available examples by attempting to load known files\r\n   * @returns {Promise<Array>} Array of example metadata\r\n   */\r\n  async discoverExamples() {\r\n    // Known examples - in a real app, this could come from an API or manifest\r\n    const knownExamples = [\r\n      {\r\n        id: 'hello-world',\r\n        title: 'üëã Hello World',\r\n        description: 'Simple greeting with interactive button',\r\n        file: 'hello-world.js'\r\n      },\r\n      {\r\n        id: 'spinning-animation',\r\n        title: 'üåÄ CSS Animations',\r\n        description: 'Spinning box with rainbow colors and controls',\r\n        file: 'spinning-animation.js'\r\n      },\r\n      {\r\n        id: 'interactive-form',\r\n        title: 'üìù Interactive Form',\r\n        description: 'Form validation and submission handling',\r\n        file: 'interactive-form.js'\r\n      },\r\n      {\r\n        id: 'canvas-drawing',\r\n        title: 'üé® Canvas Drawing',\r\n        description: 'Draw with mouse or touch on HTML5 canvas',\r\n        file: 'canvas-drawing.js'\r\n      }\r\n    ];\r\n\r\n    const availableExamples = [];\r\n\r\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\r\n\r\n    // Test each example to see if it's available\r\n    for (const example of knownExamples) {\r\n      try {\r\n        const url = `${this.examplesPath}/${example.file}`;\r\n        this.logger.debug(`Fetching example: ${url}`);\r\n        \r\n        const response = await fetchWithTimeout(\r\n          url,\r\n          {},\r\n          NETWORK_TIMEOUT_MS\r\n        );\r\n        \r\n        if (response.ok) {\r\n          const code = await response.text();\r\n          this.examples.set(example.id, { ...example, code });\r\n          availableExamples.push(example);\r\n          this.logger.debug(`‚úì Example loaded: ${example.id}`);\r\n        } else {\r\n          this.logger.warn(`‚úó Example ${example.id} returned ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`‚úó Example ${example.id} failed:`, error.message);\r\n      }\r\n    }\r\n\r\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\r\n    return availableExamples;\r\n  }\r\n\r\n  /**\r\n   * Loads an example by ID\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<Object>} Example data with code\r\n   */\r\n  async loadExample(exampleId) {\r\n    if (this.examples.has(exampleId)) {\r\n      const example = this.examples.get(exampleId);\r\n      this.onLoad(example);\r\n      return example;\r\n    }\r\n\r\n    // Try to load if not cached\r\n    try {\r\n      await this.discoverExamples();\r\n      const example = this.examples.get(exampleId);\r\n\r\n      if (example) {\r\n        this.onLoad(example);\r\n        return example;\r\n      } else {\r\n        throw new Error(`Example '${exampleId}' not found`);\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.onError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all available examples\r\n   * @returns {Array} Array of cached examples\r\n   */\r\n  getAvailableExamples() {\r\n    return Array.from(this.examples.values());\r\n  }\r\n\r\n  /**\r\n   * Clears the examples cache\r\n   */\r\n  clearCache() {\r\n    this.logger.debug('Clearing examples cache');\r\n    this.examples.clear();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the examples loader\r\n   */\r\n  destroy() {\r\n    this.logger.debug('Destroying examples loader');\r\n    this.clearCache();\r\n  }\r\n}\r\n","/**\r\n * Examples dropdown UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesDropdown {\r\n  /**\r\n   * Creates a new ExamplesDropdown instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} options - Configuration options\r\n   * @param {Function} [options.onSelect] - Callback when example is selected\r\n   */\r\n  constructor(container, options = {}) {\r\n    this.container = container;\r\n    this.onSelect = options.onSelect || (() => {});\r\n    this.examples = [];\r\n\r\n    this.createDropdown();\r\n  }\r\n\r\n  /**\r\n   * Creates the dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'examples-dropdown';\r\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n\r\n    this.dropdown.addEventListener('change', (e) => {\r\n      const exampleId = e.target.value;\r\n      if (exampleId) {\r\n        this.onSelect(exampleId);\r\n        // Reset to placeholder after selection\r\n        setTimeout(() => {\r\n          this.dropdown.value = '';\r\n        }, 100);\r\n      }\r\n    });\r\n\r\n    // Insert after the preview button (make examples last in toolbar)\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n    if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with examples\r\n   * @param {Array} examples - Array of example objects\r\n   */\r\n  setExamples(examples) {\r\n    this.examples = examples;\r\n\r\n    // Reset to normal placeholder first\r\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n\r\n    // Add example options\r\n    examples.forEach(example => {\r\n      const option = document.createElement('option');\r\n      option.value = example.id;\r\n      option.textContent = example.title;\r\n      option.title = example.description; // Tooltip\r\n      this.dropdown.appendChild(option);\r\n    });\r\n\r\n    // Enable dropdown if we have examples\r\n    this.dropdown.disabled = examples.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Shows loading state\r\n   */\r\n  setLoading(loading = true) {\r\n    if (loading) {\r\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\r\n      this.dropdown.disabled = true;\r\n    } else {\r\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n      this.dropdown.disabled = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows error state\r\n   * @param {string} message - Error message to display\r\n   */\r\n  setError(message = 'Failed to load examples') {\r\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\r\n    this.dropdown.disabled = true;\r\n  }\r\n\r\n  /**\r\n   * Destroys the dropdown\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Theme switcher UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ThemeSwitcher {\r\n\r\n  /**\r\n   * Creates a new ThemeSwitcher instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} eventEmitter - The event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\r\n   * @param {boolean} [options.debug=true] - Enable debug logging\r\n   */\r\n  constructor(container, eventEmitter, options = {}) {\r\n    this.container = container;\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      defaultTheme: 'darcula',\r\n      debug: true,\r\n      storageKey: 'sandbox_current_theme',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'ThemeSwitcher'\r\n    });\r\n\r\n    // Define themes array first (needed for validation)\r\n    this.themes = [\r\n      { value: 'default', label: 'üè≥Ô∏è Default' },\r\n      { value: 'darcula', label: 'üåô Darcula' },\r\n      { value: 'monokai', label: 'üéØ Monokai' },\r\n      { value: 'solarized', label: '‚òÄÔ∏è Solarized Dark' },\r\n      { value: 'material', label: 'üì± Material' },\r\n      { value: 'dracula', label: 'üßõ Dracula' },\r\n      { value: 'tomorrow-night-eighties', label: 'üåâ Tomorrow Night' },\r\n      { value: 'base16-dark', label: 'üåÉ Base16 Dark' },\r\n      { value: 'blackboard', label: '‚ö´ Blackboard' },\r\n      { value: 'eclipse', label: 'üåÖ Eclipse' }\r\n    ];\r\n\r\n    // Load saved theme or use default (now that themes array exists)\r\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\r\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\r\n\r\n    this.createDropdown();\r\n\r\n    // Load CSS for the current theme on startup and emit events\r\n    this.initializeCurrentTheme();\r\n  }\r\n\r\n  /**\r\n   * Initializes the current theme by loading its CSS and emitting events\r\n   */\r\n  async initializeCurrentTheme() {\r\n    this.logger.info('Initializing current theme:', this.currentTheme);\r\n\r\n    // Emit that theme loading started\r\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\r\n      theme: this.currentTheme\r\n    });\r\n\r\n    try {\r\n      await this.loadThemeCSS(this.currentTheme);\r\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\r\n\r\n      // Emit that theme is ready for use\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: this.currentTheme\r\n      });\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load current theme CSS:', error);\r\n\r\n      // Emit error but fallback to default\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: 'darcula', // fallback\r\n        error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the theme switcher dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.theme-switcher');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\r\n    this.dropdown.title = 'Switch editor theme';\r\n\r\n    // Add theme options\r\n    this.populateThemes();\r\n\r\n    // Set default theme\r\n    this.dropdown.value = this.currentTheme;\r\n\r\n    this.dropdown.addEventListener('change', async (e) => {\r\n      const themeValue = e.target.value;\r\n      this.logger.info('Theme dropdown changed to:', themeValue);\r\n      this.logger.info('Current theme is:', this.currentTheme);\r\n\r\n      if (themeValue && themeValue !== this.currentTheme) {\r\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\r\n        await this.switchTheme(themeValue);\r\n      } else {\r\n        this.logger.warn('Theme value is empty or same as current theme');\r\n      }\r\n    });\r\n\r\n    // Insert after the examples dropdown if it exists, otherwise after preview button\r\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n\r\n    if (examplesDropdown) {\r\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\r\n    } else if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with available themes\r\n   */\r\n  populateThemes() {\r\n    // Clear existing options\r\n    this.dropdown.innerHTML = '';\r\n\r\n    // Add theme options\r\n    this.themes.forEach(theme => {\r\n      const option = document.createElement('option');\r\n      option.value = theme.value;\r\n      option.textContent = theme.label;\r\n      this.dropdown.appendChild(option);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads a CodeMirror theme CSS file if not already loaded\r\n   * @param {string} themeName - The theme name to load\r\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\r\n   */\r\n  async loadThemeCSS(themeName) {\r\n    // Skip loading for default theme (no CSS needed)\r\n    if (themeName === 'default') {\r\n      this.logger.info('Skipping CSS load for default theme');\r\n      return;\r\n    }\r\n\r\n    // Check if theme CSS is already loaded\r\n    const existingLink = document.querySelector(`link[href*=\"theme/${themeName}\"]`);\r\n    if (existingLink) {\r\n      this.logger.info('Theme CSS already loaded for:', themeName);\r\n      return;\r\n    }\r\n\r\n    // Load theme CSS dynamically\r\n    this.logger.info('Loading theme CSS for:', themeName);\r\n    const link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/${themeName}.min.css`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      link.onload = () => {\r\n        this.logger.info('Theme CSS loaded successfully for:', themeName);\r\n        resolve();\r\n      };\r\n      link.onerror = () => {\r\n        this.logger.error('Failed to load theme CSS for:', themeName);\r\n        reject(new Error(`Failed to load theme: ${themeName}`));\r\n      };\r\n      document.head.appendChild(link);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads saved theme from localStorage\r\n   * @returns {string|null} Saved theme name or null if not found\r\n   */\r\n  loadSavedTheme() {\r\n    try {\r\n      const savedTheme = localStorage.getItem(this.options.storageKey);\r\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\r\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\r\n        return savedTheme;\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load saved theme:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Saves current theme to localStorage\r\n   * @param {string} themeName - Theme name to save\r\n   */\r\n  saveTheme(themeName) {\r\n    try {\r\n      localStorage.setItem(this.options.storageKey, themeName);\r\n      this.logger.info('Saved theme to storage:', themeName);\r\n    } catch (error) {\r\n      this.logger.warn('Failed to save theme:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to a new theme\r\n   * @param {string} themeName - The theme name to switch to\r\n   */\r\n  async switchTheme(themeName) {\r\n    const oldTheme = this.currentTheme;\r\n    this.currentTheme = themeName;\r\n\r\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\r\n\r\n    // Update dropdown value\r\n    this.dropdown.value = themeName;\r\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\r\n\r\n    try {\r\n      // Load theme CSS first\r\n      await this.loadThemeCSS(themeName);\r\n\r\n      // Save theme for persistence\r\n      this.saveTheme(themeName);\r\n\r\n      // Emit theme change event for editor adapters to listen to\r\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\r\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\r\n        theme: themeName,\r\n        oldTheme: oldTheme\r\n      });\r\n      this.logger.info('Theme change event emitted successfully');\r\n    } catch (error) {\r\n      this.logger.error('Failed to switch theme:', error);\r\n      // Revert dropdown to old theme\r\n      this.dropdown.value = oldTheme;\r\n      this.currentTheme = oldTheme;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current theme\r\n   * @returns {string} Current theme name\r\n   */\r\n  getCurrentTheme() {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  /**\r\n   * Sets the current theme programmatically\r\n   * @param {string} themeName - The theme name to set\r\n   */\r\n  setTheme(themeName) {\r\n    if (this.themes.find(t => t.value === themeName)) {\r\n      this.switchTheme(themeName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new theme to the list\r\n   * @param {string} value - Theme value/name\r\n   * @param {string} label - Display label for the theme\r\n   */\r\n  addTheme(value, label) {\r\n    // Check if theme already exists\r\n    if (!this.themes.find(t => t.value === value)) {\r\n      this.themes.push({ value, label });\r\n      this.populateThemes();\r\n      this.dropdown.value = this.currentTheme; // Restore selection\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the theme switcher\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","/**\r\n * Neon Glass Glow Effect Manager\r\n * Applies animated neon glass borders to UI elements\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { Logger } from '../core/logger.js';\r\n\r\nexport class NeonGlowManager {\r\n  /**\r\n   * Creates a new NeonGlowManager instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\r\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      transitionDuration: 8000,\r\n      autoRotate: true,\r\n      debug: false,\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'NeonGlow'\r\n    });\r\n\r\n    this.hue1 = this.randomHue();\r\n    this.hue2 = this.randomHue();\r\n    this.rotationInterval = null;\r\n    this.glowElements = new Set();\r\n  }\r\n\r\n  /**\r\n   * Generates a random hue value\r\n   * @returns {number} Hue between 0-360\r\n   */\r\n  randomHue() {\r\n    return Math.floor(Math.random() * 360);\r\n  }\r\n\r\n  /**\r\n   * Generates a complementary hue with some variance\r\n   * @param {number} baseHue - Base hue value\r\n   * @returns {number} Complementary hue\r\n   */\r\n  complementaryHue(baseHue) {\r\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\r\n    return (baseHue + offset) % 360;\r\n  }\r\n\r\n  /**\r\n   * Applies neon glow effect to an element\r\n   * @param {HTMLElement} element - Element to apply glow to\r\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\r\n   */\r\n  applyGlow(element, options = {}) {\r\n    // Add neon-glow class\r\n    element.classList.add('neon-glow');\r\n\r\n    // Create glow container\r\n    const glowContainer = document.createElement('div');\r\n    glowContainer.className = 'neon-glow-container';\r\n\r\n    // Create SINGLE glow element that covers entire pane\r\n    const shine = document.createElement('div');\r\n    shine.className = 'neon-shine';\r\n    glowContainer.appendChild(shine);\r\n\r\n    element.appendChild(glowContainer);\r\n    this.glowElements.add(element);\r\n\r\n    this.logger.debug('Applied glow to element:', element);\r\n  }\r\n\r\n  /**\r\n   * Updates CSS custom properties for hue values\r\n   * @param {number} hue1 - Primary hue\r\n   * @param {number} hue2 - Secondary hue\r\n   */\r\n  updateHues(hue1, hue2) {\r\n    this.hue1 = hue1;\r\n    this.hue2 = hue2;\r\n\r\n    document.documentElement.style.setProperty('--hue1', String(hue1));\r\n    document.documentElement.style.setProperty('--hue2', String(hue2));\r\n\r\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\r\n  }\r\n\r\n  /**\r\n   * Rotates to new random colors\r\n   */\r\n  rotateColors() {\r\n    const newHue1 = this.randomHue();\r\n    const newHue2 = this.complementaryHue(newHue1);\r\n\r\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\r\n    this.updateHues(newHue1, newHue2);\r\n  }\r\n\r\n  /**\r\n   * Starts automatic color rotation\r\n   */\r\n  startRotation() {\r\n    if (this.rotationInterval) {\r\n      this.stopRotation();\r\n    }\r\n\r\n    // Initial colors\r\n    this.rotateColors();\r\n\r\n    // Set up interval\r\n    this.rotationInterval = setInterval(() => {\r\n      this.rotateColors();\r\n    }, this.options.transitionDuration);\r\n\r\n    this.logger.info('Started color rotation');\r\n  }\r\n\r\n  /**\r\n   * Stops automatic color rotation\r\n   */\r\n  stopRotation() {\r\n    if (this.rotationInterval) {\r\n      clearInterval(this.rotationInterval);\r\n      this.rotationInterval = null;\r\n      this.logger.info('Stopped color rotation');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes glow from an element\r\n   * @param {HTMLElement} element - Element to remove glow from\r\n   */\r\n  removeGlow(element) {\r\n    element.classList.remove('neon-glow');\r\n    const container = element.querySelector('.neon-glow-container');\r\n    if (container) {\r\n      container.remove();\r\n    }\r\n    this.glowElements.delete(element);\r\n  }\r\n\r\n  /**\r\n   * Cleans up the glow manager\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying neon glow manager');\r\n    this.stopRotation();\r\n    \r\n    // Remove glow from all elements\r\n    this.glowElements.forEach(element => {\r\n      this.removeGlow(element);\r\n    });\r\n\r\n    this.glowElements.clear();\r\n  }\r\n}\r\n","import { SandboxEngine } from '../core/sandbox.js';\r\nimport { ConsoleOutput } from '../core/console.js';\r\nimport { Storage } from '../core/storage.js';\r\nimport { Logger } from '../core/logger.js';\r\nimport { EventEmitter } from '../core/events.js';\r\nimport { ExamplesLoader } from './examples.js';\r\nimport { ExamplesDropdown } from './examples-dropdown.js';\r\nimport { ThemeSwitcher } from './theme-switcher.js';\r\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\r\nimport { isMobile } from '../core/utils.js';\r\nimport { NeonGlowManager } from './neon.js';\r\nimport { \r\n  DEFAULT_TIMEOUT_MS, \r\n  DEFAULT_STORAGE_KEY, \r\n  EVENTS, \r\n  STATUS_MESSAGES,\r\n  MOBILE_BREAKPOINT \r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Main controller that orchestrates the sandbox application components\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class SandboxController {\r\n  /**\r\n   * Creates a new SandboxController instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n   * @param {string} [options.defaultCode] - Default code to load\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.logLevel='info'] - Log level for debugging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      timeLimit: DEFAULT_TIMEOUT_MS,\r\n      storageKey: DEFAULT_STORAGE_KEY,\r\n      defaultCode: this.getDefaultCode(),\r\n      debug: false,\r\n      logLevel: 'info',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: this.options.logLevel,\r\n      prefix: 'Controller'\r\n    });\r\n\r\n    this.events = new EventEmitter();\r\n    this.editor = null;\r\n    this.sandbox = null;\r\n    this.console = null;\r\n    this.storage = null;\r\n    this.examples = null;\r\n    this.examplesDropdown = null;\r\n    this.themeSwitcher = null;\r\n    this.neonGlow = null;\r\n    this.elements = {};\r\n    this.resizeHandlers = [];\r\n    this.responsiveListener = null;\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Returns the default JavaScript code to load in the editor\r\n   * @returns {string} Default code content\r\n   */\r\n  getDefaultCode() {\r\n    return [\r\n      '// Welcome to JS Sandbox! üôå',\r\n      '//',\r\n      '// Tips:',\r\n      '//  - Use console.log/info/warn/error',\r\n      '//  - Ctrl/Cmd+Enter to execute',\r\n      '//  - \"Reset\" kills stuck executions',\r\n      '//',\r\n      '// Examples:',\r\n      'console.log(\"Hello, sandbox!\");',\r\n      'function noReturn() { var x = 1+1; }',\r\n      'noReturn(); // no return value, all good',\r\n      '',\r\n      '// DOM inside sandbox:',\r\n      'var el = document.createElement(\"h1\");',\r\n      'el.textContent = \"Hello from iframe!\";',\r\n      'document.body.appendChild(el);',\r\n      '',\r\n      '// Errors:',\r\n      'Promise.reject(\"rejected!\");',\r\n      '// throw new Error(\"Exception thrown\");',\r\n      '',\r\n      '// Infinite loop test (commented):',\r\n      '// while(true) {}'\r\n    ].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Initializes the controller and all components\r\n   * @returns {Promise<void>}\r\n   */\r\n  async init() {\r\n    if (this.isInitialized) {\r\n      this.logger.warn('Controller already initialized');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.events.emit(EVENTS.INIT_START);\r\n      this.logger.info('Initializing controller...');\r\n      \r\n      this.findElements();\r\n      await this.initializeComponents();\r\n      this.setupEventListeners();\r\n      \r\n      this.isInitialized = true;\r\n      this.events.emit(EVENTS.INIT_COMPLETE);\r\n      this.logger.info('Controller initialization complete');\r\n    } catch (error) {\r\n      this.logger.error('Initialization failed:', error);\r\n      this.events.emit(EVENTS.INIT_ERROR, error);\r\n      \r\n      // Show user-friendly error message\r\n      this.showInitializationError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows initialization error to user\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  showInitializationError(error) {\r\n    if (this.elements.consoleContainer) {\r\n      const errorDiv = document.createElement('div');\r\n      errorDiv.className = 'console-line console-error';\r\n      errorDiv.textContent = `‚ö†Ô∏è Initialization failed: ${error.message}`;\r\n      this.elements.consoleContainer.appendChild(errorDiv);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and caches DOM elements\r\n   */\r\n  findElements() {\r\n    this.elements = {\r\n      app: document.querySelector('.app'),\r\n      editorContainer: document.getElementById('editorContainer'),\r\n      consoleContainer: document.getElementById('console'),\r\n      sandboxContainer: document.getElementById('sandboxContainer'),\r\n      runBtn: document.getElementById('runBtn'),\r\n      clearBtn: document.getElementById('clearBtn'),\r\n      resetBtn: document.getElementById('resetBtn'),\r\n      togglePreview: document.getElementById('togglePreview'),\r\n      previewWrap: document.getElementById('previewWrap'),\r\n      status: document.getElementById('status'),\r\n      limitLabel: document.getElementById('limitLabel'),\r\n      toolbar: document.querySelector('.toolbar')\r\n    };\r\n\r\n    // Validate required elements\r\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\r\n    const missing = required.filter(key => !this.elements[key]);\r\n    \r\n    if (missing.length > 0) {\r\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes all components with error boundaries\r\n   * @returns {Promise<void>}\r\n   */\r\n  async initializeComponents() {\r\n    this.logger.info('Initializing components...');\r\n\r\n    // Initialize storage\r\n    try {\r\n      this.storage = new Storage(this.options.storageKey, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Storage initialized');\r\n    } catch (error) {\r\n      this.logger.error('Storage initialization failed:', error);\r\n      // Non-fatal, continue without persistence\r\n    }\r\n\r\n    // Initialize console\r\n    try {\r\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Console initialized');\r\n    } catch (error) {\r\n      this.logger.error('Console initialization failed:', error);\r\n      throw new Error('Failed to initialize console output');\r\n    }\r\n\r\n    // Initialize sandbox\r\n    try {\r\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\r\n        timeLimit: this.options.timeLimit,\r\n        debug: this.options.debug,\r\n        logLevel: this.options.logLevel,\r\n        onMessage: (type, args) => {\r\n          this.console.addLine(type, args);\r\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\r\n        },\r\n        onStatusChange: (status) => this.updateStatus(status)\r\n      });\r\n      this.logger.debug('SandboxEngine created');\r\n\r\n      // Initialize sandbox template\r\n      await this.sandbox.initialize();\r\n      this.logger.info('Sandbox initialized');\r\n    } catch (error) {\r\n      this.logger.error('Sandbox initialization failed:', error);\r\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\r\n    }\r\n\r\n    // Initialize examples system\r\n    try {\r\n      this.examples = new ExamplesLoader({\r\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\r\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\r\n        debug: true // Always debug examples loading to help troubleshoot\r\n      });\r\n\r\n      // Initialize examples dropdown (only if not already created)\r\n      if (this.elements.toolbar && !this.examplesDropdown) {\r\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\r\n          onSelect: (exampleId) => this.loadExample(exampleId)\r\n        });\r\n\r\n        // Load available examples\r\n        try {\r\n          this.examplesDropdown.setLoading(true);\r\n          const availableExamples = await this.examples.discoverExamples();\r\n          this.examplesDropdown.setExamples(availableExamples);\r\n          this.logger.info('Examples loaded:', availableExamples.length);\r\n        } catch (error) {\r\n          this.logger.error('Failed to load examples:', error);\r\n          this.examplesDropdown.setError('Failed to load');\r\n        }\r\n      }\r\n\r\n      // Initialize theme switcher (only if not already created)\r\n      if (this.elements.toolbar && !this.themeSwitcher) {\r\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\r\n          defaultTheme: 'darcula'\r\n        });\r\n        this.logger.info('Theme switcher initialized');\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Examples system initialization failed:', error);\r\n      // Non-fatal, continue without examples\r\n    }\r\n\r\n    // Update time limit display\r\n    if (this.elements.limitLabel) {\r\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\r\n    }\r\n\r\n    // Initialize resizable panes\r\n    this.initializeResizer();\r\n\r\n    // Handle responsive layout changes\r\n    this.setupResponsiveListener();\r\n\r\n    // Set initial state for preview toggle\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (rightPane && this.elements.previewWrap) {\r\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\r\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\r\n    }\r\n\r\n    // Initialize neon glow effects\r\n    this.initializeNeonGlow();\r\n\r\n    this.logger.info('Components initialization complete');\r\n  }\r\n\r\n  /**\r\n   * Initializes neon glow effects on UI elements\r\n   */\r\n  initializeNeonGlow() {\r\n    try {\r\n      this.neonGlow = new NeonGlowManager({\r\n        transitionDuration: 8000,\r\n        autoRotate: true,\r\n        debug: true // Enable debug to see color changes\r\n      });\r\n\r\n      // Apply glow ONLY to panes (not navbar)\r\n      const panes = this.elements.app.querySelectorAll('.pane');\r\n      panes.forEach(pane => {\r\n        this.neonGlow.applyGlow(pane);\r\n      });\r\n\r\n      // Start automatic color rotation\r\n      this.neonGlow.startRotation();\r\n\r\n      this.logger.info('Neon glow effects initialized');\r\n    } catch (error) {\r\n      this.logger.warn('Failed to initialize neon glow:', error);\r\n      // Non-fatal, continue without neon effects\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up existing resize handlers\r\n   */\r\n  cleanupResizeHandlers() {\r\n    this.resizeHandlers.forEach(handler => {\r\n      if (handler && handler.cleanup) {\r\n        handler.cleanup();\r\n      }\r\n    });\r\n    this.resizeHandlers = [];\r\n  }\r\n\r\n  /**\r\n   * Initializes the resizable panes functionality\r\n   */\r\n  initializeResizer() {\r\n    if (!this.elements.app) return;\r\n\r\n    // Cleanup existing handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Skip horizontal resize on mobile\r\n    if (isMobile(MOBILE_BREAKPOINT)) {\r\n      this.initializeVerticalResize();\r\n      return;\r\n    }\r\n\r\n    const mainContent = this.elements.app.querySelector('.main-content');\r\n    if (!mainContent) return;\r\n\r\n    // Remove any existing resize handles first\r\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\r\n    existingHandles.forEach(handle => handle.remove());\r\n\r\n    // Reset any inline grid styles that might have been applied\r\n    mainContent.style.gridTemplateColumns = '';\r\n    mainContent.style.gridTemplateRows = '';\r\n\r\n    // Reset right pane styles\r\n    const rightPane = mainContent.querySelector('.pane:last-child');\r\n    if (rightPane) {\r\n      rightPane.style.gridTemplateRows = '';\r\n      rightPane.classList.remove('preview-hidden');\r\n    }\r\n\r\n    // Create resize handle\r\n    const resizeHandle = document.createElement('div');\r\n    resizeHandle.className = 'resize-handle';\r\n\r\n    // Insert between the first and last pane in main-content\r\n    const panes = mainContent.querySelectorAll('.pane');\r\n    if (panes.length >= 2) {\r\n      mainContent.insertBefore(resizeHandle, panes[1]);\r\n\r\n      // Create horizontal resize handler using utility\r\n      const horizontalHandler = createHorizontalResizeHandler({\r\n        container: mainContent,\r\n        leftPane: panes[0],\r\n        rightPane: panes[1],\r\n        handle: resizeHandle,\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\r\n      });\r\n\r\n      this.resizeHandlers.push(horizontalHandler);\r\n    }\r\n\r\n    // Initialize vertical resizing\r\n    this.initializeVerticalResize();\r\n  }\r\n\r\n  /**\r\n   * Sets up responsive layout listener for orientation/resize changes\r\n   */\r\n  setupResponsiveListener() {\r\n    // Clean up existing listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n    }\r\n\r\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\r\n\r\n    const handleChange = () => {\r\n      this.logger.debug('Responsive breakpoint changed');\r\n      this.initializeResizer();\r\n    };\r\n\r\n    mediaQuery.addListener(handleChange);\r\n\r\n    // Store reference for cleanup\r\n    this.responsiveListener = { mediaQuery, handleChange };\r\n  }\r\n\r\n  /**\r\n   * Initializes vertical resizing between console and preview\r\n   */\r\n  initializeVerticalResize() {\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (!rightPane) return;\r\n\r\n    // Create vertical resize handle\r\n    const verticalHandle = document.createElement('div');\r\n    verticalHandle.className = 'vertical-resize-handle';\r\n\r\n    // Insert after console\r\n    const consoleEl = rightPane.querySelector('.console');\r\n    if (consoleEl) {\r\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\r\n\r\n      // Create vertical resize handler using utility\r\n      const verticalHandler = createVerticalResizeHandler({\r\n        container: rightPane,\r\n        topPane: consoleEl,\r\n        bottomPane: this.elements.previewWrap,\r\n        handle: verticalHandle,\r\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\r\n      });\r\n\r\n      this.resizeHandlers.push(verticalHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the event emitter instance\r\n   * @returns {EventEmitter} The event emitter\r\n   */\r\n  getEventEmitter() {\r\n    return this.events;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the editor instance\r\n   * @param {EditorAdapter} editor - The editor instance\r\n   */\r\n  setEditor(editor) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n    }\r\n\r\n    this.editor = editor;\r\n\r\n    // Setup editor event handlers\r\n    this.editor.onChange((code) => {\r\n      if (this.storage) {\r\n        this.storage.save(code);\r\n      }\r\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\r\n    });\r\n\r\n    this.editor.onExecute(() => {\r\n      this.run();\r\n    });\r\n\r\n    // Load initial code now that editor is ready\r\n    this.loadInitialCode();\r\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for UI interactions\r\n   */\r\n  setupEventListeners() {\r\n    if (this.elements.runBtn) {\r\n      this.elements.runBtn.addEventListener('click', () => this.run());\r\n    }\r\n\r\n    if (this.elements.clearBtn) {\r\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\r\n    }\r\n\r\n    if (this.elements.resetBtn) {\r\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\r\n    }\r\n\r\n    if (this.elements.togglePreview) {\r\n      this.elements.togglePreview.addEventListener('change', (e) => {\r\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          if (e.target.checked) {\r\n            rightPane.classList.add('has-preview');\r\n          } else {\r\n            rightPane.classList.remove('has-preview');\r\n            rightPane.style.gridTemplateRows = '';\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Set up theme event listeners\r\n    this.setupThemeEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up theme-related event listeners\r\n   */\r\n  setupThemeEventListeners() {\r\n    // Listen for theme loading start\r\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\r\n      this.logger.info('Theme loading started:', data.theme);\r\n    });\r\n\r\n    // Listen for theme ready\r\n    this.events.on(EVENTS.THEME_READY, (data) => {\r\n      this.logger.info('Theme ready:', data.theme);\r\n      if (data.error) {\r\n        this.logger.warn('Theme ready with error:', data.error);\r\n      }\r\n    });\r\n\r\n    // Listen for theme changes\r\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\r\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads initial code into the editor\r\n   */\r\n  loadInitialCode() {\r\n    const savedCode = this.storage ? this.storage.load() : null;\r\n    const initialCode = savedCode || this.options.defaultCode;\r\n\r\n    if (this.editor) {\r\n      this.editor.setValue(initialCode);\r\n      this.editor.focus();\r\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Runs the current code in the sandbox\r\n   */\r\n  run() {\r\n    if (!this.editor) {\r\n      this.logger.error('No editor configured');\r\n      return;\r\n    }\r\n\r\n    const code = this.editor.getValue();\r\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\r\n\r\n    // Validate syntax first\r\n    const validation = this.sandbox.validateSyntax(code);\r\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\r\n\r\n    this.console.clear();\r\n    this.sandbox.execute(code);\r\n  }\r\n\r\n  /**\r\n   * Clears the console output\r\n   */\r\n  clearConsole() {\r\n    this.console.clear();\r\n    this.updateStatus(STATUS_MESSAGES.cleared);\r\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\r\n  }\r\n\r\n  /**\r\n   * Resets the sandbox\r\n   */\r\n  reset() {\r\n    this.sandbox.reset();\r\n    this.updateStatus(STATUS_MESSAGES.reset);\r\n    this.events.emit(EVENTS.SANDBOX_RESET);\r\n  }\r\n\r\n  /**\r\n   * Updates the status display\r\n   * @param {string} status - Status message or key\r\n   */\r\n  updateStatus(status) {\r\n    if (!this.elements.status) return;\r\n\r\n    const displayStatus = STATUS_MESSAGES[status] || status;\r\n    this.elements.status.textContent = displayStatus;\r\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\r\n\r\n    // Emit specific status events\r\n    if (status === 'completed') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\r\n    } else if (status === 'timeout') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @param {Object} [options={}] - Options for the listener\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  on(event, callback, options) {\r\n    return this.events.on(event, callback, options);\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  once(event, callback) {\r\n    return this.events.once(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   */\r\n  off(event, callback) {\r\n    this.events.off(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Gets the current code from the editor\r\n   * @returns {string|null} The current code or null if no editor\r\n   */\r\n  getCode() {\r\n    return this.editor ? this.editor.getValue() : null;\r\n  }\r\n\r\n  /**\r\n   * Sets code in the editor\r\n   * @param {string} code - The code to set\r\n   */\r\n  setCode(code) {\r\n    if (this.editor) {\r\n      this.editor.setValue(code);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates JavaScript syntax without executing\r\n   * @param {string} [code] - The code to validate, or current editor code if not provided\r\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\r\n   */\r\n  validateCode(code) {\r\n    const codeToValidate = code || this.getCode();\r\n    return this.sandbox ? \r\n      this.sandbox.validateSyntax(codeToValidate) : \r\n      { valid: false, error: 'Sandbox not initialized' };\r\n  }\r\n\r\n  /**\r\n   * Loads and runs an example\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<void>}\r\n   */\r\n  async loadExample(exampleId) {\r\n    try {\r\n      this.logger.info('Loading example:', exampleId);\r\n\r\n      const example = await this.examples.loadExample(exampleId);\r\n\r\n      // Set the code in the editor\r\n      this.setCode(example.code);\r\n\r\n      // Open preview pane\r\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\r\n        this.elements.togglePreview.checked = true;\r\n        this.elements.previewWrap.classList.add('show');\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          rightPane.classList.add('has-preview');\r\n        }\r\n      }\r\n\r\n      // Run the example\r\n      this.run();\r\n\r\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up the controller and all components\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying controller...');\r\n    \r\n    this.events.emit(EVENTS.DESTROY);\r\n\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (this.sandbox) {\r\n      this.sandbox.destroy();\r\n      this.sandbox = null;\r\n    }\r\n\r\n    if (this.examples) {\r\n      this.examples.destroy();\r\n      this.examples = null;\r\n    }\r\n\r\n    if (this.examplesDropdown) {\r\n      this.examplesDropdown.destroy();\r\n      this.examplesDropdown = null;\r\n    }\r\n\r\n    if (this.neonGlow) {\r\n      this.neonGlow.destroy();\r\n      this.neonGlow = null;\r\n    }\r\n\r\n    // Cleanup resize handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Cleanup responsive listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n      this.responsiveListener = null;\r\n    }\r\n\r\n    this.events.removeAllListeners();\r\n    this.isInitialized = false;\r\n    \r\n    this.logger.info('Controller destroyed');\r\n  }\r\n}\r\n","import {\r\n  MIN_LEFT_PANE_WIDTH,\r\n  MIN_RIGHT_PANE_WIDTH,\r\n  MIN_CONSOLE_HEIGHT,\r\n  MIN_PREVIEW_HEIGHT,\r\n  RESIZE_HANDLE_WIDTH\r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Shared resize functionality for panes\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\n/**\r\n * Creates a horizontal resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.leftPane - Left pane element\r\n * @param {HTMLElement} config.rightPane - Right pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createHorizontalResizeHandler(config) {\r\n  const { container, leftPane, rightPane, handle, onResize } = config;\r\n  \r\n  let isResizing = false;\r\n  let startX = 0;\r\n  let startLeftWidth = 0;\r\n  let startRightWidth = 0;\r\n\r\n  const handleMouseDown = (e) => {\r\n    isResizing = true;\r\n    startX = e.clientX;\r\n    handle.classList.add('dragging');\r\n\r\n    startLeftWidth = leftPane.getBoundingClientRect().width;\r\n    startRightWidth = rightPane.getBoundingClientRect().width;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'col-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    const deltaX = e.clientX - startX;\r\n    const containerRect = container.getBoundingClientRect();\r\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\r\n\r\n    // Calculate new widths with constraints\r\n    const newLeftWidth = Math.max(\r\n      MIN_LEFT_PANE_WIDTH,\r\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\r\n    );\r\n    const newRightWidth = totalWidth - newLeftWidth;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  handle.addEventListener('mousedown', handleMouseDown);\r\n  document.addEventListener('mousemove', handleMouseMove);\r\n  document.addEventListener('mouseup', handleMouseUp);\r\n\r\n  return {\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleMouseDown);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a vertical resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.topPane - Top pane element\r\n * @param {HTMLElement} config.bottomPane - Bottom pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createVerticalResizeHandler(config) {\r\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\r\n  \r\n  let isResizing = false;\r\n  let startY = 0;\r\n  let startTopHeight = 0;\r\n  let startBottomHeight = 0;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // Check if resizing is allowed\r\n    if (shouldResize && !shouldResize()) return;\r\n\r\n    isResizing = true;\r\n    startY = e.clientY;\r\n    handle.classList.add('dragging');\r\n\r\n    const topRect = topPane.getBoundingClientRect();\r\n    const bottomRect = bottomPane.getBoundingClientRect();\r\n\r\n    startTopHeight = topRect.height;\r\n    startBottomHeight = bottomRect.height;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'row-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    const deltaY = e.clientY - startY;\r\n    const totalContentHeight = startTopHeight + startBottomHeight;\r\n\r\n    // Calculate new heights with constraints\r\n    const newTopHeight = Math.max(\r\n      MIN_CONSOLE_HEIGHT,\r\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\r\n    );\r\n    const newBottomHeight = totalContentHeight - newTopHeight;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  handle.addEventListener('mousedown', handleMouseDown);\r\n  document.addEventListener('mousemove', handleMouseMove);\r\n  document.addEventListener('mouseup', handleMouseUp);\r\n\r\n  return {\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleMouseDown);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    }\r\n  };\r\n}\r\n","import { EditorAdapter } from './base.js';\r\n\r\n/**\r\n * Plain textarea editor adapter for basic code editing\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class TextareaEditor extends EditorAdapter {\r\n  /**\r\n   * Creates a new TextareaEditor instance\r\n   * @param {HTMLElement} container - DOM element to contain the editor\r\n   * @param {Object} [options={}] - Editor configuration options\r\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\r\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\r\n   */\r\n  constructor(container, options = {}, eventEmitter = null) {\r\n    super(container, options, eventEmitter);\r\n    this.textarea = null;\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the textarea editor\r\n   */\r\n  init() {\r\n    this.textarea = document.createElement('textarea');\r\n    this.textarea.className = 'code-editor';\r\n    this.textarea.spellcheck = false;\r\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\r\n\r\n    this.container.appendChild(this.textarea);\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for the textarea\r\n   */\r\n  setupEventListeners() {\r\n    this.textarea.addEventListener('input', () => {\r\n      this.triggerChange();\r\n    });\r\n\r\n    this.textarea.addEventListener('keydown', (e) => {\r\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\r\n        e.preventDefault();\r\n        this.triggerExecute();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the current code value from the textarea\r\n   * @returns {string} The current code\r\n   */\r\n  getValue() {\r\n    return this.textarea.value;\r\n  }\r\n\r\n  /**\r\n   * Sets the code value in the textarea\r\n   * @param {string} code - The code to set\r\n   */\r\n  setValue(code) {\r\n    this.textarea.value = code;\r\n  }\r\n\r\n  /**\r\n   * Focuses the textarea\r\n   */\r\n  focus() {\r\n    this.textarea.focus();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the textarea editor\r\n   */\r\n  destroy() {\r\n    if (this.textarea) {\r\n      this.textarea.remove();\r\n    }\r\n  }\r\n}","/**\r\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { SandboxController } from './ui/controller.js';\r\nimport { CodeMirrorEditor } from './editors/codemirror.js';\r\nimport { TextareaEditor } from './editors/textarea.js';\r\nimport { Logger } from './core/logger.js';\r\n\r\n/**\r\n * Auto-detects and initializes the best available editor\r\n * @param {HTMLElement} container - DOM element to contain the editor\r\n * @param {Object} [options={}] - Editor configuration options\r\n * @param {Object} [eventEmitter] - Event emitter for theme changes\r\n * @returns {EditorAdapter} The initialized editor instance\r\n */\r\nfunction createEditor(container, options = {}, eventEmitter = null) {\r\n  const logger = new Logger({\r\n    enabled: options.debug || false,\r\n    level: 'info',\r\n    prefix: 'EditorFactory'\r\n  });\r\n\r\n  // Try CodeMirror first if available\r\n  if (typeof CodeMirror !== 'undefined') {\r\n    try {\r\n      logger.info('Initializing CodeMirror editor');\r\n      return new CodeMirrorEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\r\n    }\r\n  }\r\n\r\n  // Fallback to textarea\r\n  logger.info('Initializing textarea editor');\r\n  return new TextareaEditor(container, options, eventEmitter);\r\n}\r\n\r\n/**\r\n * Initializes the JavaScript sandbox application\r\n * @param {Object} [options={}] - Configuration options\r\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n * @param {string} [options.defaultCode] - Default code to load\r\n * @param {boolean} [options.debug=false] - Enable debug logging\r\n * @param {string} [options.logLevel='info'] - Log level for debugging\r\n * @param {string} [options.templatePath] - Path to custom sandbox template\r\n * @returns {Promise<SandboxController>} The initialized sandbox controller\r\n */\r\nexport async function initSandbox(options = {}) {\r\n  const debug = options.debug || false;\r\n  const logger = new Logger({\r\n    enabled: debug,\r\n    level: options.logLevel || 'info',\r\n    prefix: 'App'\r\n  });\r\n\r\n  try {\r\n    logger.info('Starting sandbox initialization...');\r\n\r\n    // Create controller\r\n    const controller = new SandboxController(options);\r\n    \r\n    // Initialize controller (now properly awaited)\r\n    await controller.init();\r\n    logger.info('Controller initialized');\r\n\r\n    // Find editor container\r\n    const editorContainer = document.getElementById('editorContainer');\r\n    if (!editorContainer) {\r\n      throw new Error('Editor container element not found');\r\n    }\r\n\r\n    // Create editor with event emitter for theme switching\r\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\r\n    const editor = createEditor(editorContainer, {\r\n      mode: 'javascript',\r\n      theme: 'darcula', // Temporary default, will be updated by THEME_READY event\r\n      autofocus: true,\r\n      debug: debug\r\n    }, controller.getEventEmitter());\r\n    logger.info('Editor created, waiting for theme ready event');\r\n\r\n    // Set editor on controller\r\n    controller.setEditor(editor);\r\n    logger.info('Editor set on controller');\r\n    \r\n    logger.info('Sandbox initialization complete');\r\n    return controller;\r\n  } catch (error) {\r\n    logger.error('Sandbox initialization failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Auto-initializes the sandbox if DOM is ready\r\n */\r\nfunction autoInit() {\r\n  // Only auto-init if not already initialized and editor container exists\r\n  if (!window.sandbox && document.getElementById('editorContainer')) {\r\n    initSandbox({ debug: false })\r\n      .then(sandbox => {\r\n        window.sandbox = sandbox;\r\n        console.log('‚úÖ Sandbox initialized successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error('‚ùå Failed to initialize sandbox:', error);\r\n      });\r\n  }\r\n}\r\n\r\n// Auto-initialize based on document state\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', autoInit);\r\n} else {\r\n  // DOM already loaded\r\n  autoInit();\r\n}\r\n\r\n// Export for manual initialization\r\nexport { SandboxController, CodeMirrorEditor, TextareaEditor };\r\n"],"names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","themes","label","currentTheme","loadSavedTheme","initializeCurrentTheme","emit","EVENTS","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","populateThemes","async","themeValue","switchTheme","examplesDropdown","themeName","link","rel","href","Promise","resolve","reject","onload","onerror","head","savedTheme","find","t","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","Set","Math","floor","random","complementaryHue","baseHue","applyGlow","element","classList","add","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","editor","sandbox","console","storage","themeSwitcher","neonGlow","elements","resizeHandlers","responsiveListener","isInitialized","join","init","INIT_START","findElements","initializeComponents","setupEventListeners","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","app","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","missing","filter","ConsoleOutput","SandboxEngine","onMessage","type","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","toggle","initializeNeonGlow","querySelectorAll","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleMouseDown","clientX","getBoundingClientRect","width","body","userSelect","cursor","preventDefault","handleMouseMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleMouseUp","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","setEditor","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","on","data","savedCode","initialCode","setValue","focus","CODE_LOAD","fromStorage","getValue","CODE_EXECUTE_START","validation","validateSyntax","CODE_VALIDATE","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","valid","EXAMPLE_LOADED","DESTROY","removeAllListeners","TextareaEditor","EditorAdapter","super","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","initSandbox","controller","CodeMirror","CodeMirrorEditor","createEditor","mode","autofocus","autoInit","then","log","catch","readyState"],"mappings":"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"}