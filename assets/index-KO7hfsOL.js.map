{"version":3,"file":"index-KO7hfsOL.js","sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\nimport { Logger } from './logger.js';\n\n/**\n * Simple localStorage wrapper for persistent code storage\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class Storage {\n  /**\n   * Creates a new Storage instance\n   * @param {string} [key] - The localStorage key to use\n   * @param {Object} [options={}] - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\n    this.key = key;\n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'warn',\n      prefix: 'Storage'\n    });\n  }\n\n  /**\n   * Saves code to localStorage\n   * @param {string} code - The code to save\n   * @returns {boolean} True if save was successful\n   */\n  save(code) {\n    try {\n      localStorage.setItem(this.key, code);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to save code to localStorage:', e);\n      return false;\n    }\n  }\n\n  /**\n   * Loads code from localStorage\n   * @returns {string|null} The saved code or null if not found\n   */\n  load() {\n    try {\n      return localStorage.getItem(this.key);\n    } catch (e) {\n      this.logger.warn('Failed to load code from localStorage:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Clears the saved code\n   * @returns {boolean} True if clear was successful\n   */\n  clear() {\n    try {\n      localStorage.removeItem(this.key);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to clear localStorage:', e);\n      return false;\n    }\n  }\n}\n","import { Logger } from '../core/logger.js';\nimport { fetchWithTimeout } from '../core/utils.js';\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\n\n/**\n * Examples loader for the JavaScript sandbox\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesLoader {\n  /**\n   * Creates a new ExamplesLoader instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.examplesPath] - Path to examples directory\n   * @param {Function} [options.onLoad] - Callback when example is loaded\n   * @param {Function} [options.onError] - Callback when loading fails\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\n    this.onLoad = options.onLoad || (() => {});\n    this.onError = options.onError || (() => {});\n    this.examples = new Map();\n    \n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'info',\n      prefix: 'ExamplesLoader'\n    });\n  }\n\n  /**\n   * Discovers available examples by attempting to load known files\n   * @returns {Promise<Array>} Array of example metadata\n   */\n  async discoverExamples() {\n    // Known examples - in a real app, this could come from an API or manifest\n    const knownExamples = [\n      {\n        id: 'hello-world',\n        title: 'üëã Hello World',\n        description: 'Simple greeting with interactive button',\n        file: 'hello-world.js'\n      },\n      {\n        id: 'spinning-animation',\n        title: 'üåÄ CSS Animations',\n        description: 'Spinning box with rainbow colors and controls',\n        file: 'spinning-animation.js'\n      },\n      {\n        id: 'interactive-form',\n        title: 'üìù Interactive Form',\n        description: 'Form validation and submission handling',\n        file: 'interactive-form.js'\n      },\n      {\n        id: 'canvas-drawing',\n        title: 'üé® Canvas Drawing',\n        description: 'Draw with mouse or touch on HTML5 canvas',\n        file: 'canvas-drawing.js'\n      }\n    ];\n\n    const availableExamples = [];\n\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\n\n    // Test each example to see if it's available\n    for (const example of knownExamples) {\n      try {\n        const url = `${this.examplesPath}/${example.file}`;\n        this.logger.debug(`Fetching example: ${url}`);\n        \n        const response = await fetchWithTimeout(\n          url,\n          {},\n          NETWORK_TIMEOUT_MS\n        );\n        \n        if (response.ok) {\n          const code = await response.text();\n          this.examples.set(example.id, { ...example, code });\n          availableExamples.push(example);\n          this.logger.debug(`‚úì Example loaded: ${example.id}`);\n        } else {\n          this.logger.warn(`‚úó Example ${example.id} returned ${response.status}`);\n        }\n      } catch (error) {\n        this.logger.warn(`‚úó Example ${example.id} failed:`, error.message);\n      }\n    }\n\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\n    return availableExamples;\n  }\n\n  /**\n   * Loads an example by ID\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<Object>} Example data with code\n   */\n  async loadExample(exampleId) {\n    if (this.examples.has(exampleId)) {\n      const example = this.examples.get(exampleId);\n      this.onLoad(example);\n      return example;\n    }\n\n    // Try to load if not cached\n    try {\n      await this.discoverExamples();\n      const example = this.examples.get(exampleId);\n\n      if (example) {\n        this.onLoad(example);\n        return example;\n      } else {\n        throw new Error(`Example '${exampleId}' not found`);\n      }\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.onError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets all available examples\n   * @returns {Array} Array of cached examples\n   */\n  getAvailableExamples() {\n    return Array.from(this.examples.values());\n  }\n\n  /**\n   * Clears the examples cache\n   */\n  clearCache() {\n    this.logger.debug('Clearing examples cache');\n    this.examples.clear();\n  }\n\n  /**\n   * Cleans up the examples loader\n   */\n  destroy() {\n    this.logger.debug('Destroying examples loader');\n    this.clearCache();\n  }\n}\n","/**\n * Examples dropdown UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesDropdown {\n  /**\n   * Creates a new ExamplesDropdown instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} options - Configuration options\n   * @param {Function} [options.onSelect] - Callback when example is selected\n   */\n  constructor(container, options = {}) {\n    this.container = container;\n    this.onSelect = options.onSelect || (() => {});\n    this.examples = [];\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'examples-dropdown';\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    this.dropdown.addEventListener('change', (e) => {\n      const exampleId = e.target.value;\n      if (exampleId) {\n        this.onSelect(exampleId);\n        // Reset to placeholder after selection\n        setTimeout(() => {\n          this.dropdown.value = '';\n        }, 100);\n      }\n    });\n\n    // Insert after the preview button (make examples last in toolbar)\n    const previewLabel = this.container.querySelector('label.btn');\n    if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with examples\n   * @param {Array} examples - Array of example objects\n   */\n  setExamples(examples) {\n    this.examples = examples;\n\n    // Reset to normal placeholder first\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    // Add example options\n    examples.forEach(example => {\n      const option = document.createElement('option');\n      option.value = example.id;\n      option.textContent = example.title;\n      option.title = example.description; // Tooltip\n      this.dropdown.appendChild(option);\n    });\n\n    // Enable dropdown if we have examples\n    this.dropdown.disabled = examples.length === 0;\n  }\n\n  /**\n   * Shows loading state\n   */\n  setLoading(loading = true) {\n    if (loading) {\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\n      this.dropdown.disabled = true;\n    } else {\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n      this.dropdown.disabled = false;\n    }\n  }\n\n  /**\n   * Shows error state\n   * @param {string} message - Error message to display\n   */\n  setError(message = 'Failed to load examples') {\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\n    this.dropdown.disabled = true;\n  }\n\n  /**\n   * Destroys the dropdown\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Theme switcher UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ThemeSwitcher {\n\n  /**\n   * Creates a new ThemeSwitcher instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} eventEmitter - The event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\n   * @param {boolean} [options.debug=true] - Enable debug logging\n   */\n  constructor(container, eventEmitter, options = {}) {\n    this.container = container;\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      defaultTheme: 'darcula',\n      debug: true,\n      storageKey: 'sandbox_current_theme',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'ThemeSwitcher'\n    });\n\n    // Define themes array first (needed for validation)\n    this.themes = [\n      { value: 'default', label: 'üè≥Ô∏è Default' },\n      { value: 'darcula', label: 'üåô Darcula' },\n      { value: 'monokai', label: 'üéØ Monokai' },\n      { value: 'solarized', label: '‚òÄÔ∏è Solarized Dark' },\n      { value: 'material', label: 'üì± Material' },\n      { value: 'dracula', label: 'üßõ Dracula' },\n      { value: 'tomorrow-night-eighties', label: 'üåâ Tomorrow Night' },\n      { value: 'base16-dark', label: 'üåÉ Base16 Dark' },\n      { value: 'blackboard', label: '‚ö´ Blackboard' },\n      { value: 'eclipse', label: 'üåÖ Eclipse' }\n    ];\n\n    // Load saved theme or use default (now that themes array exists)\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\n\n    this.createDropdown();\n\n    // Load CSS for the current theme on startup and emit events\n    this.initializeCurrentTheme();\n  }\n\n  /**\n   * Initializes the current theme by loading its CSS and emitting events\n   */\n  async initializeCurrentTheme() {\n    this.logger.info('Initializing current theme:', this.currentTheme);\n\n    // Emit that theme loading started\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\n      theme: this.currentTheme\n    });\n\n    try {\n      await this.loadThemeCSS(this.currentTheme);\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\n\n      // Emit that theme is ready for use\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: this.currentTheme\n      });\n    } catch (error) {\n      this.logger.warn('Failed to load current theme CSS:', error);\n\n      // Emit error but fallback to default\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: 'darcula', // fallback\n        error: error.message\n      });\n    }\n  }\n\n  /**\n   * Creates the theme switcher dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.theme-switcher');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\n    this.dropdown.title = 'Switch editor theme';\n\n    // Add theme options\n    this.populateThemes();\n\n    // Set default theme\n    this.dropdown.value = this.currentTheme;\n\n    this.dropdown.addEventListener('change', async (e) => {\n      const themeValue = e.target.value;\n      this.logger.info('Theme dropdown changed to:', themeValue);\n      this.logger.info('Current theme is:', this.currentTheme);\n\n      if (themeValue && themeValue !== this.currentTheme) {\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\n        await this.switchTheme(themeValue);\n      } else {\n        this.logger.warn('Theme value is empty or same as current theme');\n      }\n    });\n\n    // Insert after the examples dropdown if it exists, otherwise after preview button\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\n    const previewLabel = this.container.querySelector('label.btn');\n\n    if (examplesDropdown) {\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\n    } else if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with available themes\n   */\n  populateThemes() {\n    // Clear existing options\n    this.dropdown.innerHTML = '';\n\n    // Add theme options\n    this.themes.forEach(theme => {\n      const option = document.createElement('option');\n      option.value = theme.value;\n      option.textContent = theme.label;\n      this.dropdown.appendChild(option);\n    });\n  }\n\n  /**\n   * Loads a CodeMirror theme CSS file if not already loaded\n   * @param {string} themeName - The theme name to load\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\n   */\n  async loadThemeCSS(themeName) {\n    // Skip loading for default theme (no CSS needed)\n    if (themeName === 'default') {\n      this.logger.info('Skipping CSS load for default theme');\n      return;\n    }\n\n    // Check if theme CSS is already loaded\n    const existingLink = document.querySelector(`link[href*=\"theme/${themeName}\"]`);\n    if (existingLink) {\n      this.logger.info('Theme CSS already loaded for:', themeName);\n      return;\n    }\n\n    // Load theme CSS dynamically\n    this.logger.info('Loading theme CSS for:', themeName);\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/${themeName}.min.css`;\n\n    return new Promise((resolve, reject) => {\n      link.onload = () => {\n        this.logger.info('Theme CSS loaded successfully for:', themeName);\n        resolve();\n      };\n      link.onerror = () => {\n        this.logger.error('Failed to load theme CSS for:', themeName);\n        reject(new Error(`Failed to load theme: ${themeName}`));\n      };\n      document.head.appendChild(link);\n    });\n  }\n\n  /**\n   * Loads saved theme from localStorage\n   * @returns {string|null} Saved theme name or null if not found\n   */\n  loadSavedTheme() {\n    try {\n      const savedTheme = localStorage.getItem(this.options.storageKey);\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\n        return savedTheme;\n      }\n    } catch (error) {\n      this.logger.warn('Failed to load saved theme:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Saves current theme to localStorage\n   * @param {string} themeName - Theme name to save\n   */\n  saveTheme(themeName) {\n    try {\n      localStorage.setItem(this.options.storageKey, themeName);\n      this.logger.info('Saved theme to storage:', themeName);\n    } catch (error) {\n      this.logger.warn('Failed to save theme:', error);\n    }\n  }\n\n  /**\n   * Switches to a new theme\n   * @param {string} themeName - The theme name to switch to\n   */\n  async switchTheme(themeName) {\n    const oldTheme = this.currentTheme;\n    this.currentTheme = themeName;\n\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\n\n    // Update dropdown value\n    this.dropdown.value = themeName;\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\n\n    try {\n      // Load theme CSS first\n      await this.loadThemeCSS(themeName);\n\n      // Save theme for persistence\n      this.saveTheme(themeName);\n\n      // Emit theme change event for editor adapters to listen to\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\n        theme: themeName,\n        oldTheme: oldTheme\n      });\n      this.logger.info('Theme change event emitted successfully');\n    } catch (error) {\n      this.logger.error('Failed to switch theme:', error);\n      // Revert dropdown to old theme\n      this.dropdown.value = oldTheme;\n      this.currentTheme = oldTheme;\n    }\n  }\n\n  /**\n   * Gets the current theme\n   * @returns {string} Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Sets the current theme programmatically\n   * @param {string} themeName - The theme name to set\n   */\n  setTheme(themeName) {\n    if (this.themes.find(t => t.value === themeName)) {\n      this.switchTheme(themeName);\n    }\n  }\n\n  /**\n   * Adds a new theme to the list\n   * @param {string} value - Theme value/name\n   * @param {string} label - Display label for the theme\n   */\n  addTheme(value, label) {\n    // Check if theme already exists\n    if (!this.themes.find(t => t.value === value)) {\n      this.themes.push({ value, label });\n      this.populateThemes();\n      this.dropdown.value = this.currentTheme; // Restore selection\n    }\n  }\n\n  /**\n   * Destroys the theme switcher\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","/**\n * Neon Glass Glow Effect Manager\n * Applies animated neon glass borders to UI elements\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { Logger } from '../core/logger.js';\n\nexport class NeonGlowManager {\n  /**\n   * Creates a new NeonGlowManager instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.options = {\n      transitionDuration: 8000,\n      autoRotate: true,\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'NeonGlow'\n    });\n\n    this.hue1 = this.randomHue();\n    this.hue2 = this.randomHue();\n    this.rotationInterval = null;\n    this.glowElements = new Set();\n  }\n\n  /**\n   * Generates a random hue value\n   * @returns {number} Hue between 0-360\n   */\n  randomHue() {\n    return Math.floor(Math.random() * 360);\n  }\n\n  /**\n   * Generates a complementary hue with some variance\n   * @param {number} baseHue - Base hue value\n   * @returns {number} Complementary hue\n   */\n  complementaryHue(baseHue) {\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\n    return (baseHue + offset) % 360;\n  }\n\n  /**\n   * Applies neon glow effect to an element\n   * @param {HTMLElement} element - Element to apply glow to\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\n   */\n  applyGlow(element, options = {}) {\n    // Add neon-glow class\n    element.classList.add('neon-glow');\n\n    // Create glow container\n    const glowContainer = document.createElement('div');\n    glowContainer.className = 'neon-glow-container';\n\n    // Create SINGLE glow element that covers entire pane\n    const shine = document.createElement('div');\n    shine.className = 'neon-shine';\n    glowContainer.appendChild(shine);\n\n    element.appendChild(glowContainer);\n    this.glowElements.add(element);\n\n    this.logger.debug('Applied glow to element:', element);\n  }\n\n  /**\n   * Updates CSS custom properties for hue values\n   * @param {number} hue1 - Primary hue\n   * @param {number} hue2 - Secondary hue\n   */\n  updateHues(hue1, hue2) {\n    this.hue1 = hue1;\n    this.hue2 = hue2;\n\n    document.documentElement.style.setProperty('--hue1', String(hue1));\n    document.documentElement.style.setProperty('--hue2', String(hue2));\n\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\n  }\n\n  /**\n   * Rotates to new random colors\n   */\n  rotateColors() {\n    const newHue1 = this.randomHue();\n    const newHue2 = this.complementaryHue(newHue1);\n\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\n    this.updateHues(newHue1, newHue2);\n  }\n\n  /**\n   * Starts automatic color rotation\n   */\n  startRotation() {\n    if (this.rotationInterval) {\n      this.stopRotation();\n    }\n\n    // Initial colors\n    this.rotateColors();\n\n    // Set up interval\n    this.rotationInterval = setInterval(() => {\n      this.rotateColors();\n    }, this.options.transitionDuration);\n\n    this.logger.info('Started color rotation');\n  }\n\n  /**\n   * Stops automatic color rotation\n   */\n  stopRotation() {\n    if (this.rotationInterval) {\n      clearInterval(this.rotationInterval);\n      this.rotationInterval = null;\n      this.logger.info('Stopped color rotation');\n    }\n  }\n\n  /**\n   * Removes glow from an element\n   * @param {HTMLElement} element - Element to remove glow from\n   */\n  removeGlow(element) {\n    element.classList.remove('neon-glow');\n    const container = element.querySelector('.neon-glow-container');\n    if (container) {\n      container.remove();\n    }\n    this.glowElements.delete(element);\n  }\n\n  /**\n   * Cleans up the glow manager\n   */\n  destroy() {\n    this.logger.info('Destroying neon glow manager');\n    this.stopRotation();\n    \n    // Remove glow from all elements\n    this.glowElements.forEach(element => {\n      this.removeGlow(element);\n    });\n\n    this.glowElements.clear();\n  }\n}\n","import { SandboxEngine } from '../core/sandbox.js';\nimport { ConsoleOutput } from '../core/console.js';\nimport { Storage } from '../core/storage.js';\nimport { Logger } from '../core/logger.js';\nimport { EventEmitter } from '../core/events.js';\nimport { ExamplesLoader } from './examples.js';\nimport { ExamplesDropdown } from './examples-dropdown.js';\nimport { ThemeSwitcher } from './theme-switcher.js';\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\nimport { isMobile } from '../core/utils.js';\nimport { NeonGlowManager } from './neon.js';\nimport { \n  DEFAULT_TIMEOUT_MS, \n  DEFAULT_STORAGE_KEY, \n  EVENTS, \n  STATUS_MESSAGES,\n  MOBILE_BREAKPOINT \n} from '../core/constants.js';\n\n/**\n * Main controller that orchestrates the sandbox application components\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class SandboxController {\n  /**\n   * Creates a new SandboxController instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\n   * @param {string} [options.defaultCode] - Default code to load\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logLevel='info'] - Log level for debugging\n   */\n  constructor(options = {}) {\n    this.options = {\n      timeLimit: DEFAULT_TIMEOUT_MS,\n      storageKey: DEFAULT_STORAGE_KEY,\n      defaultCode: this.getDefaultCode(),\n      debug: false,\n      logLevel: 'info',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: this.options.logLevel,\n      prefix: 'Controller'\n    });\n\n    this.events = new EventEmitter();\n    this.editor = null;\n    this.sandbox = null;\n    this.console = null;\n    this.storage = null;\n    this.examples = null;\n    this.examplesDropdown = null;\n    this.themeSwitcher = null;\n    this.neonGlow = null;\n    this.elements = {};\n    this.resizeHandlers = [];\n    this.responsiveListener = null;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Returns the default JavaScript code to load in the editor\n   * @returns {string} Default code content\n   */\n  getDefaultCode() {\n    return [\n      '// Welcome to JS Sandbox! üôå',\n      '//',\n      '// Tips:',\n      '//  - Use console.log/info/warn/error',\n      '//  - Ctrl/Cmd+Enter to execute',\n      '//  - \"Reset\" kills stuck executions',\n      '//',\n      '// Examples:',\n      'console.log(\"Hello, sandbox!\");',\n      'function noReturn() { var x = 1+1; }',\n      'noReturn(); // no return value, all good',\n      '',\n      '// DOM inside sandbox:',\n      'var el = document.createElement(\"h1\");',\n      'el.textContent = \"Hello from iframe!\";',\n      'document.body.appendChild(el);',\n      '',\n      '// Errors:',\n      'Promise.reject(\"rejected!\");',\n      '// throw new Error(\"Exception thrown\");',\n      '',\n      '// Infinite loop test (commented):',\n      '// while(true) {}'\n    ].join('\\n');\n  }\n\n  /**\n   * Initializes the controller and all components\n   * @returns {Promise<void>}\n   */\n  async init() {\n    if (this.isInitialized) {\n      this.logger.warn('Controller already initialized');\n      return;\n    }\n\n    try {\n      this.events.emit(EVENTS.INIT_START);\n      this.logger.info('Initializing controller...');\n      \n      this.findElements();\n      await this.initializeComponents();\n      this.setupEventListeners();\n      \n      this.isInitialized = true;\n      this.events.emit(EVENTS.INIT_COMPLETE);\n      this.logger.info('Controller initialization complete');\n    } catch (error) {\n      this.logger.error('Initialization failed:', error);\n      this.events.emit(EVENTS.INIT_ERROR, error);\n      \n      // Show user-friendly error message\n      this.showInitializationError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Shows initialization error to user\n   * @param {Error} error - The error that occurred\n   */\n  showInitializationError(error) {\n    if (this.elements.consoleContainer) {\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'console-line console-error';\n      errorDiv.textContent = `‚ö†Ô∏è Initialization failed: ${error.message}`;\n      this.elements.consoleContainer.appendChild(errorDiv);\n    }\n  }\n\n  /**\n   * Finds and caches DOM elements\n   */\n  findElements() {\n    this.elements = {\n      app: document.querySelector('.app'),\n      editorContainer: document.getElementById('editorContainer'),\n      consoleContainer: document.getElementById('console'),\n      sandboxContainer: document.getElementById('sandboxContainer'),\n      runBtn: document.getElementById('runBtn'),\n      clearBtn: document.getElementById('clearBtn'),\n      resetBtn: document.getElementById('resetBtn'),\n      togglePreview: document.getElementById('togglePreview'),\n      previewWrap: document.getElementById('previewWrap'),\n      status: document.getElementById('status'),\n      limitLabel: document.getElementById('limitLabel'),\n      toolbar: document.querySelector('.toolbar')\n    };\n\n    // Validate required elements\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\n    const missing = required.filter(key => !this.elements[key]);\n    \n    if (missing.length > 0) {\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\n    }\n  }\n\n  /**\n   * Initializes all components with error boundaries\n   * @returns {Promise<void>}\n   */\n  async initializeComponents() {\n    this.logger.info('Initializing components...');\n\n    // Initialize storage\n    try {\n      this.storage = new Storage(this.options.storageKey, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Storage initialized');\n    } catch (error) {\n      this.logger.error('Storage initialization failed:', error);\n      // Non-fatal, continue without persistence\n    }\n\n    // Initialize console\n    try {\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Console initialized');\n    } catch (error) {\n      this.logger.error('Console initialization failed:', error);\n      throw new Error('Failed to initialize console output');\n    }\n\n    // Initialize sandbox\n    try {\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\n        timeLimit: this.options.timeLimit,\n        debug: this.options.debug,\n        logLevel: this.options.logLevel,\n        onMessage: (type, args) => {\n          this.console.addLine(type, args);\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\n        },\n        onStatusChange: (status) => this.updateStatus(status)\n      });\n      this.logger.debug('SandboxEngine created');\n\n      // Initialize sandbox template\n      await this.sandbox.initialize();\n      this.logger.info('Sandbox initialized');\n    } catch (error) {\n      this.logger.error('Sandbox initialization failed:', error);\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\n    }\n\n    // Initialize examples system\n    try {\n      this.examples = new ExamplesLoader({\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\n        debug: true // Always debug examples loading to help troubleshoot\n      });\n\n      // Initialize examples dropdown (only if not already created)\n      if (this.elements.toolbar && !this.examplesDropdown) {\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\n          onSelect: (exampleId) => this.loadExample(exampleId)\n        });\n\n        // Load available examples\n        try {\n          this.examplesDropdown.setLoading(true);\n          const availableExamples = await this.examples.discoverExamples();\n          this.examplesDropdown.setExamples(availableExamples);\n          this.logger.info('Examples loaded:', availableExamples.length);\n        } catch (error) {\n          this.logger.error('Failed to load examples:', error);\n          this.examplesDropdown.setError('Failed to load');\n        }\n      }\n\n      // Initialize theme switcher (only if not already created)\n      if (this.elements.toolbar && !this.themeSwitcher) {\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\n          defaultTheme: 'darcula'\n        });\n        this.logger.info('Theme switcher initialized');\n      }\n    } catch (error) {\n      this.logger.warn('Examples system initialization failed:', error);\n      // Non-fatal, continue without examples\n    }\n\n    // Update time limit display\n    if (this.elements.limitLabel) {\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\n    }\n\n    // Initialize resizable panes\n    this.initializeResizer();\n\n    // Handle responsive layout changes\n    this.setupResponsiveListener();\n\n    // Set initial state for preview toggle\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane && this.elements.previewWrap) {\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\n    }\n\n    // Initialize neon glow effects\n    this.initializeNeonGlow();\n\n    this.logger.info('Components initialization complete');\n  }\n\n  /**\n   * Initializes neon glow effects on UI elements\n   */\n  initializeNeonGlow() {\n    try {\n      this.neonGlow = new NeonGlowManager({\n        transitionDuration: 8000,\n        autoRotate: true,\n        debug: true // Enable debug to see color changes\n      });\n\n      // Apply glow ONLY to panes (not navbar)\n      const panes = this.elements.app.querySelectorAll('.pane');\n      panes.forEach(pane => {\n        this.neonGlow.applyGlow(pane);\n      });\n\n      // Start automatic color rotation\n      this.neonGlow.startRotation();\n\n      this.logger.info('Neon glow effects initialized');\n    } catch (error) {\n      this.logger.warn('Failed to initialize neon glow:', error);\n      // Non-fatal, continue without neon effects\n    }\n  }\n\n  /**\n   * Cleans up existing resize handlers\n   */\n  cleanupResizeHandlers() {\n    this.resizeHandlers.forEach(handler => {\n      if (handler && handler.cleanup) {\n        handler.cleanup();\n      }\n    });\n    this.resizeHandlers = [];\n  }\n\n  /**\n   * Initializes the resizable panes functionality\n   */\n  initializeResizer() {\n    if (!this.elements.app) return;\n\n    // Cleanup existing handlers\n    this.cleanupResizeHandlers();\n\n    // Skip horizontal resize on mobile\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.initializeVerticalResize();\n      return;\n    }\n\n    const mainContent = this.elements.app.querySelector('.main-content');\n    if (!mainContent) return;\n\n    // Remove any existing resize handles first\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\n    existingHandles.forEach(handle => handle.remove());\n\n    // Reset any inline grid styles that might have been applied\n    mainContent.style.gridTemplateColumns = '';\n    mainContent.style.gridTemplateRows = '';\n\n    // Reset right pane styles\n    const rightPane = mainContent.querySelector('.pane:last-child');\n    if (rightPane) {\n      rightPane.style.gridTemplateRows = '';\n      rightPane.classList.remove('preview-hidden');\n    }\n\n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resize-handle';\n\n    // Insert between the first and last pane in main-content\n    const panes = mainContent.querySelectorAll('.pane');\n    if (panes.length >= 2) {\n      mainContent.insertBefore(resizeHandle, panes[1]);\n\n      // Create horizontal resize handler using utility\n      const horizontalHandler = createHorizontalResizeHandler({\n        container: mainContent,\n        leftPane: panes[0],\n        rightPane: panes[1],\n        handle: resizeHandle,\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\n      });\n\n      this.resizeHandlers.push(horizontalHandler);\n    }\n\n    // Initialize vertical resizing\n    this.initializeVerticalResize();\n  }\n\n  /**\n   * Sets up responsive layout listener for orientation/resize changes\n   */\n  setupResponsiveListener() {\n    // Clean up existing listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n    }\n\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\n\n    const handleChange = () => {\n      this.logger.debug('Responsive breakpoint changed');\n      this.initializeResizer();\n    };\n\n    mediaQuery.addListener(handleChange);\n\n    // Store reference for cleanup\n    this.responsiveListener = { mediaQuery, handleChange };\n  }\n\n  /**\n   * Initializes vertical resizing between console and preview\n   */\n  initializeVerticalResize() {\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (!rightPane) return;\n\n    // Create vertical resize handle\n    const verticalHandle = document.createElement('div');\n    verticalHandle.className = 'vertical-resize-handle';\n\n    // Insert after console\n    const consoleEl = rightPane.querySelector('.console');\n    if (consoleEl) {\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\n\n      // Create vertical resize handler using utility\n      const verticalHandler = createVerticalResizeHandler({\n        container: rightPane,\n        topPane: consoleEl,\n        bottomPane: this.elements.previewWrap,\n        handle: verticalHandle,\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\n      });\n\n      this.resizeHandlers.push(verticalHandler);\n    }\n  }\n\n  /**\n   * Gets the event emitter instance\n   * @returns {EventEmitter} The event emitter\n   */\n  getEventEmitter() {\n    return this.events;\n  }\n\n\n  /**\n   * Sets the editor instance\n   * @param {EditorAdapter} editor - The editor instance\n   */\n  setEditor(editor) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n\n    this.editor = editor;\n\n    // Setup editor event handlers\n    this.editor.onChange((code) => {\n      if (this.storage) {\n        this.storage.save(code);\n      }\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\n    });\n\n    this.editor.onExecute(() => {\n      this.run();\n    });\n\n    // Load initial code now that editor is ready\n    this.loadInitialCode();\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\n  }\n\n  /**\n   * Sets up event listeners for UI interactions\n   */\n  setupEventListeners() {\n    if (this.elements.runBtn) {\n      this.elements.runBtn.addEventListener('click', () => this.run());\n    }\n\n    if (this.elements.clearBtn) {\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\n    }\n\n    if (this.elements.resetBtn) {\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    if (this.elements.togglePreview) {\n      this.elements.togglePreview.addEventListener('change', (e) => {\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          if (e.target.checked) {\n            rightPane.classList.add('has-preview');\n          } else {\n            rightPane.classList.remove('has-preview');\n            rightPane.style.gridTemplateRows = '';\n          }\n        }\n      });\n    }\n\n    // Set up theme event listeners\n    this.setupThemeEventListeners();\n  }\n\n  /**\n   * Sets up theme-related event listeners\n   */\n  setupThemeEventListeners() {\n    // Listen for theme loading start\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\n      this.logger.info('Theme loading started:', data.theme);\n    });\n\n    // Listen for theme ready\n    this.events.on(EVENTS.THEME_READY, (data) => {\n      this.logger.info('Theme ready:', data.theme);\n      if (data.error) {\n        this.logger.warn('Theme ready with error:', data.error);\n      }\n    });\n\n    // Listen for theme changes\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\n    });\n  }\n\n  /**\n   * Loads initial code into the editor\n   */\n  loadInitialCode() {\n    const savedCode = this.storage ? this.storage.load() : null;\n    const initialCode = savedCode || this.options.defaultCode;\n\n    if (this.editor) {\n      this.editor.setValue(initialCode);\n      this.editor.focus();\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\n    }\n  }\n\n  /**\n   * Runs the current code in the sandbox\n   */\n  run() {\n    if (!this.editor) {\n      this.logger.error('No editor configured');\n      return;\n    }\n\n    const code = this.editor.getValue();\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\n\n    // Validate syntax first\n    const validation = this.sandbox.validateSyntax(code);\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\n\n    this.console.clear();\n    this.sandbox.execute(code);\n  }\n\n  /**\n   * Clears the console output\n   */\n  clearConsole() {\n    this.console.clear();\n    this.updateStatus(STATUS_MESSAGES.cleared);\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\n  }\n\n  /**\n   * Resets the sandbox\n   */\n  reset() {\n    this.sandbox.reset();\n    this.updateStatus(STATUS_MESSAGES.reset);\n    this.events.emit(EVENTS.SANDBOX_RESET);\n  }\n\n  /**\n   * Updates the status display\n   * @param {string} status - Status message or key\n   */\n  updateStatus(status) {\n    if (!this.elements.status) return;\n\n    const displayStatus = STATUS_MESSAGES[status] || status;\n    this.elements.status.textContent = displayStatus;\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\n\n    // Emit specific status events\n    if (status === 'completed') {\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\n    } else if (status === 'timeout') {\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\n    }\n  }\n\n  /**\n   * Registers an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @param {Object} [options={}] - Options for the listener\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback, options) {\n    return this.events.on(event, callback, options);\n  }\n\n  /**\n   * Registers a one-time event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @returns {Function} Unsubscribe function\n   */\n  once(event, callback) {\n    return this.events.once(event, callback);\n  }\n\n  /**\n   * Removes an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n\n  /**\n   * Gets the current code from the editor\n   * @returns {string|null} The current code or null if no editor\n   */\n  getCode() {\n    return this.editor ? this.editor.getValue() : null;\n  }\n\n  /**\n   * Sets code in the editor\n   * @param {string} code - The code to set\n   */\n  setCode(code) {\n    if (this.editor) {\n      this.editor.setValue(code);\n    }\n  }\n\n  /**\n   * Validates JavaScript syntax without executing\n   * @param {string} [code] - The code to validate, or current editor code if not provided\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\n   */\n  validateCode(code) {\n    const codeToValidate = code || this.getCode();\n    return this.sandbox ? \n      this.sandbox.validateSyntax(codeToValidate) : \n      { valid: false, error: 'Sandbox not initialized' };\n  }\n\n  /**\n   * Loads and runs an example\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<void>}\n   */\n  async loadExample(exampleId) {\n    try {\n      this.logger.info('Loading example:', exampleId);\n\n      const example = await this.examples.loadExample(exampleId);\n\n      // Set the code in the editor\n      this.setCode(example.code);\n\n      // Open preview pane\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\n        this.elements.togglePreview.checked = true;\n        this.elements.previewWrap.classList.add('show');\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          rightPane.classList.add('has-preview');\n        }\n      }\n\n      // Run the example\n      this.run();\n\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\n    }\n  }\n\n  /**\n   * Cleans up the controller and all components\n   */\n  destroy() {\n    this.logger.info('Destroying controller...');\n    \n    this.events.emit(EVENTS.DESTROY);\n\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n\n    if (this.sandbox) {\n      this.sandbox.destroy();\n      this.sandbox = null;\n    }\n\n    if (this.examples) {\n      this.examples.destroy();\n      this.examples = null;\n    }\n\n    if (this.examplesDropdown) {\n      this.examplesDropdown.destroy();\n      this.examplesDropdown = null;\n    }\n\n    if (this.neonGlow) {\n      this.neonGlow.destroy();\n      this.neonGlow = null;\n    }\n\n    // Cleanup resize handlers\n    this.cleanupResizeHandlers();\n\n    // Cleanup responsive listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n      this.responsiveListener = null;\n    }\n\n    this.events.removeAllListeners();\n    this.isInitialized = false;\n    \n    this.logger.info('Controller destroyed');\n  }\n}\n","import {\n  MIN_LEFT_PANE_WIDTH,\n  MIN_RIGHT_PANE_WIDTH,\n  MIN_CONSOLE_HEIGHT,\n  MIN_PREVIEW_HEIGHT,\n  RESIZE_HANDLE_WIDTH\n} from '../core/constants.js';\n\n/**\n * Shared resize functionality for panes\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\n/**\n * Creates a horizontal resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.leftPane - Left pane element\n * @param {HTMLElement} config.rightPane - Right pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @returns {Object} Handler functions and cleanup\n */\nexport function createHorizontalResizeHandler(config) {\n  const { container, leftPane, rightPane, handle, onResize } = config;\n  \n  let isResizing = false;\n  let startX = 0;\n  let startLeftWidth = 0;\n  let startRightWidth = 0;\n\n  const handleMouseDown = (e) => {\n    isResizing = true;\n    startX = e.clientX;\n    handle.classList.add('dragging');\n\n    startLeftWidth = leftPane.getBoundingClientRect().width;\n    startRightWidth = rightPane.getBoundingClientRect().width;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'col-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n\n    const deltaX = e.clientX - startX;\n    const containerRect = container.getBoundingClientRect();\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\n\n    // Calculate new widths with constraints\n    const newLeftWidth = Math.max(\n      MIN_LEFT_PANE_WIDTH,\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\n    );\n    const newRightWidth = totalWidth - newLeftWidth;\n\n    // Update grid template\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\n\n    e.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  handle.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n\n  return {\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  };\n}\n\n/**\n * Creates a vertical resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.topPane - Top pane element\n * @param {HTMLElement} config.bottomPane - Bottom pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\n * @returns {Object} Handler functions and cleanup\n */\nexport function createVerticalResizeHandler(config) {\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\n  \n  let isResizing = false;\n  let startY = 0;\n  let startTopHeight = 0;\n  let startBottomHeight = 0;\n\n  const handleMouseDown = (e) => {\n    // Check if resizing is allowed\n    if (shouldResize && !shouldResize()) return;\n\n    isResizing = true;\n    startY = e.clientY;\n    handle.classList.add('dragging');\n\n    const topRect = topPane.getBoundingClientRect();\n    const bottomRect = bottomPane.getBoundingClientRect();\n\n    startTopHeight = topRect.height;\n    startBottomHeight = bottomRect.height;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'row-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n\n    const deltaY = e.clientY - startY;\n    const totalContentHeight = startTopHeight + startBottomHeight;\n\n    // Calculate new heights with constraints\n    const newTopHeight = Math.max(\n      MIN_CONSOLE_HEIGHT,\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\n    );\n    const newBottomHeight = totalContentHeight - newTopHeight;\n\n    // Update grid template\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\n\n    e.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  handle.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n\n  return {\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  };\n}\n","import { EditorAdapter } from './base.js';\n\n/**\n * Plain textarea editor adapter for basic code editing\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class TextareaEditor extends EditorAdapter {\n  /**\n   * Creates a new TextareaEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\n   */\n  constructor(container, options = {}, eventEmitter = null) {\n    super(container, options, eventEmitter);\n    this.textarea = null;\n    this.init();\n  }\n\n  /**\n   * Initializes the textarea editor\n   */\n  init() {\n    this.textarea = document.createElement('textarea');\n    this.textarea.className = 'code-editor';\n    this.textarea.spellcheck = false;\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\n\n    this.container.appendChild(this.textarea);\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for the textarea\n   */\n  setupEventListeners() {\n    this.textarea.addEventListener('input', () => {\n      this.triggerChange();\n    });\n\n    this.textarea.addEventListener('keydown', (e) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        e.preventDefault();\n        this.triggerExecute();\n      }\n    });\n  }\n\n  /**\n   * Gets the current code value from the textarea\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.textarea.value;\n  }\n\n  /**\n   * Sets the code value in the textarea\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    this.textarea.value = code;\n  }\n\n  /**\n   * Focuses the textarea\n   */\n  focus() {\n    this.textarea.focus();\n  }\n\n  /**\n   * Cleans up the textarea editor\n   */\n  destroy() {\n    if (this.textarea) {\n      this.textarea.remove();\n    }\n  }\n}","/**\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { SandboxController } from './ui/controller.js';\nimport { CodeMirrorEditor } from './editors/codemirror.js';\nimport { TextareaEditor } from './editors/textarea.js';\nimport { Logger } from './core/logger.js';\n\n/**\n * Auto-detects and initializes the best available editor\n * @param {HTMLElement} container - DOM element to contain the editor\n * @param {Object} [options={}] - Editor configuration options\n * @param {Object} [eventEmitter] - Event emitter for theme changes\n * @returns {EditorAdapter} The initialized editor instance\n */\nfunction createEditor(container, options = {}, eventEmitter = null) {\n  const logger = new Logger({\n    enabled: options.debug || false,\n    level: 'info',\n    prefix: 'EditorFactory'\n  });\n\n  // Try CodeMirror first if available\n  if (typeof CodeMirror !== 'undefined') {\n    try {\n      logger.info('Initializing CodeMirror editor');\n      return new CodeMirrorEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\n    }\n  }\n\n  // Fallback to textarea\n  logger.info('Initializing textarea editor');\n  return new TextareaEditor(container, options, eventEmitter);\n}\n\n/**\n * Initializes the JavaScript sandbox application\n * @param {Object} [options={}] - Configuration options\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n * @param {string} [options.storageKey] - LocalStorage key for persistence\n * @param {string} [options.defaultCode] - Default code to load\n * @param {boolean} [options.debug=false] - Enable debug logging\n * @param {string} [options.logLevel='info'] - Log level for debugging\n * @param {string} [options.templatePath] - Path to custom sandbox template\n * @returns {Promise<SandboxController>} The initialized sandbox controller\n */\nexport async function initSandbox(options = {}) {\n  const debug = options.debug || false;\n  const logger = new Logger({\n    enabled: debug,\n    level: options.logLevel || 'info',\n    prefix: 'App'\n  });\n\n  try {\n    logger.info('Starting sandbox initialization...');\n\n    // Create controller\n    const controller = new SandboxController(options);\n    \n    // Initialize controller (now properly awaited)\n    await controller.init();\n    logger.info('Controller initialized');\n\n    // Find editor container\n    const editorContainer = document.getElementById('editorContainer');\n    if (!editorContainer) {\n      throw new Error('Editor container element not found');\n    }\n\n    // Create editor with event emitter for theme switching\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\n    const editor = createEditor(editorContainer, {\n      mode: 'javascript',\n      theme: 'darcula', // Temporary default, will be updated by THEME_READY event\n      autofocus: true,\n      debug: debug\n    }, controller.getEventEmitter());\n    logger.info('Editor created, waiting for theme ready event');\n\n    // Set editor on controller\n    controller.setEditor(editor);\n    logger.info('Editor set on controller');\n    \n    logger.info('Sandbox initialization complete');\n    return controller;\n  } catch (error) {\n    logger.error('Sandbox initialization failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Auto-initializes the sandbox if DOM is ready\n */\nfunction autoInit() {\n  // Only auto-init if not already initialized and editor container exists\n  if (!window.sandbox && document.getElementById('editorContainer')) {\n    initSandbox({ debug: false })\n      .then(sandbox => {\n        window.sandbox = sandbox;\n        console.log('‚úÖ Sandbox initialized successfully');\n      })\n      .catch(error => {\n        console.error('‚ùå Failed to initialize sandbox:', error);\n      });\n  }\n}\n\n// Auto-initialize based on document state\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  // DOM already loaded\n  autoInit();\n}\n\n// Export for manual initialization\nexport { SandboxController, CodeMirrorEditor, TextareaEditor };\n"],"names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","themes","label","currentTheme","loadSavedTheme","initializeCurrentTheme","emit","EVENTS","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","populateThemes","async","themeValue","switchTheme","examplesDropdown","themeName","link","rel","href","Promise","resolve","reject","onload","onerror","head","savedTheme","find","t","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","Set","Math","floor","random","complementaryHue","baseHue","applyGlow","element","classList","add","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","editor","sandbox","console","storage","themeSwitcher","neonGlow","elements","resizeHandlers","responsiveListener","isInitialized","join","init","INIT_START","findElements","initializeComponents","setupEventListeners","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","app","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","missing","filter","ConsoleOutput","SandboxEngine","onMessage","type","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","toggle","initializeNeonGlow","querySelectorAll","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleMouseDown","clientX","getBoundingClientRect","width","body","userSelect","cursor","preventDefault","handleMouseMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleMouseUp","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","setEditor","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","on","data","savedCode","initialCode","setValue","focus","CODE_LOAD","fromStorage","getValue","CODE_EXECUTE_START","validation","validateSyntax","CODE_VALIDATE","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","valid","EXAMPLE_LOADED","DESTROY","removeAllListeners","TextareaEditor","EditorAdapter","super","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","initSandbox","controller","CodeMirror","CodeMirrorEditor","createEditor","mode","autofocus","autoInit","then","log","catch","readyState"],"mappings":"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"}