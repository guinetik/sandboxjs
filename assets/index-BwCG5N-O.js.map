{"version":3,"file":"index-BwCG5N-O.js","sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/fullscreen.js","../../src/libraries/manager.js","../../src/ui/base-dialog.js","../../src/libraries/dialog.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\r\nimport { Logger } from './logger.js';\r\n\r\n/**\r\n * Simple localStorage wrapper for persistent code storage\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class Storage {\r\n  /**\r\n   * Creates a new Storage instance\r\n   * @param {string} [key] - The localStorage key to use\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\r\n    this.key = key;\r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'warn',\r\n      prefix: 'Storage'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Saves code to localStorage\r\n   * @param {string} code - The code to save\r\n   * @returns {boolean} True if save was successful\r\n   */\r\n  save(code) {\r\n    try {\r\n      localStorage.setItem(this.key, code);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to save code to localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads code from localStorage\r\n   * @returns {string|null} The saved code or null if not found\r\n   */\r\n  load() {\r\n    try {\r\n      return localStorage.getItem(this.key);\r\n    } catch (e) {\r\n      this.logger.warn('Failed to load code from localStorage:', e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the saved code\r\n   * @returns {boolean} True if clear was successful\r\n   */\r\n  clear() {\r\n    try {\r\n      localStorage.removeItem(this.key);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to clear localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../core/logger.js';\r\nimport { fetchWithTimeout } from '../core/utils.js';\r\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\r\n\r\n/**\r\n * Examples loader for the JavaScript sandbox\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesLoader {\r\n  /**\r\n   * Creates a new ExamplesLoader instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.examplesPath] - Path to examples directory\r\n   * @param {Function} [options.onLoad] - Callback when example is loaded\r\n   * @param {Function} [options.onError] - Callback when loading fails\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\r\n    this.onLoad = options.onLoad || (() => {});\r\n    this.onError = options.onError || (() => {});\r\n    this.examples = new Map();\r\n    \r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'info',\r\n      prefix: 'ExamplesLoader'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Discovers available examples by attempting to load known files\r\n   * @returns {Promise<Array>} Array of example metadata\r\n   */\r\n  async discoverExamples() {\r\n    // Known examples - in a real app, this could come from an API or manifest\r\n    const knownExamples = [\r\n      {\r\n        id: 'hello-world',\r\n        title: 'üëã Hello World',\r\n        description: 'Simple greeting with interactive button',\r\n        file: 'hello-world.js'\r\n      },\r\n      {\r\n        id: 'spinning-animation',\r\n        title: 'üåÄ CSS Animations',\r\n        description: 'Spinning box with rainbow colors and controls',\r\n        file: 'spinning-animation.js'\r\n      },\r\n      {\r\n        id: 'interactive-form',\r\n        title: 'üìù Interactive Form',\r\n        description: 'Form validation and submission handling',\r\n        file: 'interactive-form.js'\r\n      },\r\n      {\r\n        id: 'canvas-drawing',\r\n        title: 'üé® Canvas Drawing',\r\n        description: 'Draw with mouse or touch on HTML5 canvas',\r\n        file: 'canvas-drawing.js'\r\n      }\r\n    ];\r\n\r\n    const availableExamples = [];\r\n\r\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\r\n\r\n    // Test each example to see if it's available\r\n    for (const example of knownExamples) {\r\n      try {\r\n        const url = `${this.examplesPath}/${example.file}`;\r\n        this.logger.debug(`Fetching example: ${url}`);\r\n        \r\n        const response = await fetchWithTimeout(\r\n          url,\r\n          {},\r\n          NETWORK_TIMEOUT_MS\r\n        );\r\n        \r\n        if (response.ok) {\r\n          const code = await response.text();\r\n          this.examples.set(example.id, { ...example, code });\r\n          availableExamples.push(example);\r\n          this.logger.debug(`‚úì Example loaded: ${example.id}`);\r\n        } else {\r\n          this.logger.warn(`‚úó Example ${example.id} returned ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`‚úó Example ${example.id} failed:`, error.message);\r\n      }\r\n    }\r\n\r\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\r\n    return availableExamples;\r\n  }\r\n\r\n  /**\r\n   * Loads an example by ID\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<Object>} Example data with code\r\n   */\r\n  async loadExample(exampleId) {\r\n    if (this.examples.has(exampleId)) {\r\n      const example = this.examples.get(exampleId);\r\n      this.onLoad(example);\r\n      return example;\r\n    }\r\n\r\n    // Try to load if not cached\r\n    try {\r\n      await this.discoverExamples();\r\n      const example = this.examples.get(exampleId);\r\n\r\n      if (example) {\r\n        this.onLoad(example);\r\n        return example;\r\n      } else {\r\n        throw new Error(`Example '${exampleId}' not found`);\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.onError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all available examples\r\n   * @returns {Array} Array of cached examples\r\n   */\r\n  getAvailableExamples() {\r\n    return Array.from(this.examples.values());\r\n  }\r\n\r\n  /**\r\n   * Clears the examples cache\r\n   */\r\n  clearCache() {\r\n    this.logger.debug('Clearing examples cache');\r\n    this.examples.clear();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the examples loader\r\n   */\r\n  destroy() {\r\n    this.logger.debug('Destroying examples loader');\r\n    this.clearCache();\r\n  }\r\n}\r\n","/**\r\n * Examples dropdown UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesDropdown {\r\n  /**\r\n   * Creates a new ExamplesDropdown instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} options - Configuration options\r\n   * @param {Function} [options.onSelect] - Callback when example is selected\r\n   */\r\n  constructor(container, options = {}) {\r\n    this.container = container;\r\n    this.onSelect = options.onSelect || (() => {});\r\n    this.examples = [];\r\n\r\n    this.createDropdown();\r\n  }\r\n\r\n  /**\r\n   * Creates the dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'examples-dropdown';\r\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n\r\n    this.dropdown.addEventListener('change', (e) => {\r\n      const exampleId = e.target.value;\r\n      if (exampleId) {\r\n        this.onSelect(exampleId);\r\n        // Reset to placeholder after selection\r\n        setTimeout(() => {\r\n          this.dropdown.value = '';\r\n        }, 100);\r\n      }\r\n    });\r\n\r\n    // Insert after the preview button (make examples last in toolbar)\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n    if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with examples\r\n   * @param {Array} examples - Array of example objects\r\n   */\r\n  setExamples(examples) {\r\n    this.examples = examples;\r\n\r\n    // Reset to normal placeholder first\r\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n\r\n    // Add example options\r\n    examples.forEach(example => {\r\n      const option = document.createElement('option');\r\n      option.value = example.id;\r\n      option.textContent = example.title;\r\n      option.title = example.description; // Tooltip\r\n      this.dropdown.appendChild(option);\r\n    });\r\n\r\n    // Enable dropdown if we have examples\r\n    this.dropdown.disabled = examples.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Shows loading state\r\n   */\r\n  setLoading(loading = true) {\r\n    if (loading) {\r\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\r\n      this.dropdown.disabled = true;\r\n    } else {\r\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\r\n      this.dropdown.disabled = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows error state\r\n   * @param {string} message - Error message to display\r\n   */\r\n  setError(message = 'Failed to load examples') {\r\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\r\n    this.dropdown.disabled = true;\r\n  }\r\n\r\n  /**\r\n   * Destroys the dropdown\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Theme switcher UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ThemeSwitcher {\r\n\r\n  /**\r\n   * Creates a new ThemeSwitcher instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} eventEmitter - The event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\r\n   * @param {boolean} [options.debug=true] - Enable debug logging\r\n   */\r\n  constructor(container, eventEmitter, options = {}) {\r\n    this.container = container;\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      defaultTheme: 'darcula',\r\n      debug: true,\r\n      storageKey: 'sandbox_current_theme',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'ThemeSwitcher'\r\n    });\r\n\r\n    // Define themes array first (needed for validation)\r\n    this.themes = [\r\n      { value: 'default', label: 'üè≥Ô∏è Default' },\r\n      { value: 'darcula', label: 'üåô Darcula' },\r\n      { value: 'monokai', label: 'üéØ Monokai' },\r\n      { value: 'solarized', label: '‚òÄÔ∏è Solarized Dark' },\r\n      { value: 'material', label: 'üì± Material' },\r\n      { value: 'dracula', label: 'üßõ Dracula' },\r\n      { value: 'tomorrow-night-eighties', label: 'üåâ Tomorrow Night' },\r\n      { value: 'base16-dark', label: 'üåÉ Base16 Dark' },\r\n      { value: 'blackboard', label: '‚ö´ Blackboard' },\r\n      { value: 'eclipse', label: 'üåÖ Eclipse' }\r\n    ];\r\n\r\n    // Load saved theme or use default (now that themes array exists)\r\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\r\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\r\n\r\n    this.createDropdown();\r\n\r\n    // Load CSS for the current theme on startup and emit events\r\n    this.initializeCurrentTheme();\r\n  }\r\n\r\n  /**\r\n   * Initializes the current theme by loading its CSS and emitting events\r\n   */\r\n  async initializeCurrentTheme() {\r\n    this.logger.info('Initializing current theme:', this.currentTheme);\r\n\r\n    // Emit that theme loading started\r\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\r\n      theme: this.currentTheme\r\n    });\r\n\r\n    try {\r\n      await this.loadThemeCSS(this.currentTheme);\r\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\r\n\r\n      // Emit that theme is ready for use\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: this.currentTheme\r\n      });\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load current theme CSS:', error);\r\n\r\n      // Emit error but fallback to default\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: 'darcula', // fallback\r\n        error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the theme switcher dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.theme-switcher');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\r\n    this.dropdown.title = 'Switch editor theme';\r\n\r\n    // Add theme options\r\n    this.populateThemes();\r\n\r\n    // Set default theme\r\n    this.dropdown.value = this.currentTheme;\r\n\r\n    this.dropdown.addEventListener('change', async (e) => {\r\n      const themeValue = e.target.value;\r\n      this.logger.info('Theme dropdown changed to:', themeValue);\r\n      this.logger.info('Current theme is:', this.currentTheme);\r\n\r\n      if (themeValue && themeValue !== this.currentTheme) {\r\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\r\n        await this.switchTheme(themeValue);\r\n      } else {\r\n        this.logger.warn('Theme value is empty or same as current theme');\r\n      }\r\n    });\r\n\r\n    // Insert after the examples dropdown if it exists, otherwise after preview button\r\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n\r\n    if (examplesDropdown) {\r\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\r\n    } else if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with available themes\r\n   */\r\n  populateThemes() {\r\n    // Clear existing options\r\n    this.dropdown.innerHTML = '';\r\n\r\n    // Add theme options\r\n    this.themes.forEach(theme => {\r\n      const option = document.createElement('option');\r\n      option.value = theme.value;\r\n      option.textContent = theme.label;\r\n      this.dropdown.appendChild(option);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads a CodeMirror theme CSS file if not already loaded\r\n   * @param {string} themeName - The theme name to load\r\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\r\n   */\r\n  async loadThemeCSS(themeName) {\r\n    // Skip loading for default theme (no CSS needed)\r\n    if (themeName === 'default') {\r\n      this.logger.info('Skipping CSS load for default theme');\r\n      return;\r\n    }\r\n\r\n    // Check if theme CSS is already loaded\r\n    const existingLink = document.querySelector(`link[href*=\"theme/${themeName}\"]`);\r\n    if (existingLink) {\r\n      this.logger.info('Theme CSS already loaded for:', themeName);\r\n      return;\r\n    }\r\n\r\n    // Load theme CSS dynamically\r\n    this.logger.info('Loading theme CSS for:', themeName);\r\n    const link = document.createElement('link');\r\n    link.rel = 'stylesheet';\r\n    link.href = `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/${themeName}.min.css`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      link.onload = () => {\r\n        this.logger.info('Theme CSS loaded successfully for:', themeName);\r\n        resolve();\r\n      };\r\n      link.onerror = () => {\r\n        this.logger.error('Failed to load theme CSS for:', themeName);\r\n        reject(new Error(`Failed to load theme: ${themeName}`));\r\n      };\r\n      document.head.appendChild(link);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads saved theme from localStorage\r\n   * @returns {string|null} Saved theme name or null if not found\r\n   */\r\n  loadSavedTheme() {\r\n    try {\r\n      const savedTheme = localStorage.getItem(this.options.storageKey);\r\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\r\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\r\n        return savedTheme;\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load saved theme:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Saves current theme to localStorage\r\n   * @param {string} themeName - Theme name to save\r\n   */\r\n  saveTheme(themeName) {\r\n    try {\r\n      localStorage.setItem(this.options.storageKey, themeName);\r\n      this.logger.info('Saved theme to storage:', themeName);\r\n    } catch (error) {\r\n      this.logger.warn('Failed to save theme:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to a new theme\r\n   * @param {string} themeName - The theme name to switch to\r\n   */\r\n  async switchTheme(themeName) {\r\n    const oldTheme = this.currentTheme;\r\n    this.currentTheme = themeName;\r\n\r\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\r\n\r\n    // Update dropdown value\r\n    this.dropdown.value = themeName;\r\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\r\n\r\n    try {\r\n      // Load theme CSS first\r\n      await this.loadThemeCSS(themeName);\r\n\r\n      // Save theme for persistence\r\n      this.saveTheme(themeName);\r\n\r\n      // Emit theme change event for editor adapters to listen to\r\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\r\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\r\n        theme: themeName,\r\n        oldTheme: oldTheme\r\n      });\r\n      this.logger.info('Theme change event emitted successfully');\r\n    } catch (error) {\r\n      this.logger.error('Failed to switch theme:', error);\r\n      // Revert dropdown to old theme\r\n      this.dropdown.value = oldTheme;\r\n      this.currentTheme = oldTheme;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current theme\r\n   * @returns {string} Current theme name\r\n   */\r\n  getCurrentTheme() {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  /**\r\n   * Sets the current theme programmatically\r\n   * @param {string} themeName - The theme name to set\r\n   */\r\n  setTheme(themeName) {\r\n    if (this.themes.find(t => t.value === themeName)) {\r\n      this.switchTheme(themeName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new theme to the list\r\n   * @param {string} value - Theme value/name\r\n   * @param {string} label - Display label for the theme\r\n   */\r\n  addTheme(value, label) {\r\n    // Check if theme already exists\r\n    if (!this.themes.find(t => t.value === value)) {\r\n      this.themes.push({ value, label });\r\n      this.populateThemes();\r\n      this.dropdown.value = this.currentTheme; // Restore selection\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the theme switcher\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Fullscreen manager for toggling between editor and console views\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class FullscreenManager {\r\n  /**\r\n   * Creates a new FullscreenManager instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(eventEmitter, options = {}) {\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      debug: false,\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'FullscreenManager'\r\n    });\r\n\r\n    this.currentMode = null; // null, 'editor', 'console'\r\n    this.appElement = null;\r\n    this.elements = {};\r\n    this.isChanging = false; // Recursion guard\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Initializes the fullscreen manager with DOM elements\r\n   * @param {Object} elements - DOM elements\r\n   * @param {HTMLElement} elements.app - Main app container\r\n   * @param {HTMLElement} elements.fullscreenEditor - Editor fullscreen button\r\n   * @param {HTMLElement} elements.fullscreenConsole - Console fullscreen button\r\n   */\r\n  init(elements) {\r\n    this.appElement = elements.app;\r\n    this.elements = elements;\r\n\r\n    this.logger.info('Fullscreen manager initialized');\r\n\r\n    // Add click listeners to fullscreen buttons\r\n    if (this.elements.fullscreenEditor) {\r\n      this.elements.fullscreenEditor.addEventListener('click', () => {\r\n        this.toggleFullscreen('editor');\r\n      });\r\n    }\r\n\r\n    if (this.elements.fullscreenConsole) {\r\n      this.elements.fullscreenConsole.addEventListener('click', () => {\r\n        this.toggleFullscreen('console');\r\n      });\r\n    }\r\n\r\n    // Add keyboard shortcut (F11 or Escape)\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'F11') {\r\n        e.preventDefault();\r\n        this.toggleFullscreen();\r\n      } else if (e.key === 'Escape' && this.currentMode) {\r\n        this.exitFullscreen();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for fullscreen events\r\n   */\r\n  setupEventListeners() {\r\n    this.eventEmitter.on(EVENTS.FULLSCREEN_TOGGLE, (mode) => {\r\n      this.toggleFullscreen(mode);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.FULLSCREEN_EXIT, () => {\r\n      this.exitFullscreen();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles fullscreen mode for specified pane\r\n   * @param {string} [mode] - 'editor', 'console', or null to cycle\r\n   */\r\n  toggleFullscreen(mode) {\r\n    if (!this.appElement) {\r\n      this.logger.warn('App element not initialized');\r\n      return;\r\n    }\r\n\r\n    // If no mode specified, cycle through modes\r\n    if (!mode) {\r\n      if (this.currentMode === null) {\r\n        mode = 'editor';\r\n      } else if (this.currentMode === 'editor') {\r\n        mode = 'console';\r\n      } else {\r\n        mode = null; // exit fullscreen\r\n      }\r\n    }\r\n\r\n    // If same mode is clicked, exit fullscreen\r\n    if (mode === this.currentMode) {\r\n      mode = null;\r\n    }\r\n\r\n    this.setFullscreenMode(mode);\r\n  }\r\n\r\n  /**\r\n   * Sets the fullscreen mode\r\n   * @param {string|null} mode - 'editor', 'console', or null for normal view\r\n   */\r\n  setFullscreenMode(mode) {\r\n    if (!this.appElement) return;\r\n\r\n    // Prevent recursion: if we're already changing or in the target mode, don't do anything\r\n    if (this.isChanging || mode === this.currentMode) return;\r\n\r\n    this.isChanging = true;\r\n    const previousMode = this.currentMode;\r\n\r\n    try {\r\n      // Remove all fullscreen classes\r\n      this.appElement.classList.remove('fullscreen-editor', 'fullscreen-console');\r\n\r\n      // Update button states\r\n      this.updateButtonStates(null);\r\n\r\n      if (mode) {\r\n        // Add appropriate fullscreen class\r\n        this.appElement.classList.add(`fullscreen-${mode}`);\r\n        this.updateButtonStates(mode);\r\n\r\n        this.logger.info(`Entering fullscreen mode: ${mode}`);\r\n        this.eventEmitter.emit(`FULLSCREEN_${mode.toUpperCase()}`, { mode });\r\n      } else if (previousMode) {\r\n        // Only emit exit event if we were actually in fullscreen before\r\n        this.logger.info('Exiting fullscreen mode');\r\n        this.eventEmitter.emit(EVENTS.FULLSCREEN_EXIT, { previousMode });\r\n      }\r\n\r\n      this.currentMode = mode;\r\n    } finally {\r\n      // Always clear the changing flag\r\n      this.isChanging = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates button states based on current mode\r\n   * @param {string|null} activeMode - Current active mode\r\n   */\r\n  updateButtonStates(activeMode) {\r\n    // Update editor button\r\n    if (this.elements.fullscreenEditor) {\r\n      if (activeMode === 'editor') {\r\n        this.elements.fullscreenEditor.textContent = '‚ó±'; // Exit symbol\r\n        this.elements.fullscreenEditor.title = 'Exit Fullscreen';\r\n      } else {\r\n        this.elements.fullscreenEditor.textContent = '‚õ∂'; // Fullscreen symbol\r\n        this.elements.fullscreenEditor.title = 'Fullscreen Editor';\r\n      }\r\n    }\r\n\r\n    // Update console button\r\n    if (this.elements.fullscreenConsole) {\r\n      if (activeMode === 'console') {\r\n        this.elements.fullscreenConsole.textContent = '‚ó±'; // Exit symbol\r\n        this.elements.fullscreenConsole.title = 'Exit Fullscreen';\r\n      } else {\r\n        this.elements.fullscreenConsole.textContent = '‚õ∂'; // Fullscreen symbol\r\n        this.elements.fullscreenConsole.title = 'Fullscreen Console';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Exits fullscreen mode\r\n   */\r\n  exitFullscreen() {\r\n    this.setFullscreenMode(null);\r\n  }\r\n\r\n  /**\r\n   * Gets the current fullscreen mode\r\n   * @returns {string|null} Current mode or null\r\n   */\r\n  getCurrentMode() {\r\n    return this.currentMode;\r\n  }\r\n\r\n  /**\r\n   * Checks if currently in fullscreen\r\n   * @returns {boolean} True if in fullscreen mode\r\n   */\r\n  isFullscreen() {\r\n    return this.currentMode !== null;\r\n  }\r\n\r\n  /**\r\n   * Destroys the fullscreen manager\r\n   */\r\n  destroy() {\r\n    this.exitFullscreen();\r\n    this.logger.info('Fullscreen manager destroyed');\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Library Manager - Handles CDN library loading with user-controlled allowlists\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class LibraryManager {\r\n  /**\r\n   * Creates a new LibraryManager instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.storageKey='sandbox_libraries'] - localStorage key\r\n   */\r\n  constructor(eventEmitter, options = {}) {\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      debug: false,\r\n      storageKey: 'sandbox_libraries',\r\n      allowlistKey: 'sandbox_allowed_domains',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'LibraryManager'\r\n    });\r\n\r\n    // Force a log message to test if logging is working\r\n    console.log('üîß LibraryManager created with debug:', this.options.debug);\r\n\r\n    // Default trusted CDN domains\r\n    this.defaultDomains = [\r\n      'cdnjs.cloudflare.com',\r\n      'unpkg.com',\r\n      'jsdelivr.net',\r\n      'code.jquery.com',\r\n      'stackpath.bootstrapcdn.com'\r\n    ];\r\n\r\n    this.libraries = [];\r\n    this.allowedDomains = [];\r\n    this.libraryCache = new Map(); // Cache for fetched library content\r\n\r\n    this.loadFromStorage();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for library management\r\n   */\r\n  setupEventListeners() {\r\n    this.eventEmitter.on(EVENTS.LIBRARY_ADD, (data) => {\r\n      this.addLibrary(data.url, data.name);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVE, (data) => {\r\n      this.removeLibrary(data.id);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\r\n      this.addDomain(data.domain);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads libraries and allowed domains from localStorage\r\n   */\r\n  loadFromStorage() {\r\n    this.logger.debug('Loading library data from localStorage...');\r\n\r\n    try {\r\n      // Load libraries\r\n      this.logger.debug(`Checking localStorage for key: ${this.options.storageKey}`);\r\n      const librariesData = localStorage.getItem(this.options.storageKey);\r\n      this.libraries = librariesData ? JSON.parse(librariesData) : [];\r\n      this.logger.debug(`Loaded ${this.libraries.length} libraries from storage`);\r\n\r\n      // Load allowed domains (merge with defaults)\r\n      this.logger.debug(`Checking localStorage for key: ${this.options.allowlistKey}`);\r\n      const domainsData = localStorage.getItem(this.options.allowlistKey);\r\n      const savedDomains = domainsData ? JSON.parse(domainsData) : [];\r\n      this.allowedDomains = [...new Set([...this.defaultDomains, ...savedDomains])];\r\n\r\n      this.logger.debug(`Merged domains - defaults: ${this.defaultDomains.length}, saved: ${savedDomains.length}, total: ${this.allowedDomains.length}`);\r\n      this.logger.info(`Storage load complete: ${this.libraries.length} libraries, ${this.allowedDomains.length} allowed domains`);\r\n\r\n      // Log library names for debugging\r\n      if (this.libraries.length > 0) {\r\n        this.logger.debug('Loaded libraries:', this.libraries.map(lib => lib.name).join(', '));\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to load from storage:', error);\r\n      this.logger.warn('Falling back to empty state with default domains');\r\n      this.libraries = [];\r\n      this.allowedDomains = [...this.defaultDomains];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves libraries to localStorage\r\n   */\r\n  saveLibraries() {\r\n    this.logger.debug(`Saving ${this.libraries.length} libraries to localStorage...`);\r\n    try {\r\n      const serialized = JSON.stringify(this.libraries);\r\n      localStorage.setItem(this.options.storageKey, serialized);\r\n      this.logger.debug(`Libraries saved successfully (${serialized.length} chars)`);\r\n    } catch (error) {\r\n      this.logger.error('Failed to save libraries to localStorage:', error);\r\n      if (error.name === 'QuotaExceededError') {\r\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves allowed domains to localStorage\r\n   */\r\n  saveDomains() {\r\n    // Only save non-default domains to avoid bloating storage\r\n    const customDomains = this.allowedDomains.filter(\r\n      domain => !this.defaultDomains.includes(domain)\r\n    );\r\n\r\n    this.logger.debug(`Saving ${customDomains.length} custom domains to localStorage...`);\r\n    try {\r\n      const serialized = JSON.stringify(customDomains);\r\n      localStorage.setItem(this.options.allowlistKey, serialized);\r\n      this.logger.debug(`Custom domains saved successfully: [${customDomains.join(', ')}]`);\r\n    } catch (error) {\r\n      this.logger.error('Failed to save domains to localStorage:', error);\r\n      if (error.name === 'QuotaExceededError') {\r\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates a unique ID for a library\r\n   * @returns {string} Unique identifier\r\n   */\r\n  generateId() {\r\n    return 'lib_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  /**\r\n   * Extracts domain from URL\r\n   * @param {string} url - The URL to extract domain from\r\n   * @returns {string|null} Domain or null if invalid\r\n   */\r\n  extractDomain(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.hostname;\r\n    } catch (error) {\r\n      this.logger.warn('Invalid URL provided:', url);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts library name from URL (best guess)\r\n   * @param {string} url - The library URL\r\n   * @returns {string} Guessed library name\r\n   */\r\n  guessLibraryName(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const pathname = urlObj.pathname;\r\n\r\n      // Extract filename without extension\r\n      const filename = pathname.split('/').pop();\r\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\r\n\r\n      // Common library name patterns\r\n      const patterns = [\r\n        /^(.+?)[-.][\\d]/,  // name-version or name.version\r\n        /^(.+?)\\.min$/,    // name.min\r\n        /^(.+?)$/          // fallback to full name\r\n      ];\r\n\r\n      for (const pattern of patterns) {\r\n        const match = nameWithoutExt.match(pattern);\r\n        if (match && match[1]) {\r\n          return match[1].charAt(0).toUpperCase() + match[1].slice(1);\r\n        }\r\n      }\r\n\r\n      return nameWithoutExt || 'Unknown Library';\r\n    } catch (error) {\r\n      return 'Unknown Library';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts version from URL (best guess)\r\n   * @param {string} url - The library URL\r\n   * @returns {string|null} Version string or null if not found\r\n   */\r\n  extractVersionFromUrl(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const pathname = urlObj.pathname;\r\n\r\n      // Extract filename without extension\r\n      const filename = pathname.split('/').pop();\r\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\r\n\r\n      // Version extraction patterns\r\n      const versionPatterns = [\r\n        /[-.](\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)/,  // semantic version (e.g., jquery-3.6.0.min.js)\r\n        /[-.](\\d+\\.\\d+\\.\\d+)/,                              // x.y.z version\r\n        /[-.](\\d+\\.\\d+)/,                                   // x.y version\r\n        /\\/(\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)\\//  // version in path (e.g., /3.6.0/)\r\n      ];\r\n\r\n      for (const pattern of versionPatterns) {\r\n        const match = url.match(pattern) || nameWithoutExt.match(pattern);\r\n        if (match && match[1]) {\r\n          return match[1];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a domain is in the allowed list\r\n   * @param {string} domain - Domain to check\r\n   * @returns {boolean} True if domain is allowed\r\n   */\r\n  isDomainAllowed(domain) {\r\n    return this.allowedDomains.includes(domain);\r\n  }\r\n\r\n  /**\r\n   * Validates a library URL\r\n   * @param {string} url - URL to validate\r\n   * @returns {Object} Validation result with status and domain\r\n   */\r\n  validateLibraryUrl(url) {\r\n    if (!url || typeof url !== 'string') {\r\n      return { valid: false, error: 'URL is required' };\r\n    }\r\n\r\n    // Basic URL validation\r\n    const domain = this.extractDomain(url);\r\n    if (!domain) {\r\n      return { valid: false, error: 'Invalid URL format' };\r\n    }\r\n\r\n    // Check if URL points to a JavaScript file\r\n    if (!url.match(/\\.js(\\?.*)?$/i)) {\r\n      return { valid: false, error: 'URL must point to a JavaScript file (.js)' };\r\n    }\r\n\r\n    // Check if domain is allowed\r\n    const domainAllowed = this.isDomainAllowed(domain);\r\n\r\n    return {\r\n      valid: true,\r\n      domain,\r\n      domainAllowed,\r\n      needsDomainApproval: !domainAllowed\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Adds a library to the collection\r\n   * @param {string} url - Library URL\r\n   * @param {string} [name] - Optional library name (will be guessed if not provided)\r\n   * @returns {Object} Result object with success status\r\n   */\r\n  addLibrary(url, name = null) {\r\n    const validation = this.validateLibraryUrl(url);\r\n\r\n    if (!validation.valid) {\r\n      this.logger.warn('Library validation failed:', validation.error);\r\n      return { success: false, error: validation.error };\r\n    }\r\n\r\n    // Check if library already exists\r\n    const existing = this.libraries.find(lib => lib.url === url);\r\n    if (existing) {\r\n      this.logger.warn('Library already exists:', url);\r\n      return { success: false, error: 'Library already added' };\r\n    }\r\n\r\n    // Check domain approval\r\n    if (validation.needsDomainApproval) {\r\n      this.logger.info('Domain approval needed for:', validation.domain);\r\n      this.eventEmitter.emit(EVENTS.DOMAIN_TRUST_REQUEST, {\r\n        domain: validation.domain,\r\n        url,\r\n        name: name || this.guessLibraryName(url)\r\n      });\r\n      return { success: false, needsApproval: true, domain: validation.domain };\r\n    }\r\n\r\n    // Add the library\r\n    const library = {\r\n      id: this.generateId(),\r\n      name: name || this.guessLibraryName(url),\r\n      url: url.trim(),\r\n      domain: validation.domain,\r\n      addedAt: new Date().toISOString()\r\n    };\r\n\r\n    this.libraries.push(library);\r\n    this.saveLibraries();\r\n\r\n    this.logger.info('Library added:', library.name);\r\n    this.eventEmitter.emit(EVENTS.LIBRARY_ADDED, { library });\r\n\r\n    return { success: true, library };\r\n  }\r\n\r\n  /**\r\n   * Removes a library by ID\r\n   * @param {string} id - Library ID to remove\r\n   * @returns {boolean} True if library was removed\r\n   */\r\n  removeLibrary(id) {\r\n    const index = this.libraries.findIndex(lib => lib.id === id);\r\n    if (index === -1) {\r\n      this.logger.warn('Library not found for removal:', id);\r\n      return false;\r\n    }\r\n\r\n    const removed = this.libraries.splice(index, 1)[0];\r\n    this.saveLibraries();\r\n\r\n    this.logger.info('Library removed:', removed.name);\r\n    this.eventEmitter.emit(EVENTS.LIBRARY_REMOVED, { library: removed });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Adds a domain to the allowed list\r\n   * @param {string} domain - Domain to add\r\n   * @returns {boolean} True if domain was added\r\n   */\r\n  addDomain(domain) {\r\n    if (!domain || this.allowedDomains.includes(domain)) {\r\n      return false;\r\n    }\r\n\r\n    this.allowedDomains.push(domain);\r\n    this.saveDomains();\r\n\r\n    this.logger.info('Domain added to allowlist:', domain);\r\n    this.eventEmitter.emit(EVENTS.DOMAIN_ADDED, { domain });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Removes a domain from the allowed list (if not default)\r\n   * @param {string} domain - Domain to remove\r\n   * @returns {boolean} True if domain was removed\r\n   */\r\n  removeDomain(domain) {\r\n    if (this.defaultDomains.includes(domain)) {\r\n      this.logger.warn('Cannot remove default domain:', domain);\r\n      return false;\r\n    }\r\n\r\n    const index = this.allowedDomains.indexOf(domain);\r\n    if (index === -1) {\r\n      return false;\r\n    }\r\n\r\n    this.allowedDomains.splice(index, 1);\r\n    this.saveDomains();\r\n\r\n    this.logger.info('Domain removed from allowlist:', domain);\r\n    this.eventEmitter.emit(EVENTS.DOMAIN_REMOVED, { domain });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Gets all libraries\r\n   * @returns {Array} Array of library objects\r\n   */\r\n  getLibraries() {\r\n    return [...this.libraries];\r\n  }\r\n\r\n  /**\r\n   * Gets all allowed domains\r\n   * @returns {Array} Array of allowed domains\r\n   */\r\n  getAllowedDomains() {\r\n    return [...this.allowedDomains];\r\n  }\r\n\r\n  /**\r\n   * Fetches library content and generates inline script tags\r\n   * @returns {Promise<string>} HTML script tags with inline content\r\n   */\r\n  async generateScriptTags() {\r\n    if (this.libraries.length === 0) {\r\n      this.logger.debug('No libraries to generate scripts for');\r\n      return '';\r\n    }\r\n\r\n    this.logger.info(`Fetching content for ${this.libraries.length} libraries...`);\r\n    const scripts = [];\r\n\r\n    for (const lib of this.libraries) {\r\n      try {\r\n        let content;\r\n\r\n        // Check cache first\r\n        if (this.libraryCache.has(lib.url)) {\r\n          this.logger.debug(`Using cached content for: ${lib.name}`);\r\n          content = this.libraryCache.get(lib.url);\r\n        } else {\r\n          this.logger.debug(`Fetching library: ${lib.name} from ${lib.url}`);\r\n\r\n          const response = await fetch(lib.url);\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n          }\r\n\r\n          content = await response.text();\r\n          this.logger.debug(`Fetched ${lib.name}: ${content.length} characters`);\r\n\r\n          // Cache the content\r\n          this.libraryCache.set(lib.url, content);\r\n        }\r\n\r\n        // Create clean inline script with library content\r\n        scripts.push(`  <script data-library=\"${lib.name}\">\r\n/* Library: ${lib.name} */\r\n/* Source: ${lib.url} */\r\n/* Cached: ${new Date().toISOString()} */\r\n${content}\r\n</script>`);\r\n\r\n        this.logger.info(`‚úÖ Successfully loaded library: ${lib.name}`);\r\n      } catch (error) {\r\n        this.logger.error(`‚ùå Failed to fetch library ${lib.name}:`, error.message);\r\n\r\n        // Add error placeholder script\r\n        scripts.push(`  <script data-library=\"${lib.name}\">\r\n/* Library: ${lib.name} - FAILED TO LOAD */\r\n/* Error: ${error.message} */\r\n/* URL: ${lib.url} */\r\nconsole.error('Failed to load library ${lib.name}: ${error.message}');\r\n</script>`);\r\n      }\r\n    }\r\n\r\n    const result = scripts.join('\\n');\r\n\r\n    // Enhanced logging for library injection\r\n    if (this.libraries.length > 0) {\r\n      const libraryNames = this.libraries.map(lib => lib.name).join(', ');\r\n      this.logger.info(`üìö Injecting ${this.libraries.length} libraries into sandbox: ${libraryNames}`);\r\n\r\n      // Log each library with detailed info including version detection\r\n      this.libraries.forEach(lib => {\r\n        const scriptSize = scripts.find(s => s.includes(`data-library=\"${lib.name}\"`))?.length || 0;\r\n        const version = this.extractVersionFromUrl(lib.url);\r\n        const versionInfo = version ? ` v${version}` : '';\r\n        this.logger.debug(`  ‚Üí ${lib.name}${versionInfo}: ${(scriptSize / 1024).toFixed(1)}KB from ${lib.url}`);\r\n      });\r\n\r\n      this.logger.info(`üì¶ Total script injection size: ${(result.length / 1024).toFixed(1)}KB`);\r\n    } else {\r\n      this.logger.debug('No libraries to inject into sandbox');\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates dynamic CSP policy with allowed domains\r\n   * @returns {string} CSP policy string\r\n   */\r\n  generateCSP() {\r\n    const scriptSrc = [\r\n      \"'self'\",\r\n      \"'unsafe-inline'\",\r\n      \"'unsafe-eval'\",\r\n      ...this.allowedDomains.map(domain => `https://${domain}`)\r\n    ].join(' ');\r\n\r\n    return `default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; script-src ${scriptSrc}; connect-src 'none';`;\r\n  }\r\n\r\n  /**\r\n   * Gets library statistics\r\n   * @returns {Object} Statistics object\r\n   */\r\n  getStats() {\r\n    return {\r\n      libraryCount: this.libraries.length,\r\n      domainCount: this.allowedDomains.length,\r\n      customDomainCount: this.allowedDomains.length - this.defaultDomains.length\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clears all libraries and custom domains\r\n   */\r\n  clear() {\r\n    this.libraries = [];\r\n    this.allowedDomains = [...this.defaultDomains];\r\n\r\n    localStorage.removeItem(this.options.storageKey);\r\n    localStorage.removeItem(this.options.allowlistKey);\r\n\r\n    this.logger.info('All libraries and custom domains cleared');\r\n    this.eventEmitter.emit(EVENTS.LIBRARIES_CLEARED);\r\n  }\r\n\r\n  /**\r\n   * Test method to verify logging is working\r\n   */\r\n  testLogging() {\r\n    console.log('üß™ LibraryManager test logging - debug enabled:', this.options.debug);\r\n    this.logger.debug('This is a debug message');\r\n    this.logger.info('This is an info message');\r\n    this.logger.warn('This is a warn message');\r\n    this.logger.error('This is an error message');\r\n  }\r\n\r\n  /**\r\n   * Destroys the library manager\r\n   */\r\n  destroy() {\r\n    this.libraries = [];\r\n    this.allowedDomains = [];\r\n    this.logger.info('Library manager destroyed');\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\n\r\n/**\r\n * Base Dialog - Reusable dialog foundation with neon glow effects\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class BaseDialog {\r\n  /**\r\n   * Creates a new BaseDialog instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} options.title - Dialog title\r\n   * @param {string} [options.className=''] - Additional CSS classes\r\n   * @param {boolean} [options.modal=true] - Whether dialog is modal\r\n   * @param {boolean} [options.closeOnBackdrop=true] - Close on backdrop click\r\n   * @param {boolean} [options.closeOnEscape=true] - Close on Escape key\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.logPrefix='BaseDialog'] - Logger prefix\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      title: 'Dialog',\r\n      className: '',\r\n      modal: true,\r\n      closeOnBackdrop: true,\r\n      closeOnEscape: true,\r\n      debug: false,\r\n      logPrefix: 'BaseDialog',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: this.options.logPrefix\r\n    });\r\n\r\n    this.dialog = null;\r\n    this.content = null;\r\n    this.isOpen = false;\r\n    this.closeButton = null;\r\n\r\n    this.logger.debug('BaseDialog instance created with options:', this.options);\r\n    this.createDialog();\r\n  }\r\n\r\n  /**\r\n   * Creates the base dialog structure\r\n   */\r\n  createDialog() {\r\n    this.logger.debug('Creating dialog structure...');\r\n\r\n    // Create dialog element\r\n    this.dialog = document.createElement('dialog');\r\n    this.dialog.className = `base-dialog ${this.options.className}`.trim();\r\n\r\n    // Create dialog content wrapper\r\n    this.content = document.createElement('div');\r\n    this.content.className = 'dialog-content';\r\n\r\n    // Create header\r\n    const header = document.createElement('header');\r\n    header.className = 'dialog-header';\r\n    header.innerHTML = `\r\n      <h3 class=\"dialog-title\">${this.options.title}</h3>\r\n      <button class=\"close-btn\" title=\"Close\">√ó</button>\r\n    `;\r\n\r\n    // Cache close button reference\r\n    this.closeButton = header.querySelector('.close-btn');\r\n\r\n    // Create body container (to be populated by subclasses)\r\n    const body = document.createElement('div');\r\n    body.className = 'dialog-body';\r\n\r\n    // Assemble dialog\r\n    this.content.appendChild(header);\r\n    this.content.appendChild(body);\r\n    this.dialog.appendChild(this.content);\r\n\r\n    // Add to document\r\n    document.body.appendChild(this.dialog);\r\n\r\n    this.logger.debug('Dialog structure created and added to DOM');\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up base event listeners\r\n   */\r\n  setupEventListeners() {\r\n    this.logger.debug('Setting up base event listeners...');\r\n\r\n    // Close button\r\n    if (this.closeButton) {\r\n      this.closeButton.addEventListener('click', () => {\r\n        this.logger.debug('Close button clicked');\r\n        this.close();\r\n      });\r\n    }\r\n\r\n    // Backdrop click\r\n    if (this.options.closeOnBackdrop) {\r\n      this.dialog.addEventListener('click', (e) => {\r\n        if (e.target === this.dialog) {\r\n          this.logger.debug('Backdrop clicked, closing dialog');\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    // Escape key\r\n    if (this.options.closeOnEscape) {\r\n      this.dialog.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Escape') {\r\n          this.logger.debug('Escape key pressed, closing dialog');\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.logger.debug('Base event listeners configured');\r\n  }\r\n\r\n  /**\r\n   * Gets the dialog body element for content injection\r\n   * @returns {HTMLElement} The dialog body element\r\n   */\r\n  getBody() {\r\n    return this.content.querySelector('.dialog-body');\r\n  }\r\n\r\n  /**\r\n   * Sets the dialog title\r\n   * @param {string} title - New title\r\n   */\r\n  setTitle(title) {\r\n    this.logger.debug(`Setting dialog title to: \"${title}\"`);\r\n    const titleElement = this.content.querySelector('.dialog-title');\r\n    if (titleElement) {\r\n      titleElement.textContent = title;\r\n      this.options.title = title;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the dialog\r\n   * @param {Object} [options={}] - Open options\r\n   * @param {boolean} [options.focus=true] - Whether to focus the dialog\r\n   */\r\n  open(options = {}) {\r\n    const { focus = true } = options;\r\n\r\n    if (this.isOpen) {\r\n      this.logger.warn('Dialog is already open');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Opening dialog...');\r\n\r\n    // Call pre-open hook\r\n    this.onBeforeOpen();\r\n\r\n    // Show dialog\r\n    if (this.options.modal) {\r\n      this.dialog.showModal();\r\n    } else {\r\n      this.dialog.show();\r\n    }\r\n\r\n    this.isOpen = true;\r\n\r\n    // Focus management\r\n    if (focus) {\r\n      setTimeout(() => {\r\n        this.dialog.focus();\r\n        this.onFocus();\r\n      }, 100);\r\n    }\r\n\r\n    // Call post-open hook\r\n    this.onAfterOpen();\r\n\r\n    this.logger.info('Dialog opened successfully');\r\n  }\r\n\r\n  /**\r\n   * Closes the dialog\r\n   */\r\n  close() {\r\n    if (!this.isOpen) {\r\n      this.logger.warn('Dialog is already closed');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Closing dialog...');\r\n\r\n    // Call pre-close hook\r\n    this.onBeforeClose();\r\n\r\n    this.dialog.close();\r\n    this.isOpen = false;\r\n\r\n    // Call post-close hook\r\n    this.onAfterClose();\r\n\r\n    this.logger.info('Dialog closed successfully');\r\n  }\r\n\r\n  /**\r\n   * Toggles the dialog open/closed state\r\n   */\r\n  toggle() {\r\n    this.logger.debug('Toggling dialog state');\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if dialog is currently open\r\n   * @returns {boolean} True if dialog is open\r\n   */\r\n  isDialogOpen() {\r\n    return this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Adds content to the dialog body\r\n   * @param {string|HTMLElement} content - Content to add\r\n   */\r\n  setContent(content) {\r\n    this.logger.debug('Setting dialog content...');\r\n    const body = this.getBody();\r\n\r\n    if (typeof content === 'string') {\r\n      body.innerHTML = content;\r\n    } else if (content instanceof HTMLElement) {\r\n      body.innerHTML = '';\r\n      body.appendChild(content);\r\n    }\r\n\r\n    this.logger.debug('Dialog content updated');\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS class to the dialog\r\n   * @param {string} className - Class name to add\r\n   */\r\n  addClass(className) {\r\n    this.logger.debug(`Adding class: ${className}`);\r\n    this.dialog.classList.add(className);\r\n  }\r\n\r\n  /**\r\n   * Removes a CSS class from the dialog\r\n   * @param {string} className - Class name to remove\r\n   */\r\n  removeClass(className) {\r\n    this.logger.debug(`Removing class: ${className}`);\r\n    this.dialog.classList.remove(className);\r\n  }\r\n\r\n  // Lifecycle hooks (to be overridden by subclasses)\r\n\r\n  /**\r\n   * Called before dialog opens\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onBeforeOpen() {\r\n    this.logger.debug('onBeforeOpen hook called');\r\n  }\r\n\r\n  /**\r\n   * Called after dialog opens\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onAfterOpen() {\r\n    this.logger.debug('onAfterOpen hook called');\r\n  }\r\n\r\n  /**\r\n   * Called when dialog receives focus\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onFocus() {\r\n    this.logger.debug('onFocus hook called');\r\n  }\r\n\r\n  /**\r\n   * Called before dialog closes\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onBeforeClose() {\r\n    this.logger.debug('onBeforeClose hook called');\r\n  }\r\n\r\n  /**\r\n   * Called after dialog closes\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onAfterClose() {\r\n    this.logger.debug('onAfterClose hook called');\r\n  }\r\n\r\n  /**\r\n   * Destroys the dialog and cleans up resources\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying dialog...');\r\n\r\n    if (this.isOpen) {\r\n      this.close();\r\n    }\r\n\r\n    if (this.dialog) {\r\n      this.dialog.remove();\r\n      this.dialog = null;\r\n    }\r\n\r\n    this.content = null;\r\n    this.closeButton = null;\r\n    this.isOpen = false;\r\n\r\n    this.logger.info('Dialog destroyed successfully');\r\n  }\r\n}","import { BaseDialog } from '../ui/base-dialog.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Library Manager Dialog - UI for managing runtime libraries\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class LibraryDialog extends BaseDialog {\r\n  /**\r\n   * Creates a new LibraryDialog instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} libraryManager - Library manager instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(eventEmitter, libraryManager, options = {}) {\r\n    // Call parent constructor with dialog-specific options\r\n    super({\r\n      title: 'Runtime Libraries',\r\n      className: 'library-dialog',\r\n      debug: options.debug || false,\r\n      logPrefix: 'LibraryDialog',\r\n      ...options\r\n    });\r\n\r\n    this.eventEmitter = eventEmitter;\r\n    this.libraryManager = libraryManager;\r\n\r\n    this.urlInput = null;\r\n    this.addBtn = null;\r\n    this.libraryList = null;\r\n\r\n    // Force a log message to test if logging is working\r\n    console.log('üîß LibraryDialog created with debug:', this.options.debug);\r\n\r\n    this.logger.info('LibraryDialog initializing...');\r\n    this.createLibraryContent();\r\n    this.setupLibraryEventListeners();\r\n    this.logger.info('LibraryDialog initialization complete');\r\n  }\r\n\r\n  /**\r\n   * Creates the library-specific content for the dialog\r\n   */\r\n  createLibraryContent() {\r\n    this.logger.debug('Creating library-specific dialog content...');\r\n\r\n    const body = this.getBody();\r\n    body.innerHTML = `\r\n      <section class=\"current-libraries\">\r\n        <p class=\"descriptor\">Manage libraries loaded into the sandbox environment</p>\r\n        <div class=\"library-list\">\r\n          <div class=\"empty-state\">\r\n            <span class=\"empty-icon\">üìö</span>\r\n            <p>No libraries added yet</p>\r\n            <small>Add a CDN URL below to get started</small>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"add-library\">\r\n        <h4>Add Library</h4>\r\n        <p class=\"descriptor\">Paste CDN URL to add a new library to your sandbox</p>\r\n        <div class=\"input-row\">\r\n          <input type=\"url\" class=\"url-input\" placeholder=\"https://cdnjs.cloudflare.com/ajax/libs/...\">\r\n          <button class=\"add-btn\">Add</button>\r\n        </div>\r\n        <div class=\"input-feedback\"></div>\r\n      </section>\r\n    `;\r\n\r\n    // Cache element references\r\n    this.urlInput = body.querySelector('.url-input');\r\n    this.addBtn = body.querySelector('.add-btn');\r\n    this.libraryList = body.querySelector('.library-list');\r\n\r\n    // Setup library-specific event listeners\r\n    this.addBtn.addEventListener('click', () => {\r\n      this.logger.debug('Add button clicked');\r\n      this.handleAddLibrary();\r\n    });\r\n\r\n    this.urlInput.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter') {\r\n        this.logger.debug('Enter key pressed in URL input');\r\n        this.handleAddLibrary();\r\n      }\r\n    });\r\n\r\n    this.logger.debug('Library content created successfully');\r\n  }\r\n\r\n  /**\r\n   * Sets up library-specific event listeners\r\n   */\r\n  setupLibraryEventListeners() {\r\n    this.logger.debug('Setting up library event listeners...');\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_MANAGER_OPEN, () => {\r\n      this.logger.info('Received LIBRARY_MANAGER_OPEN event');\r\n      this.open();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_ADDED, (data) => {\r\n      this.logger.info('Received LIBRARY_ADDED event for:', data?.library?.name);\r\n      this.refreshLibraryList();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVED, (data) => {\r\n      this.logger.info('Received LIBRARY_REMOVED event for:', data?.library?.name);\r\n      this.refreshLibraryList();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\r\n      this.logger.warn('Received DOMAIN_TRUST_REQUEST for domain:', data?.domain);\r\n      this.showDomainTrustDialog(data);\r\n    });\r\n\r\n    this.logger.debug('Library event listeners configured');\r\n  }\r\n\r\n  /**\r\n   * Called before dialog opens - prepare library content\r\n   */\r\n  onBeforeOpen() {\r\n    this.logger.debug('Preparing library dialog for opening...');\r\n    this.refreshLibraryList();\r\n    this.urlInput.value = '';\r\n    this.clearFeedback();\r\n  }\r\n\r\n  /**\r\n   * Called when dialog receives focus - focus URL input\r\n   */\r\n  onFocus() {\r\n    this.logger.debug('Library dialog focused, focusing URL input');\r\n    if (this.urlInput) {\r\n      this.urlInput.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called after dialog closes - clear feedback\r\n   */\r\n  onAfterClose() {\r\n    this.logger.debug('Library dialog closed, clearing feedback');\r\n    this.clearFeedback();\r\n  }\r\n\r\n  /**\r\n   * Handles adding a new library\r\n   */\r\n  handleAddLibrary() {\r\n    const url = this.urlInput.value.trim();\r\n    this.logger.debug('handleAddLibrary called with URL:', url);\r\n\r\n    if (!url) {\r\n      this.logger.warn('Add library attempted with empty URL');\r\n      this.showFeedback('Please enter a library URL', 'error');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Attempting to add library:', url);\r\n    this.showFeedback('Adding library...', 'loading');\r\n    this.addBtn.disabled = true;\r\n\r\n    // Attempt to add the library\r\n    const result = this.libraryManager.addLibrary(url);\r\n    this.logger.debug('Library manager result:', result);\r\n\r\n    if (result.success) {\r\n      this.logger.info(`Library added successfully: ${result.library.name}`);\r\n      this.showFeedback(`Added: ${result.library.name}`, 'success');\r\n      this.urlInput.value = '';\r\n      setTimeout(() => {\r\n        this.logger.debug('Clearing success feedback after timeout');\r\n        this.clearFeedback();\r\n      }, 2000);\r\n    } else if (result.needsApproval) {\r\n      this.logger.warn(`Domain approval needed for: ${result.domain}`);\r\n      this.showFeedback(`Waiting for domain approval: ${result.domain}`, 'warning');\r\n      // Dialog will be shown by domain trust request event\r\n    } else {\r\n      this.logger.error(`Failed to add library: ${result.error}`);\r\n      this.showFeedback(`Error: ${result.error}`, 'error');\r\n    }\r\n\r\n    this.addBtn.disabled = false;\r\n    this.logger.debug('Add library operation completed');\r\n  }\r\n\r\n  /**\r\n   * Shows domain trust confirmation dialog\r\n   * @param {Object} data - Domain trust data\r\n   */\r\n  showDomainTrustDialog(data) {\r\n    this.logger.info(`Showing domain trust dialog for: ${data.domain}`);\r\n\r\n    const confirmed = confirm(\r\n      `‚ö†Ô∏è New CDN Domain Detected\\n\\n` +\r\n      `The domain \"${data.domain}\" is not in your trusted list.\\n\\n` +\r\n      `Adding this domain will allow all scripts from:\\n` +\r\n      `https://${data.domain}\\n\\n` +\r\n      `Do you want to trust this domain?`\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.logger.info(`User confirmed trust for domain: ${data.domain}`);\r\n      this.libraryManager.addDomain(data.domain);\r\n\r\n      // Try adding the library again\r\n      this.logger.debug(`Retrying library addition for: ${data.url}`);\r\n      const result = this.libraryManager.addLibrary(data.url, data.name);\r\n\r\n      if (result.success) {\r\n        this.logger.info(`Library added after domain approval: ${result.library.name}`);\r\n        this.showFeedback(`Added: ${result.library.name}`, 'success');\r\n        this.urlInput.value = '';\r\n        setTimeout(() => {\r\n          this.logger.debug('Clearing success feedback after domain approval');\r\n          this.clearFeedback();\r\n        }, 2000);\r\n      } else {\r\n        this.logger.error(`Library addition failed after domain approval: ${result.error}`);\r\n        this.showFeedback(`Error: ${result.error}`, 'error');\r\n      }\r\n    } else {\r\n      this.logger.info(`User cancelled domain trust for: ${data.domain}`);\r\n      this.showFeedback('Library addition cancelled', 'info');\r\n      setTimeout(() => {\r\n        this.logger.debug('Clearing cancellation feedback');\r\n        this.clearFeedback();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refreshes the library list display\r\n   */\r\n  refreshLibraryList() {\r\n    this.logger.debug('Refreshing library list display...');\r\n    const libraries = this.libraryManager.getLibraries();\r\n\r\n    if (libraries.length === 0) {\r\n      this.logger.debug('No libraries found, showing empty state');\r\n      this.libraryList.innerHTML = `\r\n        <div class=\"empty-state\">\r\n          <span class=\"empty-icon\">üìö</span>\r\n          <p>No libraries added yet</p>\r\n          <small>Add a CDN URL below to get started</small>\r\n        </div>\r\n      `;\r\n    } else {\r\n      this.logger.info(`Displaying ${libraries.length} libraries in list`);\r\n      this.libraryList.innerHTML = libraries.map(lib => {\r\n        this.logger.trace(`Rendering library item: ${lib.name}`);\r\n        return `\r\n          <div class=\"library-item\" data-id=\"${lib.id}\">\r\n            <div class=\"library-info\">\r\n              <span class=\"library-name\">${lib.name}</span>\r\n              <small class=\"library-url\">${lib.url}</small>\r\n            </div>\r\n            <button class=\"remove-btn\" title=\"Remove library\" data-id=\"${lib.id}\">üóëÔ∏è</button>\r\n          </div>\r\n        `;\r\n      }).join('');\r\n\r\n      // Add remove button listeners\r\n      this.libraryList.querySelectorAll('.remove-btn').forEach(btn => {\r\n        btn.addEventListener('click', (e) => {\r\n          const id = e.target.dataset.id;\r\n          const library = libraries.find(lib => lib.id === id);\r\n          this.logger.info(`Remove button clicked for library: ${library?.name || id}`);\r\n          this.libraryManager.removeLibrary(id);\r\n        });\r\n      });\r\n\r\n      this.logger.debug('Remove button listeners attached to all library items');\r\n    }\r\n\r\n    this.logger.debug(`Library list refresh completed: ${libraries.length} libraries displayed`);\r\n  }\r\n\r\n  /**\r\n   * Shows feedback message\r\n   * @param {string} message - Message to show\r\n   * @param {string} type - Type of feedback (success, error, warning, info, loading)\r\n   */\r\n  showFeedback(message, type = 'info') {\r\n    this.logger.debug(`Showing ${type} feedback: ${message}`);\r\n    const feedback = this.getBody().querySelector('.input-feedback');\r\n    if (feedback) {\r\n      feedback.textContent = message;\r\n      feedback.className = `input-feedback ${type}`;\r\n    } else {\r\n      this.logger.warn('Feedback element not found in dialog body');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears feedback message\r\n   */\r\n  clearFeedback() {\r\n    this.logger.debug('Clearing feedback message');\r\n    const feedback = this.getBody().querySelector('.input-feedback');\r\n    if (feedback) {\r\n      feedback.textContent = '';\r\n      feedback.className = 'input-feedback';\r\n    }\r\n  }\r\n}","/**\r\n * Neon Glass Glow Effect Manager\r\n * Applies animated neon glass borders to UI elements\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { Logger } from '../core/logger.js';\r\n\r\nexport class NeonGlowManager {\r\n  /**\r\n   * Creates a new NeonGlowManager instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\r\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      transitionDuration: 8000,\r\n      autoRotate: true,\r\n      debug: false,\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'NeonGlow'\r\n    });\r\n\r\n    this.hue1 = this.randomHue();\r\n    this.hue2 = this.randomHue();\r\n    this.rotationInterval = null;\r\n    this.glowElements = new Set();\r\n  }\r\n\r\n  /**\r\n   * Generates a random hue value\r\n   * @returns {number} Hue between 0-360\r\n   */\r\n  randomHue() {\r\n    return Math.floor(Math.random() * 360);\r\n  }\r\n\r\n  /**\r\n   * Generates a complementary hue with some variance\r\n   * @param {number} baseHue - Base hue value\r\n   * @returns {number} Complementary hue\r\n   */\r\n  complementaryHue(baseHue) {\r\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\r\n    return (baseHue + offset) % 360;\r\n  }\r\n\r\n  /**\r\n   * Applies neon glow effect to an element\r\n   * @param {HTMLElement} element - Element to apply glow to\r\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\r\n   */\r\n  applyGlow(element, options = {}) {\r\n    // Add neon-glow class\r\n    element.classList.add('neon-glow');\r\n\r\n    // Create glow container\r\n    const glowContainer = document.createElement('div');\r\n    glowContainer.className = 'neon-glow-container';\r\n\r\n    // Create SINGLE glow element that covers entire pane\r\n    const shine = document.createElement('div');\r\n    shine.className = 'neon-shine';\r\n    glowContainer.appendChild(shine);\r\n\r\n    element.appendChild(glowContainer);\r\n    this.glowElements.add(element);\r\n\r\n    this.logger.debug('Applied glow to element:', element);\r\n  }\r\n\r\n  /**\r\n   * Updates CSS custom properties for hue values\r\n   * @param {number} hue1 - Primary hue\r\n   * @param {number} hue2 - Secondary hue\r\n   */\r\n  updateHues(hue1, hue2) {\r\n    this.hue1 = hue1;\r\n    this.hue2 = hue2;\r\n\r\n    document.documentElement.style.setProperty('--hue1', String(hue1));\r\n    document.documentElement.style.setProperty('--hue2', String(hue2));\r\n\r\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\r\n  }\r\n\r\n  /**\r\n   * Rotates to new random colors\r\n   */\r\n  rotateColors() {\r\n    const newHue1 = this.randomHue();\r\n    const newHue2 = this.complementaryHue(newHue1);\r\n\r\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\r\n    this.updateHues(newHue1, newHue2);\r\n  }\r\n\r\n  /**\r\n   * Starts automatic color rotation\r\n   */\r\n  startRotation() {\r\n    if (this.rotationInterval) {\r\n      this.stopRotation();\r\n    }\r\n\r\n    // Initial colors\r\n    this.rotateColors();\r\n\r\n    // Set up interval\r\n    this.rotationInterval = setInterval(() => {\r\n      this.rotateColors();\r\n    }, this.options.transitionDuration);\r\n\r\n    this.logger.info('Started color rotation');\r\n  }\r\n\r\n  /**\r\n   * Stops automatic color rotation\r\n   */\r\n  stopRotation() {\r\n    if (this.rotationInterval) {\r\n      clearInterval(this.rotationInterval);\r\n      this.rotationInterval = null;\r\n      this.logger.info('Stopped color rotation');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes glow from an element\r\n   * @param {HTMLElement} element - Element to remove glow from\r\n   */\r\n  removeGlow(element) {\r\n    element.classList.remove('neon-glow');\r\n    const container = element.querySelector('.neon-glow-container');\r\n    if (container) {\r\n      container.remove();\r\n    }\r\n    this.glowElements.delete(element);\r\n  }\r\n\r\n  /**\r\n   * Cleans up the glow manager\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying neon glow manager');\r\n    this.stopRotation();\r\n    \r\n    // Remove glow from all elements\r\n    this.glowElements.forEach(element => {\r\n      this.removeGlow(element);\r\n    });\r\n\r\n    this.glowElements.clear();\r\n  }\r\n}\r\n","import { SandboxEngine } from '../core/sandbox.js';\r\nimport { ConsoleOutput } from '../core/console.js';\r\nimport { Storage } from '../core/storage.js';\r\nimport { Logger } from '../core/logger.js';\r\nimport { EventEmitter } from '../core/events.js';\r\nimport { ExamplesLoader } from './examples.js';\r\nimport { ExamplesDropdown } from './examples-dropdown.js';\r\nimport { ThemeSwitcher } from './theme-switcher.js';\r\nimport { FullscreenManager } from './fullscreen.js';\r\nimport { LibraryManager } from '../libraries/manager.js';\r\nimport { LibraryDialog } from '../libraries/dialog.js';\r\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\r\nimport { isMobile } from '../core/utils.js';\r\nimport { NeonGlowManager } from './neon.js';\r\nimport { \r\n  DEFAULT_TIMEOUT_MS, \r\n  DEFAULT_STORAGE_KEY, \r\n  EVENTS, \r\n  STATUS_MESSAGES,\r\n  MOBILE_BREAKPOINT \r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Main controller that orchestrates the sandbox application components\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class SandboxController {\r\n  /**\r\n   * Creates a new SandboxController instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n   * @param {string} [options.defaultCode] - Default code to load\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.logLevel='info'] - Log level for debugging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      timeLimit: DEFAULT_TIMEOUT_MS,\r\n      storageKey: DEFAULT_STORAGE_KEY,\r\n      defaultCode: this.getDefaultCode(),\r\n      debug: false,\r\n      logLevel: 'info',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: this.options.logLevel,\r\n      prefix: 'Controller'\r\n    });\r\n\r\n    this.events = new EventEmitter();\r\n    this.editor = null;\r\n    this.sandbox = null;\r\n    this.console = null;\r\n    this.storage = null;\r\n    this.examples = null;\r\n    this.examplesDropdown = null;\r\n    this.themeSwitcher = null;\r\n    this.fullscreenManager = null;\r\n    this.libraryManager = null;\r\n    this.libraryDialog = null;\r\n    this.neonGlow = null;\r\n    this.elements = {};\r\n    this.resizeHandlers = [];\r\n    this.responsiveListener = null;\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Returns the default JavaScript code to load in the editor\r\n   * @returns {string} Default code content\r\n   */\r\n  getDefaultCode() {\r\n    return [\r\n      '// Welcome to JS Sandbox! üôå',\r\n      '//',\r\n      '// Tips:',\r\n      '//  - Use console.log/info/warn/error',\r\n      '//  - Ctrl/Cmd+Enter to execute',\r\n      '//  - \"Reset\" kills stuck executions',\r\n      '//',\r\n      '// Examples:',\r\n      'console.log(\"Hello, sandbox!\");',\r\n      'function noReturn() { var x = 1+1; }',\r\n      'noReturn(); // no return value, all good',\r\n      '',\r\n      '// DOM inside sandbox:',\r\n      'var el = document.createElement(\"h1\");',\r\n      'el.textContent = \"Hello from iframe!\";',\r\n      'document.body.appendChild(el);',\r\n      '',\r\n      '// Errors:',\r\n      'Promise.reject(\"rejected!\");',\r\n      '// throw new Error(\"Exception thrown\");',\r\n      '',\r\n      '// Infinite loop test (commented):',\r\n      '// while(true) {}'\r\n    ].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Initializes the controller and all components\r\n   * @returns {Promise<void>}\r\n   */\r\n  async init() {\r\n    if (this.isInitialized) {\r\n      this.logger.warn('Controller already initialized');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.events.emit(EVENTS.INIT_START);\r\n      this.logger.info('Initializing controller...');\r\n      \r\n      this.findElements();\r\n      await this.initializeComponents();\r\n      this.setupEventListeners();\r\n      \r\n      this.isInitialized = true;\r\n      this.events.emit(EVENTS.INIT_COMPLETE);\r\n      this.logger.info('Controller initialization complete');\r\n    } catch (error) {\r\n      this.logger.error('Initialization failed:', error);\r\n      this.events.emit(EVENTS.INIT_ERROR, error);\r\n      \r\n      // Show user-friendly error message\r\n      this.showInitializationError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows initialization error to user\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  showInitializationError(error) {\r\n    if (this.elements.consoleContainer) {\r\n      const errorDiv = document.createElement('div');\r\n      errorDiv.className = 'console-line console-error';\r\n      errorDiv.textContent = `‚ö†Ô∏è Initialization failed: ${error.message}`;\r\n      this.elements.consoleContainer.appendChild(errorDiv);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and caches DOM elements\r\n   */\r\n  findElements() {\r\n    this.elements = {\r\n      app: document.querySelector('.app'),\r\n      editorContainer: document.getElementById('editorContainer'),\r\n      consoleContainer: document.getElementById('console'),\r\n      sandboxContainer: document.getElementById('sandboxContainer'),\r\n      runBtn: document.getElementById('runBtn'),\r\n      clearBtn: document.getElementById('clearBtn'),\r\n      resetBtn: document.getElementById('resetBtn'),\r\n      togglePreview: document.getElementById('togglePreview'),\r\n      previewWrap: document.getElementById('previewWrap'),\r\n      status: document.getElementById('status'),\r\n      limitLabel: document.getElementById('limitLabel'),\r\n      toolbar: document.querySelector('.toolbar'),\r\n      fullscreenEditor: document.getElementById('fullscreenEditor'),\r\n      fullscreenConsole: document.getElementById('fullscreenConsole'),\r\n      librariesBtn: document.getElementById('librariesBtn'),\r\n      clearConsoleBtn: document.getElementById('clearConsoleBtn')\r\n    };\r\n\r\n    // Validate required elements\r\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\r\n    const missing = required.filter(key => !this.elements[key]);\r\n    \r\n    if (missing.length > 0) {\r\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes all components with error boundaries\r\n   * @returns {Promise<void>}\r\n   */\r\n  async initializeComponents() {\r\n    this.logger.info('Initializing components...');\r\n\r\n    // Initialize storage\r\n    try {\r\n      this.storage = new Storage(this.options.storageKey, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Storage initialized');\r\n    } catch (error) {\r\n      this.logger.error('Storage initialization failed:', error);\r\n      // Non-fatal, continue without persistence\r\n    }\r\n\r\n    // Initialize console\r\n    try {\r\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Console initialized');\r\n    } catch (error) {\r\n      this.logger.error('Console initialization failed:', error);\r\n      throw new Error('Failed to initialize console output');\r\n    }\r\n\r\n    // Initialize sandbox\r\n    try {\r\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\r\n        timeLimit: this.options.timeLimit,\r\n        debug: this.options.debug,\r\n        logLevel: this.options.logLevel,\r\n        onMessage: (type, args) => {\r\n          this.console.addLine(type, args);\r\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\r\n        },\r\n        onStatusChange: (status) => this.updateStatus(status)\r\n      });\r\n      this.logger.debug('SandboxEngine created');\r\n\r\n      // Initialize sandbox template\r\n      await this.sandbox.initialize();\r\n      this.logger.info('Sandbox initialized');\r\n    } catch (error) {\r\n      this.logger.error('Sandbox initialization failed:', error);\r\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\r\n    }\r\n\r\n    // Initialize examples system\r\n    try {\r\n      this.examples = new ExamplesLoader({\r\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\r\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\r\n        debug: true // Always debug examples loading to help troubleshoot\r\n      });\r\n\r\n      // Initialize examples dropdown (only if not already created)\r\n      if (this.elements.toolbar && !this.examplesDropdown) {\r\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\r\n          onSelect: (exampleId) => this.loadExample(exampleId)\r\n        });\r\n\r\n        // Load available examples\r\n        try {\r\n          this.examplesDropdown.setLoading(true);\r\n          const availableExamples = await this.examples.discoverExamples();\r\n          this.examplesDropdown.setExamples(availableExamples);\r\n          this.logger.info('Examples loaded:', availableExamples.length);\r\n        } catch (error) {\r\n          this.logger.error('Failed to load examples:', error);\r\n          this.examplesDropdown.setError('Failed to load');\r\n        }\r\n      }\r\n\r\n      // Initialize theme switcher (only if not already created)\r\n      if (this.elements.toolbar && !this.themeSwitcher) {\r\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\r\n          defaultTheme: 'darcula'\r\n        });\r\n        this.logger.info('Theme switcher initialized');\r\n      }\r\n\r\n      // Initialize fullscreen manager (only if not already created)\r\n      if (!this.fullscreenManager) {\r\n        this.fullscreenManager = new FullscreenManager(this.events, {\r\n          debug: this.options.debug\r\n        });\r\n        this.fullscreenManager.init({\r\n          app: this.elements.app,\r\n          fullscreenEditor: this.elements.fullscreenEditor,\r\n          fullscreenConsole: this.elements.fullscreenConsole\r\n        });\r\n        this.logger.info('Fullscreen manager initialized');\r\n      }\r\n\r\n      // Initialize library manager (only if not already created)\r\n      if (!this.libraryManager) {\r\n        this.libraryManager = new LibraryManager(this.events, {\r\n          debug: this.options.debug\r\n        });\r\n        this.logger.info('Library manager initialized');\r\n      }\r\n\r\n      // Initialize library dialog (only if not already created)\r\n      if (!this.libraryDialog) {\r\n        this.libraryDialog = new LibraryDialog(this.events, this.libraryManager, {\r\n          debug: this.options.debug\r\n        });\r\n        this.logger.info('Library dialog initialized');\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Examples system initialization failed:', error);\r\n      // Non-fatal, continue without examples\r\n    }\r\n\r\n    // Update time limit display\r\n    if (this.elements.limitLabel) {\r\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\r\n    }\r\n\r\n    // Initialize resizable panes\r\n    this.initializeResizer();\r\n\r\n    // Handle responsive layout changes\r\n    this.setupResponsiveListener();\r\n\r\n    // Set initial state for preview toggle\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (rightPane && this.elements.previewWrap) {\r\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\r\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\r\n    }\r\n\r\n    // Initialize neon glow effects\r\n    this.initializeNeonGlow();\r\n\r\n    this.logger.info('Components initialization complete');\r\n  }\r\n\r\n  /**\r\n   * Initializes neon glow effects on UI elements\r\n   */\r\n  initializeNeonGlow() {\r\n    try {\r\n      this.neonGlow = new NeonGlowManager({\r\n        transitionDuration: 8000,\r\n        autoRotate: true,\r\n        debug: true // Enable debug to see color changes\r\n      });\r\n\r\n      // Apply glow ONLY to panes (not navbar)\r\n      const panes = this.elements.app.querySelectorAll('.pane');\r\n      panes.forEach(pane => {\r\n        this.neonGlow.applyGlow(pane);\r\n      });\r\n\r\n      // Start automatic color rotation\r\n      this.neonGlow.startRotation();\r\n\r\n      this.logger.info('Neon glow effects initialized');\r\n    } catch (error) {\r\n      this.logger.warn('Failed to initialize neon glow:', error);\r\n      // Non-fatal, continue without neon effects\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up existing resize handlers\r\n   */\r\n  cleanupResizeHandlers() {\r\n    this.resizeHandlers.forEach(handler => {\r\n      if (handler && handler.cleanup) {\r\n        handler.cleanup();\r\n      }\r\n    });\r\n    this.resizeHandlers = [];\r\n  }\r\n\r\n  /**\r\n   * Initializes the resizable panes functionality\r\n   */\r\n  initializeResizer() {\r\n    if (!this.elements.app) return;\r\n\r\n    // Cleanup existing handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Skip horizontal resize on mobile\r\n    if (isMobile(MOBILE_BREAKPOINT)) {\r\n      this.initializeVerticalResize();\r\n      return;\r\n    }\r\n\r\n    const mainContent = this.elements.app.querySelector('.main-content');\r\n    if (!mainContent) return;\r\n\r\n    // Remove any existing resize handles first\r\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\r\n    existingHandles.forEach(handle => handle.remove());\r\n\r\n    // Reset any inline grid styles that might have been applied\r\n    mainContent.style.gridTemplateColumns = '';\r\n    mainContent.style.gridTemplateRows = '';\r\n\r\n    // Reset right pane styles\r\n    const rightPane = mainContent.querySelector('.pane:last-child');\r\n    if (rightPane) {\r\n      rightPane.style.gridTemplateRows = '';\r\n      rightPane.classList.remove('preview-hidden');\r\n    }\r\n\r\n    // Create resize handle\r\n    const resizeHandle = document.createElement('div');\r\n    resizeHandle.className = 'resize-handle';\r\n\r\n    // Insert between the first and last pane in main-content\r\n    const panes = mainContent.querySelectorAll('.pane');\r\n    if (panes.length >= 2) {\r\n      mainContent.insertBefore(resizeHandle, panes[1]);\r\n\r\n      // Create horizontal resize handler using utility\r\n      const horizontalHandler = createHorizontalResizeHandler({\r\n        container: mainContent,\r\n        leftPane: panes[0],\r\n        rightPane: panes[1],\r\n        handle: resizeHandle,\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\r\n      });\r\n\r\n      this.resizeHandlers.push(horizontalHandler);\r\n    }\r\n\r\n    // Initialize vertical resizing\r\n    this.initializeVerticalResize();\r\n  }\r\n\r\n  /**\r\n   * Sets up responsive layout listener for orientation/resize changes\r\n   */\r\n  setupResponsiveListener() {\r\n    // Clean up existing listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n    }\r\n\r\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\r\n\r\n    const handleChange = () => {\r\n      this.logger.debug('Responsive breakpoint changed');\r\n      this.initializeResizer();\r\n    };\r\n\r\n    mediaQuery.addListener(handleChange);\r\n\r\n    // Store reference for cleanup\r\n    this.responsiveListener = { mediaQuery, handleChange };\r\n  }\r\n\r\n  /**\r\n   * Initializes vertical resizing between console and preview\r\n   */\r\n  initializeVerticalResize() {\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (!rightPane) return;\r\n\r\n    // Create vertical resize handle\r\n    const verticalHandle = document.createElement('div');\r\n    verticalHandle.className = 'vertical-resize-handle';\r\n\r\n    // Insert after console\r\n    const consoleEl = rightPane.querySelector('.console');\r\n    if (consoleEl) {\r\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\r\n\r\n      // Create vertical resize handler using utility\r\n      const verticalHandler = createVerticalResizeHandler({\r\n        container: rightPane,\r\n        topPane: consoleEl,\r\n        bottomPane: this.elements.previewWrap,\r\n        handle: verticalHandle,\r\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\r\n      });\r\n\r\n      this.resizeHandlers.push(verticalHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the event emitter instance\r\n   * @returns {EventEmitter} The event emitter\r\n   */\r\n  getEventEmitter() {\r\n    return this.events;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the editor instance\r\n   * @param {EditorAdapter} editor - The editor instance\r\n   */\r\n  setEditor(editor) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n    }\r\n\r\n    this.editor = editor;\r\n\r\n    // Setup editor event handlers\r\n    this.editor.onChange((code) => {\r\n      if (this.storage) {\r\n        this.storage.save(code);\r\n      }\r\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\r\n    });\r\n\r\n    this.editor.onExecute(() => {\r\n      this.run();\r\n    });\r\n\r\n    // Load initial code now that editor is ready\r\n    this.loadInitialCode();\r\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for UI interactions\r\n   */\r\n  setupEventListeners() {\r\n    if (this.elements.runBtn) {\r\n      this.elements.runBtn.addEventListener('click', () => this.run());\r\n    }\r\n\r\n    if (this.elements.clearBtn) {\r\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\r\n    }\r\n\r\n    if (this.elements.resetBtn) {\r\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\r\n    }\r\n\r\n    if (this.elements.togglePreview) {\r\n      this.elements.togglePreview.addEventListener('change', (e) => {\r\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          if (e.target.checked) {\r\n            rightPane.classList.add('has-preview');\r\n          } else {\r\n            rightPane.classList.remove('has-preview');\r\n            rightPane.style.gridTemplateRows = '';\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.elements.librariesBtn) {\r\n      this.elements.librariesBtn.addEventListener('click', () => {\r\n        this.events.emit(EVENTS.LIBRARY_MANAGER_OPEN);\r\n      });\r\n    }\r\n\r\n    if (this.elements.clearConsoleBtn) {\r\n      this.elements.clearConsoleBtn.addEventListener('click', () => {\r\n        this.clearConsole();\r\n      });\r\n    }\r\n\r\n    // Set up theme event listeners\r\n    this.setupThemeEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up theme-related event listeners\r\n   */\r\n  setupThemeEventListeners() {\r\n    // Listen for theme loading start\r\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\r\n      this.logger.info('Theme loading started:', data.theme);\r\n    });\r\n\r\n    // Listen for theme ready\r\n    this.events.on(EVENTS.THEME_READY, (data) => {\r\n      this.logger.info('Theme ready:', data.theme);\r\n      if (data.error) {\r\n        this.logger.warn('Theme ready with error:', data.error);\r\n      }\r\n    });\r\n\r\n    // Listen for theme changes\r\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\r\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads initial code into the editor\r\n   */\r\n  loadInitialCode() {\r\n    const savedCode = this.storage ? this.storage.load() : null;\r\n    const initialCode = savedCode || this.options.defaultCode;\r\n\r\n    if (this.editor) {\r\n      this.editor.setValue(initialCode);\r\n      this.editor.focus();\r\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Runs the current code in the sandbox\r\n   */\r\n  async run() {\r\n    if (!this.editor) {\r\n      this.logger.error('No editor configured');\r\n      return;\r\n    }\r\n\r\n    const code = this.editor.getValue();\r\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\r\n\r\n    // Validate syntax first\r\n    const validation = this.sandbox.validateSyntax(code);\r\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\r\n\r\n    this.console.clear();\r\n\r\n    // Prepare library data for injection (async)\r\n    let libraryData = null;\r\n    if (this.libraryManager) {\r\n      const libraries = this.libraryManager.getLibraries();\r\n      if (libraries.length > 0) {\r\n        // Show loading status for libraries\r\n        this.updateStatus(`Loading ${libraries.length} libraries...`);\r\n\r\n        try {\r\n          this.logger.debug('Generating library scripts...');\r\n          const scripts = await this.libraryManager.generateScriptTags();\r\n          const csp = this.libraryManager.generateCSP();\r\n\r\n          libraryData = { scripts, csp };\r\n          this.logger.debug('Library data prepared successfully');\r\n        } catch (error) {\r\n          this.logger.error('Failed to prepare library data:', error);\r\n          this.updateStatus('Library loading failed');\r\n          // Continue without libraries\r\n        }\r\n      }\r\n    }\r\n\r\n    this.sandbox.execute(code, libraryData);\r\n  }\r\n\r\n  /**\r\n   * Clears the console output\r\n   */\r\n  clearConsole() {\r\n    this.console.clear();\r\n    this.updateStatus(STATUS_MESSAGES.cleared);\r\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\r\n  }\r\n\r\n  /**\r\n   * Resets the sandbox\r\n   */\r\n  reset() {\r\n    this.sandbox.reset();\r\n    this.updateStatus(STATUS_MESSAGES.reset);\r\n    this.events.emit(EVENTS.SANDBOX_RESET);\r\n  }\r\n\r\n  /**\r\n   * Updates the status display\r\n   * @param {string} status - Status message or key\r\n   */\r\n  updateStatus(status) {\r\n    if (!this.elements.status) return;\r\n\r\n    const displayStatus = STATUS_MESSAGES[status] || status;\r\n    this.elements.status.textContent = displayStatus;\r\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\r\n\r\n    // Emit specific status events\r\n    if (status === 'completed') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\r\n    } else if (status === 'timeout') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @param {Object} [options={}] - Options for the listener\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  on(event, callback, options) {\r\n    return this.events.on(event, callback, options);\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  once(event, callback) {\r\n    return this.events.once(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   */\r\n  off(event, callback) {\r\n    this.events.off(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Gets the current code from the editor\r\n   * @returns {string|null} The current code or null if no editor\r\n   */\r\n  getCode() {\r\n    return this.editor ? this.editor.getValue() : null;\r\n  }\r\n\r\n  /**\r\n   * Sets code in the editor\r\n   * @param {string} code - The code to set\r\n   */\r\n  setCode(code) {\r\n    if (this.editor) {\r\n      this.editor.setValue(code);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates JavaScript syntax without executing\r\n   * @param {string} [code] - The code to validate, or current editor code if not provided\r\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\r\n   */\r\n  validateCode(code) {\r\n    const codeToValidate = code || this.getCode();\r\n    return this.sandbox ? \r\n      this.sandbox.validateSyntax(codeToValidate) : \r\n      { valid: false, error: 'Sandbox not initialized' };\r\n  }\r\n\r\n  /**\r\n   * Loads and runs an example\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<void>}\r\n   */\r\n  async loadExample(exampleId) {\r\n    try {\r\n      this.logger.info('Loading example:', exampleId);\r\n\r\n      const example = await this.examples.loadExample(exampleId);\r\n\r\n      // Set the code in the editor\r\n      this.setCode(example.code);\r\n\r\n      // Open preview pane\r\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\r\n        this.elements.togglePreview.checked = true;\r\n        this.elements.previewWrap.classList.add('show');\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          rightPane.classList.add('has-preview');\r\n        }\r\n      }\r\n\r\n      // Run the example\r\n      this.run();\r\n\r\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up the controller and all components\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying controller...');\r\n    \r\n    this.events.emit(EVENTS.DESTROY);\r\n\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (this.sandbox) {\r\n      this.sandbox.destroy();\r\n      this.sandbox = null;\r\n    }\r\n\r\n    if (this.examples) {\r\n      this.examples.destroy();\r\n      this.examples = null;\r\n    }\r\n\r\n    if (this.examplesDropdown) {\r\n      this.examplesDropdown.destroy();\r\n      this.examplesDropdown = null;\r\n    }\r\n\r\n    if (this.neonGlow) {\r\n      this.neonGlow.destroy();\r\n      this.neonGlow = null;\r\n    }\r\n\r\n    if (this.fullscreenManager) {\r\n      this.fullscreenManager.destroy();\r\n      this.fullscreenManager = null;\r\n    }\r\n\r\n    if (this.libraryManager) {\r\n      this.libraryManager.destroy();\r\n      this.libraryManager = null;\r\n    }\r\n\r\n    if (this.libraryDialog) {\r\n      this.libraryDialog.destroy();\r\n      this.libraryDialog = null;\r\n    }\r\n\r\n    // Cleanup resize handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Cleanup responsive listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n      this.responsiveListener = null;\r\n    }\r\n\r\n    this.events.removeAllListeners();\r\n    this.isInitialized = false;\r\n    \r\n    this.logger.info('Controller destroyed');\r\n  }\r\n}\r\n","import {\r\n  MIN_LEFT_PANE_WIDTH,\r\n  MIN_RIGHT_PANE_WIDTH,\r\n  MIN_CONSOLE_HEIGHT,\r\n  MIN_PREVIEW_HEIGHT,\r\n  RESIZE_HANDLE_WIDTH\r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Shared resize functionality for panes\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\n/**\r\n * Creates a horizontal resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.leftPane - Left pane element\r\n * @param {HTMLElement} config.rightPane - Right pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createHorizontalResizeHandler(config) {\r\n  const { container, leftPane, rightPane, handle, onResize } = config;\r\n\r\n  let isResizing = false;\r\n  let startX = 0;\r\n  let startLeftWidth = 0;\r\n  let startRightWidth = 0;\r\n\r\n  const handleStart = (e) => {\r\n    isResizing = true;\r\n    // Support both mouse and touch events\r\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\r\n    startX = clientX;\r\n    handle.classList.add('dragging');\r\n\r\n    startLeftWidth = leftPane.getBoundingClientRect().width;\r\n    startRightWidth = rightPane.getBoundingClientRect().width;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'col-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    // Support both mouse and touch events\r\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\r\n    const deltaX = clientX - startX;\r\n    const containerRect = container.getBoundingClientRect();\r\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\r\n\r\n    // Calculate new widths with constraints\r\n    const newLeftWidth = Math.max(\r\n      MIN_LEFT_PANE_WIDTH,\r\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\r\n    );\r\n    const newRightWidth = totalWidth - newLeftWidth;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  // Add both mouse and touch event listeners\r\n  handle.addEventListener('mousedown', handleStart);\r\n  handle.addEventListener('touchstart', handleStart);\r\n  document.addEventListener('mousemove', handleMove);\r\n  document.addEventListener('touchmove', handleMove);\r\n  document.addEventListener('mouseup', handleEnd);\r\n  document.addEventListener('touchend', handleEnd);\r\n\r\n  return {\r\n    handleStart,\r\n    handleMove,\r\n    handleEnd,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleStart);\r\n      handle.removeEventListener('touchstart', handleStart);\r\n      document.removeEventListener('mousemove', handleMove);\r\n      document.removeEventListener('touchmove', handleMove);\r\n      document.removeEventListener('mouseup', handleEnd);\r\n      document.removeEventListener('touchend', handleEnd);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a vertical resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.topPane - Top pane element\r\n * @param {HTMLElement} config.bottomPane - Bottom pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createVerticalResizeHandler(config) {\r\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\r\n  \r\n  let isResizing = false;\r\n  let startY = 0;\r\n  let startTopHeight = 0;\r\n  let startBottomHeight = 0;\r\n\r\n  const handleStart = (e) => {\r\n    // Check if resizing is allowed\r\n    if (shouldResize && !shouldResize()) return;\r\n\r\n    isResizing = true;\r\n    // Support both mouse and touch events\r\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\r\n    startY = clientY;\r\n    handle.classList.add('dragging');\r\n\r\n    const topRect = topPane.getBoundingClientRect();\r\n    const bottomRect = bottomPane.getBoundingClientRect();\r\n\r\n    startTopHeight = topRect.height;\r\n    startBottomHeight = bottomRect.height;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'row-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    // Support both mouse and touch events\r\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\r\n    const deltaY = clientY - startY;\r\n    const totalContentHeight = startTopHeight + startBottomHeight;\r\n\r\n    // Calculate new heights with constraints\r\n    const newTopHeight = Math.max(\r\n      MIN_CONSOLE_HEIGHT,\r\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\r\n    );\r\n    const newBottomHeight = totalContentHeight - newTopHeight;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  // Add both mouse and touch event listeners\r\n  handle.addEventListener('mousedown', handleStart);\r\n  handle.addEventListener('touchstart', handleStart);\r\n  document.addEventListener('mousemove', handleMove);\r\n  document.addEventListener('touchmove', handleMove);\r\n  document.addEventListener('mouseup', handleEnd);\r\n  document.addEventListener('touchend', handleEnd);\r\n\r\n  return {\r\n    handleStart,\r\n    handleMove,\r\n    handleEnd,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleStart);\r\n      handle.removeEventListener('touchstart', handleStart);\r\n      document.removeEventListener('mousemove', handleMove);\r\n      document.removeEventListener('touchmove', handleMove);\r\n      document.removeEventListener('mouseup', handleEnd);\r\n      document.removeEventListener('touchend', handleEnd);\r\n    }\r\n  };\r\n}\r\n","import { EditorAdapter } from './base.js';\r\n\r\n/**\r\n * Plain textarea editor adapter for basic code editing\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class TextareaEditor extends EditorAdapter {\r\n  /**\r\n   * Creates a new TextareaEditor instance\r\n   * @param {HTMLElement} container - DOM element to contain the editor\r\n   * @param {Object} [options={}] - Editor configuration options\r\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\r\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\r\n   */\r\n  constructor(container, options = {}, eventEmitter = null) {\r\n    super(container, options, eventEmitter);\r\n    this.textarea = null;\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the textarea editor\r\n   */\r\n  init() {\r\n    this.textarea = document.createElement('textarea');\r\n    this.textarea.className = 'code-editor';\r\n    this.textarea.spellcheck = false;\r\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\r\n\r\n    this.container.appendChild(this.textarea);\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for the textarea\r\n   */\r\n  setupEventListeners() {\r\n    this.textarea.addEventListener('input', () => {\r\n      this.triggerChange();\r\n    });\r\n\r\n    this.textarea.addEventListener('keydown', (e) => {\r\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\r\n        e.preventDefault();\r\n        this.triggerExecute();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the current code value from the textarea\r\n   * @returns {string} The current code\r\n   */\r\n  getValue() {\r\n    return this.textarea.value;\r\n  }\r\n\r\n  /**\r\n   * Sets the code value in the textarea\r\n   * @param {string} code - The code to set\r\n   */\r\n  setValue(code) {\r\n    this.textarea.value = code;\r\n  }\r\n\r\n  /**\r\n   * Focuses the textarea\r\n   */\r\n  focus() {\r\n    this.textarea.focus();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the textarea editor\r\n   */\r\n  destroy() {\r\n    if (this.textarea) {\r\n      this.textarea.remove();\r\n    }\r\n  }\r\n}","/**\r\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { SandboxController } from './ui/controller.js';\r\nimport { CodeMirrorEditor } from './editors/codemirror.js';\r\nimport { TextareaEditor } from './editors/textarea.js';\r\nimport { Logger } from './core/logger.js';\r\n\r\n/**\r\n * Auto-detects and initializes the best available editor\r\n * @param {HTMLElement} container - DOM element to contain the editor\r\n * @param {Object} [options={}] - Editor configuration options\r\n * @param {Object} [eventEmitter] - Event emitter for theme changes\r\n * @returns {EditorAdapter} The initialized editor instance\r\n */\r\nfunction createEditor(container, options = {}, eventEmitter = null) {\r\n  const logger = new Logger({\r\n    enabled: options.debug || false,\r\n    level: 'info',\r\n    prefix: 'EditorFactory'\r\n  });\r\n\r\n  // Try CodeMirror first if available\r\n  if (typeof CodeMirror !== 'undefined') {\r\n    try {\r\n      logger.info('Initializing CodeMirror editor');\r\n      return new CodeMirrorEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\r\n    }\r\n  }\r\n\r\n  // Fallback to textarea\r\n  logger.info('Initializing textarea editor');\r\n  return new TextareaEditor(container, options, eventEmitter);\r\n}\r\n\r\n/**\r\n * Initializes the JavaScript sandbox application\r\n * @param {Object} [options={}] - Configuration options\r\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n * @param {string} [options.defaultCode] - Default code to load\r\n * @param {boolean} [options.debug=false] - Enable debug logging\r\n * @param {string} [options.logLevel='info'] - Log level for debugging\r\n * @param {string} [options.templatePath] - Path to custom sandbox template\r\n * @returns {Promise<SandboxController>} The initialized sandbox controller\r\n */\r\nexport async function initSandbox(options = {}) {\r\n  const debug = options.debug || false;\r\n  const logger = new Logger({\r\n    enabled: debug,\r\n    level: options.logLevel || 'info',\r\n    prefix: 'App'\r\n  });\r\n\r\n  try {\r\n    logger.info('Starting sandbox initialization...');\r\n\r\n    // Create controller\r\n    const controller = new SandboxController(options);\r\n    \r\n    // Initialize controller (now properly awaited)\r\n    await controller.init();\r\n    logger.info('Controller initialized');\r\n\r\n    // Find editor container\r\n    const editorContainer = document.getElementById('editorContainer');\r\n    if (!editorContainer) {\r\n      throw new Error('Editor container element not found');\r\n    }\r\n\r\n    // Create editor with event emitter for theme switching\r\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\r\n    const editor = createEditor(editorContainer, {\r\n      mode: 'javascript',\r\n      theme: 'darcula', // Temporary default, will be updated by THEME_READY event\r\n      autofocus: true,\r\n      debug: debug\r\n    }, controller.getEventEmitter());\r\n    logger.info('Editor created, waiting for theme ready event');\r\n\r\n    // Set editor on controller\r\n    controller.setEditor(editor);\r\n    logger.info('Editor set on controller');\r\n    \r\n    logger.info('Sandbox initialization complete');\r\n    return controller;\r\n  } catch (error) {\r\n    logger.error('Sandbox initialization failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Auto-initializes the sandbox if DOM is ready\r\n */\r\nfunction autoInit() {\r\n  // Only auto-init if not already initialized and editor container exists\r\n  if (!window.sandbox && document.getElementById('editorContainer')) {\r\n    initSandbox({ debug: true, logLevel: 'trace' })\r\n      .then(sandbox => {\r\n        window.sandbox = sandbox;\r\n        console.log('‚úÖ Sandbox initialized successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error('‚ùå Failed to initialize sandbox:', error);\r\n      });\r\n  }\r\n}\r\n\r\n// Auto-initialize based on document state\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', autoInit);\r\n} else {\r\n  // DOM already loaded\r\n  autoInit();\r\n}\r\n\r\n// Export for manual initialization\r\nexport { SandboxController, CodeMirrorEditor, TextareaEditor };\r\n"],"names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","themes","label","currentTheme","loadSavedTheme","initializeCurrentTheme","emit","EVENTS","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","populateThemes","async","themeValue","switchTheme","examplesDropdown","themeName","link","rel","href","Promise","resolve","reject","onload","onerror","head","savedTheme","find","t","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","FullscreenManager","currentMode","appElement","elements","isChanging","setupEventListeners","init","app","fullscreenEditor","toggleFullscreen","fullscreenConsole","preventDefault","exitFullscreen","on","FULLSCREEN_TOGGLE","mode","FULLSCREEN_EXIT","setFullscreenMode","previousMode","classList","updateButtonStates","add","toUpperCase","activeMode","getCurrentMode","isFullscreen","LibraryManager","allowlistKey","console","log","defaultDomains","libraries","allowedDomains","libraryCache","loadFromStorage","LIBRARY_ADD","data","addLibrary","name","LIBRARY_REMOVE","removeLibrary","DOMAIN_TRUST_REQUEST","addDomain","domain","librariesData","JSON","parse","domainsData","savedDomains","Set","map","lib","join","saveLibraries","serialized","stringify","saveDomains","customDomains","filter","includes","generateId","Date","now","Math","random","toString","substr","extractDomain","URL","hostname","guessLibraryName","pathname","nameWithoutExt","split","pop","replace","patterns","pattern","match","charAt","slice","extractVersionFromUrl","versionPatterns","isDomainAllowed","validateLibraryUrl","valid","domainAllowed","needsDomainApproval","validation","success","needsApproval","library","trim","addedAt","toISOString","LIBRARY_ADDED","index","findIndex","removed","splice","LIBRARY_REMOVED","DOMAIN_ADDED","removeDomain","indexOf","DOMAIN_REMOVED","getLibraries","getAllowedDomains","generateScriptTags","scripts","content","fetch","statusText","result","libraryNames","scriptSize","s","version","versionInfo","toFixed","generateCSP","getStats","libraryCount","domainCount","customDomainCount","LIBRARIES_CLEARED","testLogging","BaseDialog","modal","closeOnBackdrop","closeOnEscape","logPrefix","dialog","isOpen","closeButton","createDialog","header","body","close","getBody","setTitle","titleElement","open","focus","onBeforeOpen","showModal","show","onFocus","onAfterOpen","onBeforeClose","onAfterClose","toggle","isDialogOpen","setContent","HTMLElement","addClass","removeClass","LibraryDialog","libraryManager","super","urlInput","addBtn","libraryList","createLibraryContent","setupLibraryEventListeners","handleAddLibrary","LIBRARY_MANAGER_OPEN","refreshLibraryList","showDomainTrustDialog","clearFeedback","showFeedback","confirm","trace","querySelectorAll","btn","dataset","type","feedback","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","floor","complementaryHue","baseHue","applyGlow","element","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","editor","sandbox","storage","themeSwitcher","fullscreenManager","libraryDialog","neonGlow","resizeHandlers","responsiveListener","isInitialized","INIT_START","findElements","initializeComponents","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","librariesBtn","clearConsoleBtn","missing","ConsoleOutput","SandboxEngine","onMessage","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","initializeNeonGlow","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleStart","clientX","touches","getBoundingClientRect","width","userSelect","cursor","handleMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleEnd","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","setEditor","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","savedCode","initialCode","setValue","CODE_LOAD","fromStorage","getValue","CODE_EXECUTE_START","validateSyntax","CODE_VALIDATE","libraryData","csp","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","EXAMPLE_LOADED","DESTROY","removeAllListeners","TextareaEditor","EditorAdapter","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","initSandbox","controller","CodeMirror","CodeMirrorEditor","createEditor","autofocus","autoInit","then","catch","readyState"],"mappings":"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"}