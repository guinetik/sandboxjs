{"version":3,"file":"index-DH0UtgM1.js","sources":["../../src/core/storage.js","../../src/core/examples.js","../../src/ui/examples-dropdown.js","../../src/core/neon-glow.js","../../src/ui/controller.js","../../src/core/resize-utils.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\nimport { Logger } from './logger.js';\n\n/**\n * Simple localStorage wrapper for persistent code storage\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class Storage {\n  /**\n   * Creates a new Storage instance\n   * @param {string} [key] - The localStorage key to use\n   * @param {Object} [options={}] - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\n    this.key = key;\n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'warn',\n      prefix: 'Storage'\n    });\n  }\n\n  /**\n   * Saves code to localStorage\n   * @param {string} code - The code to save\n   * @returns {boolean} True if save was successful\n   */\n  save(code) {\n    try {\n      localStorage.setItem(this.key, code);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to save code to localStorage:', e);\n      return false;\n    }\n  }\n\n  /**\n   * Loads code from localStorage\n   * @returns {string|null} The saved code or null if not found\n   */\n  load() {\n    try {\n      return localStorage.getItem(this.key);\n    } catch (e) {\n      this.logger.warn('Failed to load code from localStorage:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Clears the saved code\n   * @returns {boolean} True if clear was successful\n   */\n  clear() {\n    try {\n      localStorage.removeItem(this.key);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to clear localStorage:', e);\n      return false;\n    }\n  }\n}\n","import { Logger } from './logger.js';\nimport { fetchWithTimeout } from './utils.js';\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from './constants.js';\n\n/**\n * Examples loader for the JavaScript sandbox\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesLoader {\n  /**\n   * Creates a new ExamplesLoader instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.examplesPath] - Path to examples directory\n   * @param {Function} [options.onLoad] - Callback when example is loaded\n   * @param {Function} [options.onError] - Callback when loading fails\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\n    this.onLoad = options.onLoad || (() => {});\n    this.onError = options.onError || (() => {});\n    this.examples = new Map();\n    \n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'info',\n      prefix: 'ExamplesLoader'\n    });\n  }\n\n  /**\n   * Discovers available examples by attempting to load known files\n   * @returns {Promise<Array>} Array of example metadata\n   */\n  async discoverExamples() {\n    // Known examples - in a real app, this could come from an API or manifest\n    const knownExamples = [\n      {\n        id: 'hello-world',\n        title: 'üëã Hello World',\n        description: 'Simple greeting with interactive button',\n        file: 'hello-world.js'\n      },\n      {\n        id: 'spinning-animation',\n        title: 'üåÄ CSS Animations',\n        description: 'Spinning box with rainbow colors and controls',\n        file: 'spinning-animation.js'\n      },\n      {\n        id: 'interactive-form',\n        title: 'üìù Interactive Form',\n        description: 'Form validation and submission handling',\n        file: 'interactive-form.js'\n      },\n      {\n        id: 'canvas-drawing',\n        title: 'üé® Canvas Drawing',\n        description: 'Draw with mouse or touch on HTML5 canvas',\n        file: 'canvas-drawing.js'\n      }\n    ];\n\n    const availableExamples = [];\n\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\n\n    // Test each example to see if it's available\n    for (const example of knownExamples) {\n      try {\n        const url = `${this.examplesPath}/${example.file}`;\n        this.logger.debug(`Fetching example: ${url}`);\n        \n        const response = await fetchWithTimeout(\n          url,\n          {},\n          NETWORK_TIMEOUT_MS\n        );\n        \n        if (response.ok) {\n          const code = await response.text();\n          this.examples.set(example.id, { ...example, code });\n          availableExamples.push(example);\n          this.logger.debug(`‚úì Example loaded: ${example.id}`);\n        } else {\n          this.logger.warn(`‚úó Example ${example.id} returned ${response.status}`);\n        }\n      } catch (error) {\n        this.logger.warn(`‚úó Example ${example.id} failed:`, error.message);\n      }\n    }\n\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\n    return availableExamples;\n  }\n\n  /**\n   * Loads an example by ID\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<Object>} Example data with code\n   */\n  async loadExample(exampleId) {\n    if (this.examples.has(exampleId)) {\n      const example = this.examples.get(exampleId);\n      this.onLoad(example);\n      return example;\n    }\n\n    // Try to load if not cached\n    try {\n      await this.discoverExamples();\n      const example = this.examples.get(exampleId);\n\n      if (example) {\n        this.onLoad(example);\n        return example;\n      } else {\n        throw new Error(`Example '${exampleId}' not found`);\n      }\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.onError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets all available examples\n   * @returns {Array} Array of cached examples\n   */\n  getAvailableExamples() {\n    return Array.from(this.examples.values());\n  }\n\n  /**\n   * Clears the examples cache\n   */\n  clearCache() {\n    this.logger.debug('Clearing examples cache');\n    this.examples.clear();\n  }\n\n  /**\n   * Cleans up the examples loader\n   */\n  destroy() {\n    this.logger.debug('Destroying examples loader');\n    this.clearCache();\n  }\n}\n","/**\n * Examples dropdown UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesDropdown {\n  /**\n   * Creates a new ExamplesDropdown instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} options - Configuration options\n   * @param {Function} [options.onSelect] - Callback when example is selected\n   */\n  constructor(container, options = {}) {\n    this.container = container;\n    this.onSelect = options.onSelect || (() => {});\n    this.examples = [];\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'examples-dropdown';\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    this.dropdown.addEventListener('change', (e) => {\n      const exampleId = e.target.value;\n      if (exampleId) {\n        this.onSelect(exampleId);\n        // Reset to placeholder after selection\n        setTimeout(() => {\n          this.dropdown.value = '';\n        }, 100);\n      }\n    });\n\n    // Insert after the preview button (make examples last in toolbar)\n    const previewLabel = this.container.querySelector('label.btn');\n    if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with examples\n   * @param {Array} examples - Array of example objects\n   */\n  setExamples(examples) {\n    this.examples = examples;\n\n    // Reset to normal placeholder first\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    // Add example options\n    examples.forEach(example => {\n      const option = document.createElement('option');\n      option.value = example.id;\n      option.textContent = example.title;\n      option.title = example.description; // Tooltip\n      this.dropdown.appendChild(option);\n    });\n\n    // Enable dropdown if we have examples\n    this.dropdown.disabled = examples.length === 0;\n  }\n\n  /**\n   * Shows loading state\n   */\n  setLoading(loading = true) {\n    if (loading) {\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\n      this.dropdown.disabled = true;\n    } else {\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n      this.dropdown.disabled = false;\n    }\n  }\n\n  /**\n   * Shows error state\n   * @param {string} message - Error message to display\n   */\n  setError(message = 'Failed to load examples') {\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\n    this.dropdown.disabled = true;\n  }\n\n  /**\n   * Destroys the dropdown\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","/**\n * Neon Glass Glow Effect Manager\n * Applies animated neon glass borders to UI elements\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { Logger } from './logger.js';\n\nexport class NeonGlowManager {\n  /**\n   * Creates a new NeonGlowManager instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.options = {\n      transitionDuration: 8000,\n      autoRotate: true,\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'NeonGlow'\n    });\n\n    this.hue1 = this.randomHue();\n    this.hue2 = this.randomHue();\n    this.rotationInterval = null;\n    this.glowElements = new Set();\n  }\n\n  /**\n   * Generates a random hue value\n   * @returns {number} Hue between 0-360\n   */\n  randomHue() {\n    return Math.floor(Math.random() * 360);\n  }\n\n  /**\n   * Generates a complementary hue with some variance\n   * @param {number} baseHue - Base hue value\n   * @returns {number} Complementary hue\n   */\n  complementaryHue(baseHue) {\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\n    return (baseHue + offset) % 360;\n  }\n\n  /**\n   * Applies neon glow effect to an element\n   * @param {HTMLElement} element - Element to apply glow to\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\n   */\n  applyGlow(element, options = {}) {\n    // Add neon-glow class\n    element.classList.add('neon-glow');\n\n    // Create glow container\n    const glowContainer = document.createElement('div');\n    glowContainer.className = 'neon-glow-container';\n\n    // Create SINGLE glow element that covers entire pane\n    const shine = document.createElement('div');\n    shine.className = 'neon-shine';\n    glowContainer.appendChild(shine);\n\n    element.appendChild(glowContainer);\n    this.glowElements.add(element);\n\n    this.logger.debug('Applied glow to element:', element);\n  }\n\n  /**\n   * Updates CSS custom properties for hue values\n   * @param {number} hue1 - Primary hue\n   * @param {number} hue2 - Secondary hue\n   */\n  updateHues(hue1, hue2) {\n    this.hue1 = hue1;\n    this.hue2 = hue2;\n\n    document.documentElement.style.setProperty('--hue1', String(hue1));\n    document.documentElement.style.setProperty('--hue2', String(hue2));\n\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\n  }\n\n  /**\n   * Rotates to new random colors\n   */\n  rotateColors() {\n    const newHue1 = this.randomHue();\n    const newHue2 = this.complementaryHue(newHue1);\n\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\n    this.updateHues(newHue1, newHue2);\n  }\n\n  /**\n   * Starts automatic color rotation\n   */\n  startRotation() {\n    if (this.rotationInterval) {\n      this.stopRotation();\n    }\n\n    // Initial colors\n    this.rotateColors();\n\n    // Set up interval\n    this.rotationInterval = setInterval(() => {\n      this.rotateColors();\n    }, this.options.transitionDuration);\n\n    this.logger.info('Started color rotation');\n  }\n\n  /**\n   * Stops automatic color rotation\n   */\n  stopRotation() {\n    if (this.rotationInterval) {\n      clearInterval(this.rotationInterval);\n      this.rotationInterval = null;\n      this.logger.info('Stopped color rotation');\n    }\n  }\n\n  /**\n   * Removes glow from an element\n   * @param {HTMLElement} element - Element to remove glow from\n   */\n  removeGlow(element) {\n    element.classList.remove('neon-glow');\n    const container = element.querySelector('.neon-glow-container');\n    if (container) {\n      container.remove();\n    }\n    this.glowElements.delete(element);\n  }\n\n  /**\n   * Cleans up the glow manager\n   */\n  destroy() {\n    this.logger.info('Destroying neon glow manager');\n    this.stopRotation();\n    \n    // Remove glow from all elements\n    this.glowElements.forEach(element => {\n      this.removeGlow(element);\n    });\n\n    this.glowElements.clear();\n  }\n}\n","import { SandboxEngine } from '../core/sandbox.js';\nimport { ConsoleOutput } from '../core/console.js';\nimport { Storage } from '../core/storage.js';\nimport { Logger } from '../core/logger.js';\nimport { EventEmitter } from '../core/events.js';\nimport { ExamplesLoader } from '../core/examples.js';\nimport { ExamplesDropdown } from './examples-dropdown.js';\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from '../core/resize-utils.js';\nimport { isMobile } from '../core/utils.js';\nimport { NeonGlowManager } from '../core/neon-glow.js';\nimport { \n  DEFAULT_TIMEOUT_MS, \n  DEFAULT_STORAGE_KEY, \n  EVENTS, \n  STATUS_MESSAGES,\n  MOBILE_BREAKPOINT \n} from '../core/constants.js';\n\n/**\n * Main controller that orchestrates the sandbox application components\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class SandboxController {\n  /**\n   * Creates a new SandboxController instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\n   * @param {string} [options.defaultCode] - Default code to load\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logLevel='info'] - Log level for debugging\n   */\n  constructor(options = {}) {\n    this.options = {\n      timeLimit: DEFAULT_TIMEOUT_MS,\n      storageKey: DEFAULT_STORAGE_KEY,\n      defaultCode: this.getDefaultCode(),\n      debug: false,\n      logLevel: 'info',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: this.options.logLevel,\n      prefix: 'Controller'\n    });\n\n    this.events = new EventEmitter();\n    this.editor = null;\n    this.sandbox = null;\n    this.console = null;\n    this.storage = null;\n    this.examples = null;\n    this.examplesDropdown = null;\n    this.neonGlow = null;\n    this.elements = {};\n    this.resizeHandlers = [];\n    this.responsiveListener = null;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Returns the default JavaScript code to load in the editor\n   * @returns {string} Default code content\n   */\n  getDefaultCode() {\n    return [\n      '// Welcome to JS Sandbox! üôå',\n      '//',\n      '// Tips:',\n      '//  - Use console.log/info/warn/error',\n      '//  - Ctrl/Cmd+Enter to execute',\n      '//  - \"Reset\" kills stuck executions',\n      '//',\n      '// Examples:',\n      'console.log(\"Hello, sandbox!\");',\n      'function noReturn() { var x = 1+1; }',\n      'noReturn(); // no return value, all good',\n      '',\n      '// DOM inside sandbox:',\n      'var el = document.createElement(\"h1\");',\n      'el.textContent = \"Hello from iframe!\";',\n      'document.body.appendChild(el);',\n      '',\n      '// Errors:',\n      'Promise.reject(\"rejected!\");',\n      '// throw new Error(\"Exception thrown\");',\n      '',\n      '// Infinite loop test (commented):',\n      '// while(true) {}'\n    ].join('\\n');\n  }\n\n  /**\n   * Initializes the controller and all components\n   * @returns {Promise<void>}\n   */\n  async init() {\n    if (this.isInitialized) {\n      this.logger.warn('Controller already initialized');\n      return;\n    }\n\n    try {\n      this.events.emit(EVENTS.INIT_START);\n      this.logger.info('Initializing controller...');\n      \n      this.findElements();\n      await this.initializeComponents();\n      this.setupEventListeners();\n      \n      this.isInitialized = true;\n      this.events.emit(EVENTS.INIT_COMPLETE);\n      this.logger.info('Controller initialization complete');\n    } catch (error) {\n      this.logger.error('Initialization failed:', error);\n      this.events.emit(EVENTS.INIT_ERROR, error);\n      \n      // Show user-friendly error message\n      this.showInitializationError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Shows initialization error to user\n   * @param {Error} error - The error that occurred\n   */\n  showInitializationError(error) {\n    if (this.elements.consoleContainer) {\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'console-line console-error';\n      errorDiv.textContent = `‚ö†Ô∏è Initialization failed: ${error.message}`;\n      this.elements.consoleContainer.appendChild(errorDiv);\n    }\n  }\n\n  /**\n   * Finds and caches DOM elements\n   */\n  findElements() {\n    this.elements = {\n      app: document.querySelector('.app'),\n      editorContainer: document.getElementById('editorContainer'),\n      consoleContainer: document.getElementById('console'),\n      sandboxContainer: document.getElementById('sandboxContainer'),\n      runBtn: document.getElementById('runBtn'),\n      clearBtn: document.getElementById('clearBtn'),\n      resetBtn: document.getElementById('resetBtn'),\n      togglePreview: document.getElementById('togglePreview'),\n      previewWrap: document.getElementById('previewWrap'),\n      status: document.getElementById('status'),\n      limitLabel: document.getElementById('limitLabel'),\n      toolbar: document.querySelector('.toolbar')\n    };\n\n    // Validate required elements\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\n    const missing = required.filter(key => !this.elements[key]);\n    \n    if (missing.length > 0) {\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\n    }\n  }\n\n  /**\n   * Initializes all components with error boundaries\n   * @returns {Promise<void>}\n   */\n  async initializeComponents() {\n    this.logger.info('Initializing components...');\n\n    // Initialize storage\n    try {\n      this.storage = new Storage(this.options.storageKey, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Storage initialized');\n    } catch (error) {\n      this.logger.error('Storage initialization failed:', error);\n      // Non-fatal, continue without persistence\n    }\n\n    // Initialize console\n    try {\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Console initialized');\n    } catch (error) {\n      this.logger.error('Console initialization failed:', error);\n      throw new Error('Failed to initialize console output');\n    }\n\n    // Initialize sandbox\n    try {\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\n        timeLimit: this.options.timeLimit,\n        debug: this.options.debug,\n        logLevel: this.options.logLevel,\n        onMessage: (type, args) => {\n          this.console.addLine(type, args);\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\n        },\n        onStatusChange: (status) => this.updateStatus(status)\n      });\n      this.logger.debug('SandboxEngine created');\n\n      // Initialize sandbox template\n      await this.sandbox.initialize();\n      this.logger.info('Sandbox initialized');\n    } catch (error) {\n      this.logger.error('Sandbox initialization failed:', error);\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\n    }\n\n    // Initialize examples system\n    try {\n      this.examples = new ExamplesLoader({\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\n        debug: true // Always debug examples loading to help troubleshoot\n      });\n\n      // Initialize examples dropdown (only if not already created)\n      if (this.elements.toolbar && !this.examplesDropdown) {\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\n          onSelect: (exampleId) => this.loadExample(exampleId)\n        });\n\n        // Load available examples\n        try {\n          this.examplesDropdown.setLoading(true);\n          const availableExamples = await this.examples.discoverExamples();\n          this.examplesDropdown.setExamples(availableExamples);\n          this.logger.info('Examples loaded:', availableExamples.length);\n        } catch (error) {\n          this.logger.error('Failed to load examples:', error);\n          this.examplesDropdown.setError('Failed to load');\n        }\n      }\n    } catch (error) {\n      this.logger.warn('Examples system initialization failed:', error);\n      // Non-fatal, continue without examples\n    }\n\n    // Update time limit display\n    if (this.elements.limitLabel) {\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\n    }\n\n    // Initialize resizable panes\n    this.initializeResizer();\n\n    // Handle responsive layout changes\n    this.setupResponsiveListener();\n\n    // Set initial state for preview toggle\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane && this.elements.previewWrap) {\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\n    }\n\n    // Initialize neon glow effects\n    this.initializeNeonGlow();\n\n    this.logger.info('Components initialization complete');\n  }\n\n  /**\n   * Initializes neon glow effects on UI elements\n   */\n  initializeNeonGlow() {\n    try {\n      this.neonGlow = new NeonGlowManager({\n        transitionDuration: 8000,\n        autoRotate: true,\n        debug: true // Enable debug to see color changes\n      });\n\n      // Apply glow ONLY to panes (not navbar)\n      const panes = this.elements.app.querySelectorAll('.pane');\n      panes.forEach(pane => {\n        this.neonGlow.applyGlow(pane);\n      });\n\n      // Start automatic color rotation\n      this.neonGlow.startRotation();\n\n      this.logger.info('Neon glow effects initialized');\n    } catch (error) {\n      this.logger.warn('Failed to initialize neon glow:', error);\n      // Non-fatal, continue without neon effects\n    }\n  }\n\n  /**\n   * Cleans up existing resize handlers\n   */\n  cleanupResizeHandlers() {\n    this.resizeHandlers.forEach(handler => {\n      if (handler && handler.cleanup) {\n        handler.cleanup();\n      }\n    });\n    this.resizeHandlers = [];\n  }\n\n  /**\n   * Initializes the resizable panes functionality\n   */\n  initializeResizer() {\n    if (!this.elements.app) return;\n\n    // Cleanup existing handlers\n    this.cleanupResizeHandlers();\n\n    // Skip horizontal resize on mobile\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.initializeVerticalResize();\n      return;\n    }\n\n    const mainContent = this.elements.app.querySelector('.main-content');\n    if (!mainContent) return;\n\n    // Remove any existing resize handles first\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\n    existingHandles.forEach(handle => handle.remove());\n\n    // Reset any inline grid styles that might have been applied\n    mainContent.style.gridTemplateColumns = '';\n    mainContent.style.gridTemplateRows = '';\n\n    // Reset right pane styles\n    const rightPane = mainContent.querySelector('.pane:last-child');\n    if (rightPane) {\n      rightPane.style.gridTemplateRows = '';\n      rightPane.classList.remove('preview-hidden');\n    }\n\n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resize-handle';\n\n    // Insert between the first and last pane in main-content\n    const panes = mainContent.querySelectorAll('.pane');\n    if (panes.length >= 2) {\n      mainContent.insertBefore(resizeHandle, panes[1]);\n\n      // Create horizontal resize handler using utility\n      const horizontalHandler = createHorizontalResizeHandler({\n        container: mainContent,\n        leftPane: panes[0],\n        rightPane: panes[1],\n        handle: resizeHandle,\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\n      });\n\n      this.resizeHandlers.push(horizontalHandler);\n    }\n\n    // Initialize vertical resizing\n    this.initializeVerticalResize();\n  }\n\n  /**\n   * Sets up responsive layout listener for orientation/resize changes\n   */\n  setupResponsiveListener() {\n    // Clean up existing listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n    }\n\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\n\n    const handleChange = () => {\n      this.logger.debug('Responsive breakpoint changed');\n      this.initializeResizer();\n    };\n\n    mediaQuery.addListener(handleChange);\n\n    // Store reference for cleanup\n    this.responsiveListener = { mediaQuery, handleChange };\n  }\n\n  /**\n   * Initializes vertical resizing between console and preview\n   */\n  initializeVerticalResize() {\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (!rightPane) return;\n\n    // Create vertical resize handle\n    const verticalHandle = document.createElement('div');\n    verticalHandle.className = 'vertical-resize-handle';\n\n    // Insert after console\n    const consoleEl = rightPane.querySelector('.console');\n    if (consoleEl) {\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\n\n      // Create vertical resize handler using utility\n      const verticalHandler = createVerticalResizeHandler({\n        container: rightPane,\n        topPane: consoleEl,\n        bottomPane: this.elements.previewWrap,\n        handle: verticalHandle,\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\n      });\n\n      this.resizeHandlers.push(verticalHandler);\n    }\n  }\n\n  /**\n   * Sets the editor instance\n   * @param {EditorAdapter} editor - The editor instance\n   */\n  setEditor(editor) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n\n    this.editor = editor;\n\n    // Setup editor event handlers\n    this.editor.onChange((code) => {\n      if (this.storage) {\n        this.storage.save(code);\n      }\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\n    });\n\n    this.editor.onExecute(() => {\n      this.run();\n    });\n\n    // Load initial code now that editor is ready\n    this.loadInitialCode();\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\n  }\n\n  /**\n   * Sets up event listeners for UI interactions\n   */\n  setupEventListeners() {\n    if (this.elements.runBtn) {\n      this.elements.runBtn.addEventListener('click', () => this.run());\n    }\n\n    if (this.elements.clearBtn) {\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\n    }\n\n    if (this.elements.resetBtn) {\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    if (this.elements.togglePreview) {\n      this.elements.togglePreview.addEventListener('change', (e) => {\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          if (e.target.checked) {\n            rightPane.classList.add('has-preview');\n          } else {\n            rightPane.classList.remove('has-preview');\n            rightPane.style.gridTemplateRows = '';\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Loads initial code into the editor\n   */\n  loadInitialCode() {\n    const savedCode = this.storage ? this.storage.load() : null;\n    const initialCode = savedCode || this.options.defaultCode;\n\n    if (this.editor) {\n      this.editor.setValue(initialCode);\n      this.editor.focus();\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\n    }\n  }\n\n  /**\n   * Runs the current code in the sandbox\n   */\n  run() {\n    if (!this.editor) {\n      this.logger.error('No editor configured');\n      return;\n    }\n\n    const code = this.editor.getValue();\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\n\n    // Validate syntax first\n    const validation = this.sandbox.validateSyntax(code);\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\n\n    this.console.clear();\n    this.sandbox.execute(code);\n  }\n\n  /**\n   * Clears the console output\n   */\n  clearConsole() {\n    this.console.clear();\n    this.updateStatus(STATUS_MESSAGES.cleared);\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\n  }\n\n  /**\n   * Resets the sandbox\n   */\n  reset() {\n    this.sandbox.reset();\n    this.updateStatus(STATUS_MESSAGES.reset);\n    this.events.emit(EVENTS.SANDBOX_RESET);\n  }\n\n  /**\n   * Updates the status display\n   * @param {string} status - Status message or key\n   */\n  updateStatus(status) {\n    if (!this.elements.status) return;\n\n    const displayStatus = STATUS_MESSAGES[status] || status;\n    this.elements.status.textContent = displayStatus;\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\n\n    // Emit specific status events\n    if (status === 'completed') {\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\n    } else if (status === 'timeout') {\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\n    }\n  }\n\n  /**\n   * Registers an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @param {Object} [options={}] - Options for the listener\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback, options) {\n    return this.events.on(event, callback, options);\n  }\n\n  /**\n   * Registers a one-time event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @returns {Function} Unsubscribe function\n   */\n  once(event, callback) {\n    return this.events.once(event, callback);\n  }\n\n  /**\n   * Removes an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n\n  /**\n   * Gets the current code from the editor\n   * @returns {string|null} The current code or null if no editor\n   */\n  getCode() {\n    return this.editor ? this.editor.getValue() : null;\n  }\n\n  /**\n   * Sets code in the editor\n   * @param {string} code - The code to set\n   */\n  setCode(code) {\n    if (this.editor) {\n      this.editor.setValue(code);\n    }\n  }\n\n  /**\n   * Validates JavaScript syntax without executing\n   * @param {string} [code] - The code to validate, or current editor code if not provided\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\n   */\n  validateCode(code) {\n    const codeToValidate = code || this.getCode();\n    return this.sandbox ? \n      this.sandbox.validateSyntax(codeToValidate) : \n      { valid: false, error: 'Sandbox not initialized' };\n  }\n\n  /**\n   * Loads and runs an example\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<void>}\n   */\n  async loadExample(exampleId) {\n    try {\n      this.logger.info('Loading example:', exampleId);\n\n      const example = await this.examples.loadExample(exampleId);\n\n      // Set the code in the editor\n      this.setCode(example.code);\n\n      // Open preview pane\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\n        this.elements.togglePreview.checked = true;\n        this.elements.previewWrap.classList.add('show');\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          rightPane.classList.add('has-preview');\n        }\n      }\n\n      // Run the example\n      this.run();\n\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\n    }\n  }\n\n  /**\n   * Cleans up the controller and all components\n   */\n  destroy() {\n    this.logger.info('Destroying controller...');\n    \n    this.events.emit(EVENTS.DESTROY);\n\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n\n    if (this.sandbox) {\n      this.sandbox.destroy();\n      this.sandbox = null;\n    }\n\n    if (this.examples) {\n      this.examples.destroy();\n      this.examples = null;\n    }\n\n    if (this.examplesDropdown) {\n      this.examplesDropdown.destroy();\n      this.examplesDropdown = null;\n    }\n\n    if (this.neonGlow) {\n      this.neonGlow.destroy();\n      this.neonGlow = null;\n    }\n\n    // Cleanup resize handlers\n    this.cleanupResizeHandlers();\n\n    // Cleanup responsive listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n      this.responsiveListener = null;\n    }\n\n    this.events.removeAllListeners();\n    this.isInitialized = false;\n    \n    this.logger.info('Controller destroyed');\n  }\n}\n","import { \n  MIN_LEFT_PANE_WIDTH, \n  MIN_RIGHT_PANE_WIDTH,\n  MIN_CONSOLE_HEIGHT,\n  MIN_PREVIEW_HEIGHT,\n  RESIZE_HANDLE_WIDTH \n} from './constants.js';\n\n/**\n * Shared resize functionality for panes\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\n/**\n * Creates a horizontal resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.leftPane - Left pane element\n * @param {HTMLElement} config.rightPane - Right pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @returns {Object} Handler functions and cleanup\n */\nexport function createHorizontalResizeHandler(config) {\n  const { container, leftPane, rightPane, handle, onResize } = config;\n  \n  let isResizing = false;\n  let startX = 0;\n  let startLeftWidth = 0;\n  let startRightWidth = 0;\n\n  const handleMouseDown = (e) => {\n    isResizing = true;\n    startX = e.clientX;\n    handle.classList.add('dragging');\n\n    startLeftWidth = leftPane.getBoundingClientRect().width;\n    startRightWidth = rightPane.getBoundingClientRect().width;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'col-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n\n    const deltaX = e.clientX - startX;\n    const containerRect = container.getBoundingClientRect();\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\n\n    // Calculate new widths with constraints\n    const newLeftWidth = Math.max(\n      MIN_LEFT_PANE_WIDTH,\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\n    );\n    const newRightWidth = totalWidth - newLeftWidth;\n\n    // Update grid template\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\n\n    e.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  handle.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n\n  return {\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  };\n}\n\n/**\n * Creates a vertical resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.topPane - Top pane element\n * @param {HTMLElement} config.bottomPane - Bottom pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\n * @returns {Object} Handler functions and cleanup\n */\nexport function createVerticalResizeHandler(config) {\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\n  \n  let isResizing = false;\n  let startY = 0;\n  let startTopHeight = 0;\n  let startBottomHeight = 0;\n\n  const handleMouseDown = (e) => {\n    // Check if resizing is allowed\n    if (shouldResize && !shouldResize()) return;\n\n    isResizing = true;\n    startY = e.clientY;\n    handle.classList.add('dragging');\n\n    const topRect = topPane.getBoundingClientRect();\n    const bottomRect = bottomPane.getBoundingClientRect();\n\n    startTopHeight = topRect.height;\n    startBottomHeight = bottomRect.height;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'row-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n\n    const deltaY = e.clientY - startY;\n    const totalContentHeight = startTopHeight + startBottomHeight;\n\n    // Calculate new heights with constraints\n    const newTopHeight = Math.max(\n      MIN_CONSOLE_HEIGHT,\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\n    );\n    const newBottomHeight = totalContentHeight - newTopHeight;\n\n    // Update grid template\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\n\n    e.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  handle.addEventListener('mousedown', handleMouseDown);\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n\n  return {\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n  };\n}\n","import { EditorAdapter } from './base.js';\n\n/**\n * Plain textarea editor adapter for basic code editing\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class TextareaEditor extends EditorAdapter {\n  /**\n   * Creates a new TextareaEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\n   */\n  constructor(container, options = {}) {\n    super(container, options);\n    this.textarea = null;\n    this.init();\n  }\n\n  /**\n   * Initializes the textarea editor\n   */\n  init() {\n    this.textarea = document.createElement('textarea');\n    this.textarea.className = 'code-editor';\n    this.textarea.spellcheck = false;\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\n\n    this.container.appendChild(this.textarea);\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for the textarea\n   */\n  setupEventListeners() {\n    this.textarea.addEventListener('input', () => {\n      this.triggerChange();\n    });\n\n    this.textarea.addEventListener('keydown', (e) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        e.preventDefault();\n        this.triggerExecute();\n      }\n    });\n  }\n\n  /**\n   * Gets the current code value from the textarea\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.textarea.value;\n  }\n\n  /**\n   * Sets the code value in the textarea\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    this.textarea.value = code;\n  }\n\n  /**\n   * Focuses the textarea\n   */\n  focus() {\n    this.textarea.focus();\n  }\n\n  /**\n   * Cleans up the textarea editor\n   */\n  destroy() {\n    if (this.textarea) {\n      this.textarea.remove();\n    }\n  }\n}","/**\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { SandboxController } from './ui/controller.js';\nimport { CodeMirrorEditor } from './editors/codemirror.js';\nimport { TextareaEditor } from './editors/textarea.js';\nimport { Logger } from './core/logger.js';\n\n/**\n * Auto-detects and initializes the best available editor\n * @param {HTMLElement} container - DOM element to contain the editor\n * @param {Object} [options={}] - Editor configuration options\n * @returns {EditorAdapter} The initialized editor instance\n */\nfunction createEditor(container, options = {}) {\n  const logger = new Logger({\n    enabled: options.debug || false,\n    level: 'info',\n    prefix: 'EditorFactory'\n  });\n\n  // Try CodeMirror first if available\n  if (typeof CodeMirror !== 'undefined') {\n    try {\n      logger.info('Initializing CodeMirror editor');\n      return new CodeMirrorEditor(container, options);\n    } catch (e) {\n      logger.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\n    }\n  }\n\n  // Fallback to textarea\n  logger.info('Initializing textarea editor');\n  return new TextareaEditor(container, options);\n}\n\n/**\n * Initializes the JavaScript sandbox application\n * @param {Object} [options={}] - Configuration options\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n * @param {string} [options.storageKey] - LocalStorage key for persistence\n * @param {string} [options.defaultCode] - Default code to load\n * @param {boolean} [options.debug=false] - Enable debug logging\n * @param {string} [options.logLevel='info'] - Log level for debugging\n * @param {string} [options.templatePath] - Path to custom sandbox template\n * @returns {Promise<SandboxController>} The initialized sandbox controller\n */\nexport async function initSandbox(options = {}) {\n  const debug = options.debug || false;\n  const logger = new Logger({\n    enabled: debug,\n    level: options.logLevel || 'info',\n    prefix: 'App'\n  });\n\n  try {\n    logger.info('Starting sandbox initialization...');\n\n    // Create controller\n    const controller = new SandboxController(options);\n    \n    // Initialize controller (now properly awaited)\n    await controller.init();\n    logger.info('Controller initialized');\n\n    // Find editor container\n    const editorContainer = document.getElementById('editorContainer');\n    if (!editorContainer) {\n      throw new Error('Editor container element not found');\n    }\n\n    // Create editor\n    const editor = createEditor(editorContainer, {\n      mode: 'javascript',\n      theme: 'darcula',\n      autofocus: true,\n      debug: debug\n    });\n    logger.info('Editor created');\n\n    // Set editor on controller\n    controller.setEditor(editor);\n    logger.info('Editor set on controller');\n    \n    logger.info('Sandbox initialization complete');\n    return controller;\n  } catch (error) {\n    logger.error('Sandbox initialization failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Auto-initializes the sandbox if DOM is ready\n */\nfunction autoInit() {\n  // Only auto-init if not already initialized and editor container exists\n  if (!window.sandbox && document.getElementById('editorContainer')) {\n    initSandbox({ debug: false })\n      .then(sandbox => {\n        window.sandbox = sandbox;\n        console.log('‚úÖ Sandbox initialized successfully');\n      })\n      .catch(error => {\n        console.error('‚ùå Failed to initialize sandbox:', error);\n      });\n  }\n}\n\n// Auto-initialize based on document state\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  // DOM already loaded\n  autoInit();\n}\n\n// Export for manual initialization\nexport { SandboxController, CodeMirrorEditor, TextareaEditor };\n"],"names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","Set","Math","floor","random","complementaryHue","baseHue","applyGlow","element","classList","add","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","storageKey","defaultCode","getDefaultCode","logLevel","events","EventEmitter","editor","sandbox","console","storage","examplesDropdown","neonGlow","elements","resizeHandlers","responsiveListener","isInitialized","join","init","emit","EVENTS","INIT_START","findElements","initializeComponents","setupEventListeners","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","app","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","missing","filter","ConsoleOutput","SandboxEngine","onMessage","type","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","toggle","initializeNeonGlow","querySelectorAll","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleMouseDown","clientX","getBoundingClientRect","width","body","userSelect","cursor","preventDefault","handleMouseMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleMouseUp","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","setEditor","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","savedCode","initialCode","setValue","focus","CODE_LOAD","fromStorage","getValue","CODE_EXECUTE_START","validation","validateSyntax","CODE_VALIDATE","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","on","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","valid","EXAMPLE_LOADED","DESTROY","removeAllListeners","TextareaEditor","EditorAdapter","super","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","async","initSandbox","controller","CodeMirror","CodeMirrorEditor","createEditor","mode","theme","autofocus","autoInit","then","log","catch","readyState"],"mappings":"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"}