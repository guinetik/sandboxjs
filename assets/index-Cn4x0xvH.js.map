{"version":3,"file":"index-Cn4x0xvH.js","sources":["../../src/core/storage.js","../../src/core/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/controller.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["/**\n * Simple localStorage wrapper for persistent code storage\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class Storage {\n  /**\n   * Creates a new Storage instance\n   * @param {string} [key='js-sandbox-code'] - The localStorage key to use\n   */\n  constructor(key = 'js-sandbox-code') {\n    this.key = key;\n  }\n\n  /**\n   * Saves code to localStorage\n   * @param {string} code - The code to save\n   */\n  save(code) {\n    try {\n      localStorage.setItem(this.key, code);\n    } catch (e) {\n      console.warn('Failed to save code to localStorage:', e);\n    }\n  }\n\n  /**\n   * Loads code from localStorage\n   * @returns {string|null} The saved code or null if not found\n   */\n  load() {\n    try {\n      return localStorage.getItem(this.key);\n    } catch (e) {\n      console.warn('Failed to load code from localStorage:', e);\n      return null;\n    }\n  }\n}","/**\n * Examples loader for the JavaScript sandbox\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesLoader {\n  /**\n   * Creates a new ExamplesLoader instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.examplesPath='./examples'] - Path to examples directory\n   * @param {Function} [options.onLoad] - Callback when example is loaded\n   * @param {Function} [options.onError] - Callback when loading fails\n   */\n  constructor(options = {}) {\n    this.examplesPath = options.examplesPath || './examples';\n    this.onLoad = options.onLoad || (() => {});\n    this.onError = options.onError || (() => {});\n    this.examples = new Map();\n  }\n\n  /**\n   * Discovers available examples by attempting to load known files\n   * @returns {Promise<Array>} Array of example metadata\n   */\n  async discoverExamples() {\n    // Known examples - in a real app, this could come from an API or manifest\n    const knownExamples = [\n      {\n        id: 'hello-world',\n        title: 'üëã Hello World',\n        description: 'Simple greeting with interactive button',\n        file: 'hello-world.js'\n      },\n      {\n        id: 'spinning-animation',\n        title: 'üåÄ CSS Animations',\n        description: 'Spinning box with rainbow colors and controls',\n        file: 'spinning-animation.js'\n      },\n      {\n        id: 'interactive-form',\n        title: 'üìù Interactive Form',\n        description: 'Form validation and submission handling',\n        file: 'interactive-form.js'\n      },\n      {\n        id: 'canvas-drawing',\n        title: 'üé® Canvas Drawing',\n        description: 'Draw with mouse or touch on HTML5 canvas',\n        file: 'canvas-drawing.js'\n      }\n    ];\n\n    const availableExamples = [];\n\n    // Test each example to see if it's available\n    for (const example of knownExamples) {\n      try {\n        const response = await fetch(`${this.examplesPath}/${example.file}`);\n        if (response.ok) {\n          const code = await response.text();\n          this.examples.set(example.id, { ...example, code });\n          availableExamples.push(example);\n        }\n      } catch (error) {\n        console.warn(`Example ${example.id} not available:`, error);\n      }\n    }\n\n    return availableExamples;\n  }\n\n  /**\n   * Loads an example by ID\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<Object>} Example data with code\n   */\n  async loadExample(exampleId) {\n    if (this.examples.has(exampleId)) {\n      const example = this.examples.get(exampleId);\n      this.onLoad(example);\n      return example;\n    }\n\n    // Try to load if not cached\n    try {\n      const availableExamples = await this.discoverExamples();\n      const example = this.examples.get(exampleId);\n\n      if (example) {\n        this.onLoad(example);\n        return example;\n      } else {\n        throw new Error(`Example '${exampleId}' not found`);\n      }\n    } catch (error) {\n      this.onError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets all available examples\n   * @returns {Array} Array of cached examples\n   */\n  getAvailableExamples() {\n    return Array.from(this.examples.values());\n  }\n\n  /**\n   * Clears the examples cache\n   */\n  clearCache() {\n    this.examples.clear();\n  }\n}","/**\n * Examples dropdown UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesDropdown {\n  /**\n   * Creates a new ExamplesDropdown instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} options - Configuration options\n   * @param {Function} [options.onSelect] - Callback when example is selected\n   */\n  constructor(container, options = {}) {\n    this.container = container;\n    this.onSelect = options.onSelect || (() => {});\n    this.examples = [];\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'examples-dropdown';\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    this.dropdown.addEventListener('change', (e) => {\n      const exampleId = e.target.value;\n      if (exampleId) {\n        this.onSelect(exampleId);\n        // Reset to placeholder after selection\n        setTimeout(() => {\n          this.dropdown.value = '';\n        }, 100);\n      }\n    });\n\n    // Insert before the preview button (last element in toolbar)\n    const previewLabel = this.container.querySelector('label.btn');\n    if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with examples\n   * @param {Array} examples - Array of example objects\n   */\n  setExamples(examples) {\n    this.examples = examples;\n\n    // Reset to normal placeholder first\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    // Add example options\n    examples.forEach(example => {\n      const option = document.createElement('option');\n      option.value = example.id;\n      option.textContent = example.title;\n      option.title = example.description; // Tooltip\n      this.dropdown.appendChild(option);\n    });\n\n    // Enable dropdown if we have examples\n    this.dropdown.disabled = examples.length === 0;\n  }\n\n  /**\n   * Shows loading state\n   */\n  setLoading(loading = true) {\n    if (loading) {\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\n      this.dropdown.disabled = true;\n    } else {\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n      this.dropdown.disabled = false;\n    }\n  }\n\n  /**\n   * Shows error state\n   * @param {string} message - Error message to display\n   */\n  setError(message = 'Failed to load examples') {\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\n    this.dropdown.disabled = true;\n  }\n\n  /**\n   * Destroys the dropdown\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { SandboxEngine } from '../core/sandbox.js';\nimport { ConsoleOutput } from '../core/console.js';\nimport { Storage } from '../core/storage.js';\nimport { Logger } from '../core/logger.js';\nimport { EventEmitter } from '../core/events.js';\nimport { ExamplesLoader } from '../core/examples.js';\nimport { ExamplesDropdown } from './examples-dropdown.js';\n\n/**\n * Main controller that orchestrates the sandbox application components\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class SandboxController {\n  /**\n   * Creates a new SandboxController instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.timeLimit=4000] - Execution timeout in milliseconds\n   * @param {string} [options.storageKey='js-sandbox-code'] - LocalStorage key for persistence\n   * @param {string} [options.defaultCode] - Default code to load\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logLevel='info'] - Log level for debugging\n   */\n  constructor(options = {}) {\n    this.options = {\n      timeLimit: 4000,\n      storageKey: 'js-sandbox-code',\n      defaultCode: this.getDefaultCode(),\n      debug: false,\n      logLevel: 'info',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: this.options.logLevel,\n      prefix: 'Controller'\n    });\n\n    this.events = new EventEmitter();\n    this.editor = null;\n    this.sandbox = null;\n    this.console = null;\n    this.storage = null;\n    this.examples = null;\n    this.examplesDropdown = null;\n    this.elements = {};\n\n    this.init();\n  }\n\n  /**\n   * Returns the default JavaScript code to load in the editor\n   * @returns {string} Default code content\n   */\n  getDefaultCode() {\n    return [\n      '// Welcome to JS Sandbox! üôå',\n      '//',\n      '// Tips:',\n      '//  - Use console.log/info/warn/error',\n      '//  - Ctrl/Cmd+Enter to execute',\n      '//  - \"Reset\" kills stuck executions',\n      '//',\n      '// Examples:',\n      'console.log(\"Hello, sandbox!\");',\n      'function noReturn() { var x = 1+1; }',\n      'noReturn(); // no return value, all good',\n      '',\n      '// DOM inside sandbox:',\n      'var el = document.createElement(\"h1\");',\n      'el.textContent = \"Hello from iframe!\";',\n      'document.body.appendChild(el);',\n      '',\n      '// Errors:',\n      'Promise.reject(\"rejected!\");',\n      '// throw new Error(\"Exception thrown\");',\n      '',\n      '// Infinite loop test (commented):',\n      '// while(true) {}'\n    ].join('\\n');\n  }\n\n  async init() {\n    this.events.emit('init:start');\n    this.findElements();\n    await this.initializeComponents();\n    this.setupEventListeners();\n    this.events.emit('init:complete');\n    // Note: loadInitialCode() is called after editor is set in setEditor()\n  }\n\n  findElements() {\n    this.elements = {\n      app: document.querySelector('.app'),\n      editorContainer: document.getElementById('editorContainer'),\n      consoleContainer: document.getElementById('console'),\n      sandboxContainer: document.getElementById('sandboxContainer'),\n      runBtn: document.getElementById('runBtn'),\n      clearBtn: document.getElementById('clearBtn'),\n      resetBtn: document.getElementById('resetBtn'),\n      togglePreview: document.getElementById('togglePreview'),\n      previewWrap: document.getElementById('previewWrap'),\n      status: document.getElementById('status'),\n      limitLabel: document.getElementById('limitLabel'),\n      toolbar: document.querySelector('.toolbar')\n    };\n  }\n\n  async initializeComponents() {\n    this.logger.info('Initializing components...');\n\n    // Initialize storage\n    this.storage = new Storage(this.options.storageKey);\n    this.logger.debug('Storage initialized');\n\n    // Initialize console\n    this.console = new ConsoleOutput(this.elements.consoleContainer);\n    this.logger.debug('Console initialized');\n\n    // Initialize sandbox\n    this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\n      timeLimit: this.options.timeLimit,\n      debug: this.options.debug,\n      logLevel: this.options.logLevel,\n      onMessage: (type, args) => {\n        this.console.addLine(type, args);\n        this.events.emit('console:message', { type, args });\n      },\n      onStatusChange: (status) => this.updateStatus(status)\n    });\n    this.logger.debug('SandboxEngine created');\n\n    // Initialize sandbox template\n    await this.sandbox.initialize();\n    this.logger.info('Sandbox initialized');\n\n    // Initialize examples system\n    this.examples = new ExamplesLoader({\n      onLoad: (example) => this.events.emit('example:load', example),\n      onError: (error) => this.events.emit('example:error', error)\n    });\n\n    // Initialize examples dropdown (only if not already created)\n    if (this.elements.toolbar && !this.examplesDropdown) {\n      this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\n        onSelect: (exampleId) => this.loadExample(exampleId)\n      });\n\n      // Load available examples\n      try {\n        this.examplesDropdown.setLoading(true);\n        const availableExamples = await this.examples.discoverExamples();\n        this.examplesDropdown.setExamples(availableExamples);\n        this.logger.info('Examples loaded:', availableExamples.length);\n      } catch (error) {\n        this.logger.error('Failed to load examples:', error);\n        this.examplesDropdown.setError();\n      }\n    }\n\n    // Update time limit display\n    if (this.elements.limitLabel) {\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\n    }\n\n    // Initialize resizable panes\n    this.initializeResizer();\n\n    // Set initial state for preview toggle\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane && this.elements.previewWrap) {\n      // Ensure initial state is consistent\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\n    }\n\n    this.logger.info('Components initialization complete');\n  }\n\n  /**\n   * Initializes the resizable panes functionality\n   */\n  initializeResizer() {\n    if (!this.elements.app) return;\n\n    // Remove any existing resize handles first\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\n    existingHandles.forEach(handle => handle.remove());\n\n    // Reset any inline grid styles that might have been applied\n    const mainContent = this.elements.app.querySelector('.main-content');\n    mainContent.style.gridTemplateColumns = '';\n    mainContent.style.gridTemplateRows = '';\n\n    // Reset right pane styles\n    const rightPane = mainContent.querySelector('.pane:last-child');\n    if (rightPane) {\n      rightPane.style.gridTemplateRows = '';\n      rightPane.classList.remove('preview-hidden');\n    }\n\n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resize-handle';\n\n    // Insert between the first and last pane in main-content\n    const panes = mainContent.querySelectorAll('.pane');\n    if (panes.length >= 2) {\n      mainContent.insertBefore(resizeHandle, panes[1]);\n    }\n\n    let isResizing = false;\n    let startX = 0;\n    let startLeftWidth = 0;\n    let startRightWidth = 0;\n\n    const handleMouseDown = (e) => {\n      isResizing = true;\n      startX = e.clientX;\n      resizeHandle.classList.add('dragging');\n\n      // Get current column sizes\n      const appRect = this.elements.app.getBoundingClientRect();\n      const handleRect = resizeHandle.getBoundingClientRect();\n      const leftPane = panes[0];\n      const rightPane = panes[1];\n\n      startLeftWidth = leftPane.getBoundingClientRect().width;\n      startRightWidth = rightPane.getBoundingClientRect().width;\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = 'none';\n      document.body.style.cursor = 'col-resize';\n\n      e.preventDefault();\n    };\n\n    const handleMouseMove = (e) => {\n      if (!isResizing) return;\n\n      const deltaX = e.clientX - startX;\n      const mainContentRect = mainContent.getBoundingClientRect();\n      const totalWidth = mainContentRect.width - 25; // Subtract padding and handle width\n\n      // Calculate new widths\n      const newLeftWidth = Math.max(320, Math.min(totalWidth - 420, startLeftWidth + deltaX));\n      const newRightWidth = totalWidth - newLeftWidth;\n\n      // Update grid template\n      const leftFr = newLeftWidth / totalWidth;\n      const rightFr = newRightWidth / totalWidth;\n\n      mainContent.style.gridTemplateColumns = `${newLeftWidth}px 5px ${newRightWidth}px`;\n\n      e.preventDefault();\n    };\n\n    const handleMouseUp = () => {\n      if (!isResizing) return;\n\n      isResizing = false;\n      resizeHandle.classList.remove('dragging');\n\n      // Restore styles\n      document.body.style.userSelect = '';\n      document.body.style.cursor = '';\n\n      this.events.emit('panes:resized');\n    };\n\n    // Event listeners\n    resizeHandle.addEventListener('mousedown', handleMouseDown);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    // Store references for cleanup\n    this.resizeHandle = resizeHandle;\n    this.resizeListeners = { handleMouseDown, handleMouseMove, handleMouseUp };\n\n    // Initialize vertical resizing if preview is visible\n    this.initializeVerticalResize();\n  }\n\n  /**\n   * Initializes vertical resizing between console and preview\n   */\n  initializeVerticalResize() {\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (!rightPane) return;\n\n    // Create vertical resize handle\n    const verticalHandle = document.createElement('div');\n    verticalHandle.className = 'vertical-resize-handle';\n\n    // Insert after console\n    const console = rightPane.querySelector('.console');\n    if (console) {\n      console.parentNode.insertBefore(verticalHandle, console.nextSibling);\n    }\n\n    let isResizing = false;\n    let startY = 0;\n    let startConsoleHeight = 0;\n    let startPreviewHeight = 0;\n\n    const handleMouseDown = (e) => {\n      // Only allow resizing if preview is visible\n      if (!this.elements.previewWrap.classList.contains('show')) return;\n\n      isResizing = true;\n      startY = e.clientY;\n      verticalHandle.classList.add('dragging');\n\n      const consoleRect = console.getBoundingClientRect();\n      const previewRect = this.elements.previewWrap.getBoundingClientRect();\n\n      startConsoleHeight = consoleRect.height;\n      startPreviewHeight = previewRect.height;\n\n      document.body.style.userSelect = 'none';\n      document.body.style.cursor = 'row-resize';\n\n      e.preventDefault();\n    };\n\n    const handleMouseMove = (e) => {\n      if (!isResizing) return;\n\n      const deltaY = e.clientY - startY;\n      const totalContentHeight = startConsoleHeight + startPreviewHeight;\n\n      // Calculate new heights - one grows while the other shrinks\n      const newConsoleHeight = Math.max(100, Math.min(totalContentHeight - 100, startConsoleHeight + deltaY));\n      const newPreviewHeight = totalContentHeight - newConsoleHeight;\n\n      // Update grid template\n      rightPane.style.gridTemplateRows = `auto ${newConsoleHeight}px 8px ${newPreviewHeight}px auto`;\n\n      e.preventDefault();\n    };\n\n    const handleMouseUp = () => {\n      if (!isResizing) return;\n\n      isResizing = false;\n      verticalHandle.classList.remove('dragging');\n\n      document.body.style.userSelect = '';\n      document.body.style.cursor = '';\n\n      this.events.emit('panes:resized:vertical');\n    };\n\n    // Event listeners\n    verticalHandle.addEventListener('mousedown', handleMouseDown);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    // Store references for cleanup\n    this.verticalResizeHandle = verticalHandle;\n    this.verticalResizeListeners = { handleMouseDown, handleMouseMove, handleMouseUp };\n  }\n\n  setEditor(editor) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n\n    this.editor = editor;\n\n    // Setup editor event handlers\n    this.editor.onChange((code) => {\n      this.storage.save(code);\n      this.events.emit('code:change', { code });\n    });\n\n    this.editor.onExecute(() => {\n      this.run();\n    });\n\n    // Load initial code now that editor is ready\n    this.loadInitialCode();\n    this.events.emit('editor:ready', { editor });\n  }\n\n  setupEventListeners() {\n    if (this.elements.runBtn) {\n      this.elements.runBtn.addEventListener('click', () => this.run());\n    }\n\n    if (this.elements.clearBtn) {\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\n    }\n\n    if (this.elements.resetBtn) {\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    if (this.elements.togglePreview) {\n      this.elements.togglePreview.addEventListener('change', (e) => {\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          if (e.target.checked) {\n            // Preview is now visible - enable vertical resizing\n            rightPane.classList.add('has-preview');\n          } else {\n            // Preview is hidden - disable vertical resizing\n            rightPane.classList.remove('has-preview');\n            rightPane.style.gridTemplateRows = ''; // Reset to CSS default\n          }\n        }\n      });\n    }\n  }\n\n  loadInitialCode() {\n    const savedCode = this.storage.load();\n    const initialCode = savedCode || this.options.defaultCode;\n\n    if (this.editor) {\n      this.editor.setValue(initialCode);\n      this.editor.focus();\n      this.events.emit('code:load', { code: initialCode, fromStorage: !!savedCode });\n    }\n  }\n\n  run() {\n    if (!this.editor) {\n      console.error('No editor configured');\n      return;\n    }\n\n    const code = this.editor.getValue();\n    this.events.emit('code:execute:start', { code });\n\n    // Validate syntax first\n    const validation = this.sandbox.validateSyntax(code);\n    this.events.emit('code:validate', { code, validation });\n\n    this.console.clear();\n    this.sandbox.execute(code);\n  }\n\n  clearConsole() {\n    this.console.clear();\n    this.updateStatus('Console cleared');\n    this.events.emit('console:clear');\n  }\n\n  reset() {\n    this.sandbox.reset();\n    this.updateStatus('Sandbox reset');\n    this.events.emit('sandbox:reset');\n  }\n\n  updateStatus(status) {\n    if (!this.elements.status) return;\n\n    const statusMessages = {\n      executing: 'Executing‚Ä¶',\n      completed: 'Completed',\n      timeout: 'Timeout exceeded',\n      reset: 'Sandbox reset',\n      'Console cleared': 'Console cleared'\n    };\n\n    const displayStatus = statusMessages[status] || status;\n    this.elements.status.textContent = displayStatus;\n    this.events.emit('status:change', { status, displayStatus });\n\n    // Emit specific status events\n    if (status === 'completed') {\n      this.events.emit('code:execute:complete');\n    } else if (status === 'timeout') {\n      this.events.emit('code:execute:timeout');\n    }\n  }\n\n  /**\n   * Registers an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @param {Object} [options={}] - Options for the listener\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback, options) {\n    return this.events.on(event, callback, options);\n  }\n\n  /**\n   * Registers a one-time event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @returns {Function} Unsubscribe function\n   */\n  once(event, callback) {\n    return this.events.once(event, callback);\n  }\n\n  /**\n   * Removes an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n\n  /**\n   * Gets the current code from the editor\n   * @returns {string|null} The current code or null if no editor\n   */\n  getCode() {\n    return this.editor ? this.editor.getValue() : null;\n  }\n\n  /**\n   * Sets code in the editor\n   * @param {string} code - The code to set\n   */\n  setCode(code) {\n    if (this.editor) {\n      this.editor.setValue(code);\n    }\n  }\n\n  /**\n   * Validates JavaScript syntax without executing\n   * @param {string} [code] - The code to validate, or current editor code if not provided\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\n   */\n  validateCode(code) {\n    const codeToValidate = code || this.getCode();\n    return this.sandbox ? this.sandbox.validateSyntax(codeToValidate) : { valid: false, error: 'Sandbox not initialized' };\n  }\n\n  /**\n   * Loads and runs an example\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<void>}\n   */\n  async loadExample(exampleId) {\n    try {\n      this.logger.info('Loading example:', exampleId);\n\n      const example = await this.examples.loadExample(exampleId);\n\n      // Set the code in the editor\n      this.setCode(example.code);\n\n      // Open preview pane\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\n        this.elements.togglePreview.checked = true;\n        this.elements.previewWrap.classList.add('show');\n\n        // Also update the right pane class for resize handle\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          rightPane.classList.add('has-preview');\n        }\n      }\n\n      // Run the example\n      this.run();\n\n      this.events.emit('example:loaded', { exampleId, example });\n\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.events.emit('example:error', error);\n    }\n  }\n\n  /**\n   * Cleans up the controller and all components\n   */\n  destroy() {\n    this.events.emit('destroy');\n\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    if (this.sandbox) {\n      this.sandbox.destroy();\n    }\n    if (this.examplesDropdown) {\n      this.examplesDropdown.destroy();\n    }\n\n    // Cleanup resize listeners\n    if (this.resizeListeners) {\n      document.removeEventListener('mousemove', this.resizeListeners.handleMouseMove);\n      document.removeEventListener('mouseup', this.resizeListeners.handleMouseUp);\n    }\n    if (this.verticalResizeListeners) {\n      document.removeEventListener('mousemove', this.verticalResizeListeners.handleMouseMove);\n      document.removeEventListener('mouseup', this.verticalResizeListeners.handleMouseUp);\n    }\n    if (this.resizeHandle && this.resizeHandle.parentNode) {\n      this.resizeHandle.parentNode.removeChild(this.resizeHandle);\n    }\n    if (this.verticalResizeHandle && this.verticalResizeHandle.parentNode) {\n      this.verticalResizeHandle.parentNode.removeChild(this.verticalResizeHandle);\n    }\n\n    this.events.removeAllListeners();\n  }\n}","import { EditorAdapter } from './base.js';\n\n/**\n * Plain textarea editor adapter for basic code editing\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class TextareaEditor extends EditorAdapter {\n  /**\n   * Creates a new TextareaEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\n   */\n  constructor(container, options = {}) {\n    super(container, options);\n    this.textarea = null;\n    this.init();\n  }\n\n  /**\n   * Initializes the textarea editor\n   */\n  init() {\n    this.textarea = document.createElement('textarea');\n    this.textarea.className = 'code-editor';\n    this.textarea.spellcheck = false;\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\n\n    this.container.appendChild(this.textarea);\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for the textarea\n   */\n  setupEventListeners() {\n    this.textarea.addEventListener('input', () => {\n      this.triggerChange();\n    });\n\n    this.textarea.addEventListener('keydown', (e) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        e.preventDefault();\n        this.triggerExecute();\n      }\n    });\n  }\n\n  /**\n   * Gets the current code value from the textarea\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.textarea.value;\n  }\n\n  /**\n   * Sets the code value in the textarea\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    this.textarea.value = code;\n  }\n\n  /**\n   * Focuses the textarea\n   */\n  focus() {\n    this.textarea.focus();\n  }\n\n  /**\n   * Cleans up the textarea editor\n   */\n  destroy() {\n    if (this.textarea) {\n      this.textarea.remove();\n    }\n  }\n}","/**\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { SandboxController } from './ui/controller.js';\nimport { CodeMirrorEditor } from './editors/codemirror.js';\nimport { TextareaEditor } from './editors/textarea.js';\n\n/**\n * Auto-detects and initializes the best available editor\n * @param {HTMLElement} container - DOM element to contain the editor\n * @param {Object} [options={}] - Editor configuration options\n * @returns {EditorAdapter} The initialized editor instance\n */\nfunction createEditor(container, options = {}) {\n  // Try CodeMirror first if available\n  if (typeof CodeMirror !== 'undefined') {\n    try {\n      return new CodeMirrorEditor(container, options);\n    } catch (e) {\n      console.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\n    }\n  }\n\n  // Fallback to textarea\n  return new TextareaEditor(container, options);\n}\n\n/**\n * Initializes the JavaScript sandbox application\n * @param {Object} [options={}] - Configuration options\n * @param {number} [options.timeLimit=4000] - Execution timeout in milliseconds\n * @param {string} [options.storageKey='js-sandbox-code'] - LocalStorage key for persistence\n * @param {string} [options.defaultCode] - Default code to load\n * @param {boolean} [options.debug=true] - Enable debug logging\n * @param {string} [options.logLevel='info'] - Log level for debugging\n * @param {string} [options.templatePath] - Path to custom sandbox template\n * @returns {Promise<SandboxController>} The initialized sandbox controller\n */\nexport async function initSandbox(options = {}) {\n  const debug = options.debug || true;\n  const logger = debug ? console : { log: () => {}, info: () => {}, error: () => {} };\n\n  logger.log('[App] Starting sandbox initialization...');\n  const controller = new SandboxController(options);\n  await controller.init();\n  logger.log('[App] Controller initialized');\n\n  const editorContainer = document.getElementById('editorContainer');\n  if (!editorContainer) {\n    throw new Error('Editor container element not found');\n  }\n\n  const editor = createEditor(editorContainer, {\n    mode: 'javascript',\n    theme: 'darcula',\n    autofocus: true\n  });\n  logger.log('[App] Editor created');\n\n  controller.setEditor(editor);\n  logger.log('[App] Editor set on controller');\n  logger.log('[App] Sandbox initialization complete');\n\n  return controller;\n}\n\n// Auto-initialize if DOM is ready and this is the main script\nif (!window.sandbox && document.getElementById('editorContainer')) {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', async () => {\n      if (!window.sandbox && document.getElementById('editorContainer')) {\n        window.sandbox = await initSandbox();\n      }\n    });\n  } else {\n    initSandbox().then(sandbox => {\n      window.sandbox = sandbox;\n    });\n  }\n}"],"names":["Storage","constructor","key","this","save","code","localStorage","setItem","e","console","warn","load","getItem","ExamplesLoader","options","examplesPath","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","example","response","fetch","ok","text","set","push","error","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","clear","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","appendChild","setExamples","forEach","option","textContent","disabled","length","setLoading","loading","setError","message","destroy","parentNode","removeChild","SandboxController","timeLimit","storageKey","defaultCode","getDefaultCode","debug","logLevel","logger","Logger","enabled","level","prefix","events","EventEmitter","editor","sandbox","storage","examplesDropdown","elements","init","join","emit","findElements","initializeComponents","setupEventListeners","app","editorContainer","getElementById","consoleContainer","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","status","limitLabel","toolbar","info","ConsoleOutput","SandboxEngine","onMessage","type","args","addLine","onStatusChange","updateStatus","initialize","initializeResizer","rightPane","isPreviewVisible","classList","contains","toggle","querySelectorAll","handle","mainContent","style","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","isResizing","startX","startLeftWidth","handleMouseDown","clientX","add","getBoundingClientRect","leftPane","width","body","userSelect","cursor","preventDefault","handleMouseMove","deltaX","totalWidth","newLeftWidth","Math","max","min","newRightWidth","handleMouseUp","resizeListeners","initializeVerticalResize","verticalHandle","nextSibling","startY","startConsoleHeight","startPreviewHeight","clientY","consoleRect","previewRect","height","deltaY","totalContentHeight","newConsoleHeight","newPreviewHeight","verticalResizeHandle","verticalResizeListeners","setEditor","onChange","onExecute","run","loadInitialCode","clearConsole","reset","checked","savedCode","initialCode","setValue","focus","fromStorage","getValue","validation","validateSyntax","execute","displayStatus","executing","completed","timeout","on","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","valid","removeEventListener","removeAllListeners","TextareaEditor","EditorAdapter","super","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","async","initSandbox","log","controller","CodeMirror","CodeMirrorEditor","createEditor","mode","theme","autofocus","window","readyState","then"],"mappings":"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"}