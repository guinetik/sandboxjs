{"version":3,"file":"index-DLwkgnQF.js","sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/fullscreen.js","../../src/libraries/manager.js","../../src/ui/base-dialog.js","../../src/libraries/dialog.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\nimport { Logger } from './logger.js';\n\n/**\n * Simple localStorage wrapper for persistent code storage\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class Storage {\n  /**\n   * Creates a new Storage instance\n   * @param {string} [key] - The localStorage key to use\n   * @param {Object} [options={}] - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\n    this.key = key;\n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'warn',\n      prefix: 'Storage'\n    });\n  }\n\n  /**\n   * Saves code to localStorage\n   * @param {string} code - The code to save\n   * @returns {boolean} True if save was successful\n   */\n  save(code) {\n    try {\n      localStorage.setItem(this.key, code);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to save code to localStorage:', e);\n      return false;\n    }\n  }\n\n  /**\n   * Loads code from localStorage\n   * @returns {string|null} The saved code or null if not found\n   */\n  load() {\n    try {\n      return localStorage.getItem(this.key);\n    } catch (e) {\n      this.logger.warn('Failed to load code from localStorage:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Clears the saved code\n   * @returns {boolean} True if clear was successful\n   */\n  clear() {\n    try {\n      localStorage.removeItem(this.key);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to clear localStorage:', e);\n      return false;\n    }\n  }\n}\n","import { Logger } from '../core/logger.js';\nimport { fetchWithTimeout } from '../core/utils.js';\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\n\n/**\n * Examples loader for the JavaScript sandbox\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesLoader {\n  /**\n   * Creates a new ExamplesLoader instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.examplesPath] - Path to examples directory\n   * @param {Function} [options.onLoad] - Callback when example is loaded\n   * @param {Function} [options.onError] - Callback when loading fails\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\n    this.onLoad = options.onLoad || (() => {});\n    this.onError = options.onError || (() => {});\n    this.examples = new Map();\n    \n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'info',\n      prefix: 'ExamplesLoader'\n    });\n  }\n\n  /**\n   * Discovers available examples by attempting to load known files\n   * @returns {Promise<Array>} Array of example metadata\n   */\n  async discoverExamples() {\n    // Known examples - in a real app, this could come from an API or manifest\n    const knownExamples = [\n      {\n        id: 'hello-world',\n        title: 'üëã Hello World',\n        description: 'Simple greeting with interactive button',\n        file: 'hello-world.js'\n      },\n      {\n        id: 'spinning-animation',\n        title: 'üåÄ CSS Animations',\n        description: 'Spinning box with rainbow colors and controls',\n        file: 'spinning-animation.js'\n      },\n      {\n        id: 'interactive-form',\n        title: 'üìù Interactive Form',\n        description: 'Form validation and submission handling',\n        file: 'interactive-form.js'\n      },\n      {\n        id: 'canvas-drawing',\n        title: 'üé® Canvas Drawing',\n        description: 'Draw with mouse or touch on HTML5 canvas',\n        file: 'canvas-drawing.js'\n      }\n    ];\n\n    const availableExamples = [];\n\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\n\n    // Test each example to see if it's available\n    for (const example of knownExamples) {\n      try {\n        const url = `${this.examplesPath}/${example.file}`;\n        this.logger.debug(`Fetching example: ${url}`);\n        \n        const response = await fetchWithTimeout(\n          url,\n          {},\n          NETWORK_TIMEOUT_MS\n        );\n        \n        if (response.ok) {\n          const code = await response.text();\n          this.examples.set(example.id, { ...example, code });\n          availableExamples.push(example);\n          this.logger.debug(`‚úì Example loaded: ${example.id}`);\n        } else {\n          this.logger.warn(`‚úó Example ${example.id} returned ${response.status}`);\n        }\n      } catch (error) {\n        this.logger.warn(`‚úó Example ${example.id} failed:`, error.message);\n      }\n    }\n\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\n    return availableExamples;\n  }\n\n  /**\n   * Loads an example by ID\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<Object>} Example data with code\n   */\n  async loadExample(exampleId) {\n    if (this.examples.has(exampleId)) {\n      const example = this.examples.get(exampleId);\n      this.onLoad(example);\n      return example;\n    }\n\n    // Try to load if not cached\n    try {\n      await this.discoverExamples();\n      const example = this.examples.get(exampleId);\n\n      if (example) {\n        this.onLoad(example);\n        return example;\n      } else {\n        throw new Error(`Example '${exampleId}' not found`);\n      }\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.onError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets all available examples\n   * @returns {Array} Array of cached examples\n   */\n  getAvailableExamples() {\n    return Array.from(this.examples.values());\n  }\n\n  /**\n   * Clears the examples cache\n   */\n  clearCache() {\n    this.logger.debug('Clearing examples cache');\n    this.examples.clear();\n  }\n\n  /**\n   * Cleans up the examples loader\n   */\n  destroy() {\n    this.logger.debug('Destroying examples loader');\n    this.clearCache();\n  }\n}\n","/**\n * Examples dropdown UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesDropdown {\n  /**\n   * Creates a new ExamplesDropdown instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} options - Configuration options\n   * @param {Function} [options.onSelect] - Callback when example is selected\n   */\n  constructor(container, options = {}) {\n    this.container = container;\n    this.onSelect = options.onSelect || (() => {});\n    this.examples = [];\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'examples-dropdown';\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    this.dropdown.addEventListener('change', (e) => {\n      const exampleId = e.target.value;\n      if (exampleId) {\n        this.onSelect(exampleId);\n        // Reset to placeholder after selection\n        setTimeout(() => {\n          this.dropdown.value = '';\n        }, 100);\n      }\n    });\n\n    // Insert after the preview button (make examples last in toolbar)\n    const previewLabel = this.container.querySelector('label.btn');\n    if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with examples\n   * @param {Array} examples - Array of example objects\n   */\n  setExamples(examples) {\n    this.examples = examples;\n\n    // Reset to normal placeholder first\n    this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n\n    // Add example options\n    examples.forEach(example => {\n      const option = document.createElement('option');\n      option.value = example.id;\n      option.textContent = example.title;\n      option.title = example.description; // Tooltip\n      this.dropdown.appendChild(option);\n    });\n\n    // Enable dropdown if we have examples\n    this.dropdown.disabled = examples.length === 0;\n  }\n\n  /**\n   * Shows loading state\n   */\n  setLoading(loading = true) {\n    if (loading) {\n      this.dropdown.innerHTML = '<option value=\"\">‚è≥ Loading examples...</option>';\n      this.dropdown.disabled = true;\n    } else {\n      this.dropdown.innerHTML = '<option value=\"\">üìö Load Example...</option>';\n      this.dropdown.disabled = false;\n    }\n  }\n\n  /**\n   * Shows error state\n   * @param {string} message - Error message to display\n   */\n  setError(message = 'Failed to load examples') {\n    this.dropdown.innerHTML = `<option value=\"\">‚ùå ${message}</option>`;\n    this.dropdown.disabled = true;\n  }\n\n  /**\n   * Destroys the dropdown\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Theme switcher UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ThemeSwitcher {\n\n  /**\n   * Creates a new ThemeSwitcher instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} eventEmitter - The event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\n   * @param {boolean} [options.debug=true] - Enable debug logging\n   */\n  constructor(container, eventEmitter, options = {}) {\n    this.container = container;\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      defaultTheme: 'darcula',\n      debug: true,\n      storageKey: 'sandbox_current_theme',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'ThemeSwitcher'\n    });\n\n    // Define themes array first (needed for validation)\n    this.themes = [\n      { value: 'default', label: 'üè≥Ô∏è Default' },\n      { value: 'darcula', label: 'üåô Darcula' },\n      { value: 'monokai', label: 'üéØ Monokai' },\n      { value: 'solarized', label: '‚òÄÔ∏è Solarized Dark' },\n      { value: 'material', label: 'üì± Material' },\n      { value: 'dracula', label: 'üßõ Dracula' },\n      { value: 'tomorrow-night-eighties', label: 'üåâ Tomorrow Night' },\n      { value: 'base16-dark', label: 'üåÉ Base16 Dark' },\n      { value: 'blackboard', label: '‚ö´ Blackboard' },\n      { value: 'eclipse', label: 'üåÖ Eclipse' }\n    ];\n\n    // Load saved theme or use default (now that themes array exists)\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\n\n    this.createDropdown();\n\n    // Load CSS for the current theme on startup and emit events\n    this.initializeCurrentTheme();\n  }\n\n  /**\n   * Initializes the current theme by loading its CSS and emitting events\n   */\n  async initializeCurrentTheme() {\n    this.logger.info('Initializing current theme:', this.currentTheme);\n\n    // Emit that theme loading started\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\n      theme: this.currentTheme\n    });\n\n    try {\n      await this.loadThemeCSS(this.currentTheme);\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\n\n      // Emit that theme is ready for use\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: this.currentTheme\n      });\n    } catch (error) {\n      this.logger.warn('Failed to load current theme CSS:', error);\n\n      // Emit error but fallback to default\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: 'darcula', // fallback\n        error: error.message\n      });\n    }\n  }\n\n  /**\n   * Creates the theme switcher dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.theme-switcher');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\n    this.dropdown.title = 'Switch editor theme';\n\n    // Add theme options\n    this.populateThemes();\n\n    // Set default theme\n    this.dropdown.value = this.currentTheme;\n\n    this.dropdown.addEventListener('change', async (e) => {\n      const themeValue = e.target.value;\n      this.logger.info('Theme dropdown changed to:', themeValue);\n      this.logger.info('Current theme is:', this.currentTheme);\n\n      if (themeValue && themeValue !== this.currentTheme) {\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\n        await this.switchTheme(themeValue);\n      } else {\n        this.logger.warn('Theme value is empty or same as current theme');\n      }\n    });\n\n    // Insert after the examples dropdown if it exists, otherwise after preview button\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\n    const previewLabel = this.container.querySelector('label.btn');\n\n    if (examplesDropdown) {\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\n    } else if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with available themes\n   */\n  populateThemes() {\n    // Clear existing options\n    this.dropdown.innerHTML = '';\n\n    // Add theme options\n    this.themes.forEach(theme => {\n      const option = document.createElement('option');\n      option.value = theme.value;\n      option.textContent = theme.label;\n      this.dropdown.appendChild(option);\n    });\n  }\n\n  /**\n   * Loads a CodeMirror theme CSS file if not already loaded\n   * @param {string} themeName - The theme name to load\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\n   */\n  async loadThemeCSS(themeName) {\n    // Skip loading for default theme (no CSS needed)\n    if (themeName === 'default') {\n      this.logger.info('Skipping CSS load for default theme');\n      return;\n    }\n\n    // Check if theme CSS is already loaded\n    const existingLink = document.querySelector(`link[href*=\"theme/${themeName}\"]`);\n    if (existingLink) {\n      this.logger.info('Theme CSS already loaded for:', themeName);\n      return;\n    }\n\n    // Load theme CSS dynamically\n    this.logger.info('Loading theme CSS for:', themeName);\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/${themeName}.min.css`;\n\n    return new Promise((resolve, reject) => {\n      link.onload = () => {\n        this.logger.info('Theme CSS loaded successfully for:', themeName);\n        resolve();\n      };\n      link.onerror = () => {\n        this.logger.error('Failed to load theme CSS for:', themeName);\n        reject(new Error(`Failed to load theme: ${themeName}`));\n      };\n      document.head.appendChild(link);\n    });\n  }\n\n  /**\n   * Loads saved theme from localStorage\n   * @returns {string|null} Saved theme name or null if not found\n   */\n  loadSavedTheme() {\n    try {\n      const savedTheme = localStorage.getItem(this.options.storageKey);\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\n        return savedTheme;\n      }\n    } catch (error) {\n      this.logger.warn('Failed to load saved theme:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Saves current theme to localStorage\n   * @param {string} themeName - Theme name to save\n   */\n  saveTheme(themeName) {\n    try {\n      localStorage.setItem(this.options.storageKey, themeName);\n      this.logger.info('Saved theme to storage:', themeName);\n    } catch (error) {\n      this.logger.warn('Failed to save theme:', error);\n    }\n  }\n\n  /**\n   * Switches to a new theme\n   * @param {string} themeName - The theme name to switch to\n   */\n  async switchTheme(themeName) {\n    const oldTheme = this.currentTheme;\n    this.currentTheme = themeName;\n\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\n\n    // Update dropdown value\n    this.dropdown.value = themeName;\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\n\n    try {\n      // Load theme CSS first\n      await this.loadThemeCSS(themeName);\n\n      // Save theme for persistence\n      this.saveTheme(themeName);\n\n      // Emit theme change event for editor adapters to listen to\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\n        theme: themeName,\n        oldTheme: oldTheme\n      });\n      this.logger.info('Theme change event emitted successfully');\n    } catch (error) {\n      this.logger.error('Failed to switch theme:', error);\n      // Revert dropdown to old theme\n      this.dropdown.value = oldTheme;\n      this.currentTheme = oldTheme;\n    }\n  }\n\n  /**\n   * Gets the current theme\n   * @returns {string} Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Sets the current theme programmatically\n   * @param {string} themeName - The theme name to set\n   */\n  setTheme(themeName) {\n    if (this.themes.find(t => t.value === themeName)) {\n      this.switchTheme(themeName);\n    }\n  }\n\n  /**\n   * Adds a new theme to the list\n   * @param {string} value - Theme value/name\n   * @param {string} label - Display label for the theme\n   */\n  addTheme(value, label) {\n    // Check if theme already exists\n    if (!this.themes.find(t => t.value === value)) {\n      this.themes.push({ value, label });\n      this.populateThemes();\n      this.dropdown.value = this.currentTheme; // Restore selection\n    }\n  }\n\n  /**\n   * Destroys the theme switcher\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Fullscreen manager for toggling between editor and console views\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class FullscreenManager {\n  /**\n   * Creates a new FullscreenManager instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'FullscreenManager'\n    });\n\n    this.currentMode = null; // null, 'editor', 'console'\n    this.appElement = null;\n    this.elements = {};\n    this.isChanging = false; // Recursion guard\n\n    this.setupEventListeners();\n  }\n\n  /**\n   * Initializes the fullscreen manager with DOM elements\n   * @param {Object} elements - DOM elements\n   * @param {HTMLElement} elements.app - Main app container\n   * @param {HTMLElement} elements.fullscreenEditor - Editor fullscreen button\n   * @param {HTMLElement} elements.fullscreenConsole - Console fullscreen button\n   */\n  init(elements) {\n    this.appElement = elements.app;\n    this.elements = elements;\n\n    this.logger.info('Fullscreen manager initialized');\n\n    // Add click listeners to fullscreen buttons\n    if (this.elements.fullscreenEditor) {\n      this.elements.fullscreenEditor.addEventListener('click', () => {\n        this.toggleFullscreen('editor');\n      });\n    }\n\n    if (this.elements.fullscreenConsole) {\n      this.elements.fullscreenConsole.addEventListener('click', () => {\n        this.toggleFullscreen('console');\n      });\n    }\n\n    // Add keyboard shortcut (F11 or Escape)\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'F11') {\n        e.preventDefault();\n        this.toggleFullscreen();\n      } else if (e.key === 'Escape' && this.currentMode) {\n        this.exitFullscreen();\n      }\n    });\n  }\n\n  /**\n   * Sets up event listeners for fullscreen events\n   */\n  setupEventListeners() {\n    this.eventEmitter.on(EVENTS.FULLSCREEN_TOGGLE, (mode) => {\n      this.toggleFullscreen(mode);\n    });\n\n    this.eventEmitter.on(EVENTS.FULLSCREEN_EXIT, () => {\n      this.exitFullscreen();\n    });\n  }\n\n  /**\n   * Toggles fullscreen mode for specified pane\n   * @param {string} [mode] - 'editor', 'console', or null to cycle\n   */\n  toggleFullscreen(mode) {\n    if (!this.appElement) {\n      this.logger.warn('App element not initialized');\n      return;\n    }\n\n    // If no mode specified, cycle through modes\n    if (!mode) {\n      if (this.currentMode === null) {\n        mode = 'editor';\n      } else if (this.currentMode === 'editor') {\n        mode = 'console';\n      } else {\n        mode = null; // exit fullscreen\n      }\n    }\n\n    // If same mode is clicked, exit fullscreen\n    if (mode === this.currentMode) {\n      mode = null;\n    }\n\n    this.setFullscreenMode(mode);\n  }\n\n  /**\n   * Sets the fullscreen mode\n   * @param {string|null} mode - 'editor', 'console', or null for normal view\n   */\n  setFullscreenMode(mode) {\n    if (!this.appElement) return;\n\n    // Prevent recursion: if we're already changing or in the target mode, don't do anything\n    if (this.isChanging || mode === this.currentMode) return;\n\n    this.isChanging = true;\n    const previousMode = this.currentMode;\n\n    try {\n      // Remove all fullscreen classes\n      this.appElement.classList.remove('fullscreen-editor', 'fullscreen-console');\n\n      // Update button states\n      this.updateButtonStates(null);\n\n      if (mode) {\n        // Add appropriate fullscreen class\n        this.appElement.classList.add(`fullscreen-${mode}`);\n        this.updateButtonStates(mode);\n\n        this.logger.info(`Entering fullscreen mode: ${mode}`);\n        this.eventEmitter.emit(`FULLSCREEN_${mode.toUpperCase()}`, { mode });\n      } else if (previousMode) {\n        // Only emit exit event if we were actually in fullscreen before\n        this.logger.info('Exiting fullscreen mode');\n        this.eventEmitter.emit(EVENTS.FULLSCREEN_EXIT, { previousMode });\n      }\n\n      this.currentMode = mode;\n    } finally {\n      // Always clear the changing flag\n      this.isChanging = false;\n    }\n  }\n\n  /**\n   * Updates button states based on current mode\n   * @param {string|null} activeMode - Current active mode\n   */\n  updateButtonStates(activeMode) {\n    // Update editor button\n    if (this.elements.fullscreenEditor) {\n      if (activeMode === 'editor') {\n        this.elements.fullscreenEditor.textContent = '‚ó±'; // Exit symbol\n        this.elements.fullscreenEditor.title = 'Exit Fullscreen';\n      } else {\n        this.elements.fullscreenEditor.textContent = '‚õ∂'; // Fullscreen symbol\n        this.elements.fullscreenEditor.title = 'Fullscreen Editor';\n      }\n    }\n\n    // Update console button\n    if (this.elements.fullscreenConsole) {\n      if (activeMode === 'console') {\n        this.elements.fullscreenConsole.textContent = '‚ó±'; // Exit symbol\n        this.elements.fullscreenConsole.title = 'Exit Fullscreen';\n      } else {\n        this.elements.fullscreenConsole.textContent = '‚õ∂'; // Fullscreen symbol\n        this.elements.fullscreenConsole.title = 'Fullscreen Console';\n      }\n    }\n  }\n\n  /**\n   * Exits fullscreen mode\n   */\n  exitFullscreen() {\n    this.setFullscreenMode(null);\n  }\n\n  /**\n   * Gets the current fullscreen mode\n   * @returns {string|null} Current mode or null\n   */\n  getCurrentMode() {\n    return this.currentMode;\n  }\n\n  /**\n   * Checks if currently in fullscreen\n   * @returns {boolean} True if in fullscreen mode\n   */\n  isFullscreen() {\n    return this.currentMode !== null;\n  }\n\n  /**\n   * Destroys the fullscreen manager\n   */\n  destroy() {\n    this.exitFullscreen();\n    this.logger.info('Fullscreen manager destroyed');\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Library Manager - Handles CDN library loading with user-controlled allowlists\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class LibraryManager {\n  /**\n   * Creates a new LibraryManager instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.storageKey='sandbox_libraries'] - localStorage key\n   */\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      debug: false,\n      storageKey: 'sandbox_libraries',\n      allowlistKey: 'sandbox_allowed_domains',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'LibraryManager'\n    });\n\n    // Force a log message to test if logging is working\n    console.log('üîß LibraryManager created with debug:', this.options.debug);\n\n    // Default trusted CDN domains\n    this.defaultDomains = [\n      'cdnjs.cloudflare.com',\n      'unpkg.com',\n      'jsdelivr.net',\n      'code.jquery.com',\n      'stackpath.bootstrapcdn.com'\n    ];\n\n    this.libraries = [];\n    this.allowedDomains = [];\n    this.libraryCache = new Map(); // Cache for fetched library content\n\n    this.loadFromStorage();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for library management\n   */\n  setupEventListeners() {\n    this.eventEmitter.on(EVENTS.LIBRARY_ADD, (data) => {\n      this.addLibrary(data.url, data.name);\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVE, (data) => {\n      this.removeLibrary(data.id);\n    });\n\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\n      this.addDomain(data.domain);\n    });\n  }\n\n  /**\n   * Loads libraries and allowed domains from localStorage\n   */\n  loadFromStorage() {\n    this.logger.debug('Loading library data from localStorage...');\n\n    try {\n      // Load libraries\n      this.logger.debug(`Checking localStorage for key: ${this.options.storageKey}`);\n      const librariesData = localStorage.getItem(this.options.storageKey);\n      this.libraries = librariesData ? JSON.parse(librariesData) : [];\n      this.logger.debug(`Loaded ${this.libraries.length} libraries from storage`);\n\n      // Load allowed domains (merge with defaults)\n      this.logger.debug(`Checking localStorage for key: ${this.options.allowlistKey}`);\n      const domainsData = localStorage.getItem(this.options.allowlistKey);\n      const savedDomains = domainsData ? JSON.parse(domainsData) : [];\n      this.allowedDomains = [...new Set([...this.defaultDomains, ...savedDomains])];\n\n      this.logger.debug(`Merged domains - defaults: ${this.defaultDomains.length}, saved: ${savedDomains.length}, total: ${this.allowedDomains.length}`);\n      this.logger.info(`Storage load complete: ${this.libraries.length} libraries, ${this.allowedDomains.length} allowed domains`);\n\n      // Log library names for debugging\n      if (this.libraries.length > 0) {\n        this.logger.debug('Loaded libraries:', this.libraries.map(lib => lib.name).join(', '));\n      }\n    } catch (error) {\n      this.logger.error('Failed to load from storage:', error);\n      this.logger.warn('Falling back to empty state with default domains');\n      this.libraries = [];\n      this.allowedDomains = [...this.defaultDomains];\n    }\n  }\n\n  /**\n   * Saves libraries to localStorage\n   */\n  saveLibraries() {\n    this.logger.debug(`Saving ${this.libraries.length} libraries to localStorage...`);\n    try {\n      const serialized = JSON.stringify(this.libraries);\n      localStorage.setItem(this.options.storageKey, serialized);\n      this.logger.debug(`Libraries saved successfully (${serialized.length} chars)`);\n    } catch (error) {\n      this.logger.error('Failed to save libraries to localStorage:', error);\n      if (error.name === 'QuotaExceededError') {\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\n      }\n    }\n  }\n\n  /**\n   * Saves allowed domains to localStorage\n   */\n  saveDomains() {\n    // Only save non-default domains to avoid bloating storage\n    const customDomains = this.allowedDomains.filter(\n      domain => !this.defaultDomains.includes(domain)\n    );\n\n    this.logger.debug(`Saving ${customDomains.length} custom domains to localStorage...`);\n    try {\n      const serialized = JSON.stringify(customDomains);\n      localStorage.setItem(this.options.allowlistKey, serialized);\n      this.logger.debug(`Custom domains saved successfully: [${customDomains.join(', ')}]`);\n    } catch (error) {\n      this.logger.error('Failed to save domains to localStorage:', error);\n      if (error.name === 'QuotaExceededError') {\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\n      }\n    }\n  }\n\n  /**\n   * Generates a unique ID for a library\n   * @returns {string} Unique identifier\n   */\n  generateId() {\n    return 'lib_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  /**\n   * Extracts domain from URL\n   * @param {string} url - The URL to extract domain from\n   * @returns {string|null} Domain or null if invalid\n   */\n  extractDomain(url) {\n    try {\n      const urlObj = new URL(url);\n      return urlObj.hostname;\n    } catch (error) {\n      this.logger.warn('Invalid URL provided:', url);\n      return null;\n    }\n  }\n\n  /**\n   * Extracts library name from URL (best guess)\n   * @param {string} url - The library URL\n   * @returns {string} Guessed library name\n   */\n  guessLibraryName(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n\n      // Extract filename without extension\n      const filename = pathname.split('/').pop();\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\n\n      // Common library name patterns\n      const patterns = [\n        /^(.+?)[-.][\\d]/,  // name-version or name.version\n        /^(.+?)\\.min$/,    // name.min\n        /^(.+?)$/          // fallback to full name\n      ];\n\n      for (const pattern of patterns) {\n        const match = nameWithoutExt.match(pattern);\n        if (match && match[1]) {\n          return match[1].charAt(0).toUpperCase() + match[1].slice(1);\n        }\n      }\n\n      return nameWithoutExt || 'Unknown Library';\n    } catch (error) {\n      return 'Unknown Library';\n    }\n  }\n\n  /**\n   * Extracts version from URL (best guess)\n   * @param {string} url - The library URL\n   * @returns {string|null} Version string or null if not found\n   */\n  extractVersionFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n\n      // Extract filename without extension\n      const filename = pathname.split('/').pop();\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\n\n      // Version extraction patterns\n      const versionPatterns = [\n        /[-.](\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)/,  // semantic version (e.g., jquery-3.6.0.min.js)\n        /[-.](\\d+\\.\\d+\\.\\d+)/,                              // x.y.z version\n        /[-.](\\d+\\.\\d+)/,                                   // x.y version\n        /\\/(\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)\\//  // version in path (e.g., /3.6.0/)\n      ];\n\n      for (const pattern of versionPatterns) {\n        const match = url.match(pattern) || nameWithoutExt.match(pattern);\n        if (match && match[1]) {\n          return match[1];\n        }\n      }\n\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  /**\n   * Checks if a domain is in the allowed list\n   * @param {string} domain - Domain to check\n   * @returns {boolean} True if domain is allowed\n   */\n  isDomainAllowed(domain) {\n    return this.allowedDomains.includes(domain);\n  }\n\n  /**\n   * Validates a library URL\n   * @param {string} url - URL to validate\n   * @returns {Object} Validation result with status and domain\n   */\n  validateLibraryUrl(url) {\n    if (!url || typeof url !== 'string') {\n      return { valid: false, error: 'URL is required' };\n    }\n\n    // Basic URL validation\n    const domain = this.extractDomain(url);\n    if (!domain) {\n      return { valid: false, error: 'Invalid URL format' };\n    }\n\n    // Check if URL points to a JavaScript file\n    if (!url.match(/\\.js(\\?.*)?$/i)) {\n      return { valid: false, error: 'URL must point to a JavaScript file (.js)' };\n    }\n\n    // Check if domain is allowed\n    const domainAllowed = this.isDomainAllowed(domain);\n\n    return {\n      valid: true,\n      domain,\n      domainAllowed,\n      needsDomainApproval: !domainAllowed\n    };\n  }\n\n  /**\n   * Adds a library to the collection\n   * @param {string} url - Library URL\n   * @param {string} [name] - Optional library name (will be guessed if not provided)\n   * @returns {Object} Result object with success status\n   */\n  addLibrary(url, name = null) {\n    const validation = this.validateLibraryUrl(url);\n\n    if (!validation.valid) {\n      this.logger.warn('Library validation failed:', validation.error);\n      return { success: false, error: validation.error };\n    }\n\n    // Check if library already exists\n    const existing = this.libraries.find(lib => lib.url === url);\n    if (existing) {\n      this.logger.warn('Library already exists:', url);\n      return { success: false, error: 'Library already added' };\n    }\n\n    // Check domain approval\n    if (validation.needsDomainApproval) {\n      this.logger.info('Domain approval needed for:', validation.domain);\n      this.eventEmitter.emit(EVENTS.DOMAIN_TRUST_REQUEST, {\n        domain: validation.domain,\n        url,\n        name: name || this.guessLibraryName(url)\n      });\n      return { success: false, needsApproval: true, domain: validation.domain };\n    }\n\n    // Add the library\n    const library = {\n      id: this.generateId(),\n      name: name || this.guessLibraryName(url),\n      url: url.trim(),\n      domain: validation.domain,\n      addedAt: new Date().toISOString()\n    };\n\n    this.libraries.push(library);\n    this.saveLibraries();\n\n    this.logger.info('Library added:', library.name);\n    this.eventEmitter.emit(EVENTS.LIBRARY_ADDED, { library });\n\n    return { success: true, library };\n  }\n\n  /**\n   * Removes a library by ID\n   * @param {string} id - Library ID to remove\n   * @returns {boolean} True if library was removed\n   */\n  removeLibrary(id) {\n    const index = this.libraries.findIndex(lib => lib.id === id);\n    if (index === -1) {\n      this.logger.warn('Library not found for removal:', id);\n      return false;\n    }\n\n    const removed = this.libraries.splice(index, 1)[0];\n    this.saveLibraries();\n\n    this.logger.info('Library removed:', removed.name);\n    this.eventEmitter.emit(EVENTS.LIBRARY_REMOVED, { library: removed });\n\n    return true;\n  }\n\n  /**\n   * Adds a domain to the allowed list\n   * @param {string} domain - Domain to add\n   * @returns {boolean} True if domain was added\n   */\n  addDomain(domain) {\n    if (!domain || this.allowedDomains.includes(domain)) {\n      return false;\n    }\n\n    this.allowedDomains.push(domain);\n    this.saveDomains();\n\n    this.logger.info('Domain added to allowlist:', domain);\n    this.eventEmitter.emit(EVENTS.DOMAIN_ADDED, { domain });\n\n    return true;\n  }\n\n  /**\n   * Removes a domain from the allowed list (if not default)\n   * @param {string} domain - Domain to remove\n   * @returns {boolean} True if domain was removed\n   */\n  removeDomain(domain) {\n    if (this.defaultDomains.includes(domain)) {\n      this.logger.warn('Cannot remove default domain:', domain);\n      return false;\n    }\n\n    const index = this.allowedDomains.indexOf(domain);\n    if (index === -1) {\n      return false;\n    }\n\n    this.allowedDomains.splice(index, 1);\n    this.saveDomains();\n\n    this.logger.info('Domain removed from allowlist:', domain);\n    this.eventEmitter.emit(EVENTS.DOMAIN_REMOVED, { domain });\n\n    return true;\n  }\n\n  /**\n   * Gets all libraries\n   * @returns {Array} Array of library objects\n   */\n  getLibraries() {\n    return [...this.libraries];\n  }\n\n  /**\n   * Gets all allowed domains\n   * @returns {Array} Array of allowed domains\n   */\n  getAllowedDomains() {\n    return [...this.allowedDomains];\n  }\n\n  /**\n   * Fetches library content and generates inline script tags\n   * @returns {Promise<string>} HTML script tags with inline content\n   */\n  async generateScriptTags() {\n    if (this.libraries.length === 0) {\n      this.logger.debug('No libraries to generate scripts for');\n      return '';\n    }\n\n    this.logger.info(`Fetching content for ${this.libraries.length} libraries...`);\n    const scripts = [];\n\n    for (const lib of this.libraries) {\n      try {\n        let content;\n\n        // Check cache first\n        if (this.libraryCache.has(lib.url)) {\n          this.logger.debug(`Using cached content for: ${lib.name}`);\n          content = this.libraryCache.get(lib.url);\n        } else {\n          this.logger.debug(`Fetching library: ${lib.name} from ${lib.url}`);\n\n          const response = await fetch(lib.url);\n          if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n\n          content = await response.text();\n          this.logger.debug(`Fetched ${lib.name}: ${content.length} characters`);\n\n          // Cache the content\n          this.libraryCache.set(lib.url, content);\n        }\n\n        // Create clean inline script with library content\n        scripts.push(`  <script data-library=\"${lib.name}\">\n/* Library: ${lib.name} */\n/* Source: ${lib.url} */\n/* Cached: ${new Date().toISOString()} */\n${content}\n</script>`);\n\n        this.logger.info(`‚úÖ Successfully loaded library: ${lib.name}`);\n      } catch (error) {\n        this.logger.error(`‚ùå Failed to fetch library ${lib.name}:`, error.message);\n\n        // Add error placeholder script\n        scripts.push(`  <script data-library=\"${lib.name}\">\n/* Library: ${lib.name} - FAILED TO LOAD */\n/* Error: ${error.message} */\n/* URL: ${lib.url} */\nconsole.error('Failed to load library ${lib.name}: ${error.message}');\n</script>`);\n      }\n    }\n\n    const result = scripts.join('\\n');\n\n    // Enhanced logging for library injection\n    if (this.libraries.length > 0) {\n      const libraryNames = this.libraries.map(lib => lib.name).join(', ');\n      this.logger.info(`üìö Injecting ${this.libraries.length} libraries into sandbox: ${libraryNames}`);\n\n      // Log each library with detailed info including version detection\n      this.libraries.forEach(lib => {\n        const scriptSize = scripts.find(s => s.includes(`data-library=\"${lib.name}\"`))?.length || 0;\n        const version = this.extractVersionFromUrl(lib.url);\n        const versionInfo = version ? ` v${version}` : '';\n        this.logger.debug(`  ‚Üí ${lib.name}${versionInfo}: ${(scriptSize / 1024).toFixed(1)}KB from ${lib.url}`);\n      });\n\n      this.logger.info(`üì¶ Total script injection size: ${(result.length / 1024).toFixed(1)}KB`);\n    } else {\n      this.logger.debug('No libraries to inject into sandbox');\n    }\n\n    return result;\n  }\n\n  /**\n   * Generates dynamic CSP policy with allowed domains\n   * @returns {string} CSP policy string\n   */\n  generateCSP() {\n    const scriptSrc = [\n      \"'self'\",\n      \"'unsafe-inline'\",\n      \"'unsafe-eval'\",\n      ...this.allowedDomains.map(domain => `https://${domain}`)\n    ].join(' ');\n\n    return `default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; script-src ${scriptSrc}; connect-src 'none';`;\n  }\n\n  /**\n   * Gets library statistics\n   * @returns {Object} Statistics object\n   */\n  getStats() {\n    return {\n      libraryCount: this.libraries.length,\n      domainCount: this.allowedDomains.length,\n      customDomainCount: this.allowedDomains.length - this.defaultDomains.length\n    };\n  }\n\n  /**\n   * Clears all libraries and custom domains\n   */\n  clear() {\n    this.libraries = [];\n    this.allowedDomains = [...this.defaultDomains];\n\n    localStorage.removeItem(this.options.storageKey);\n    localStorage.removeItem(this.options.allowlistKey);\n\n    this.logger.info('All libraries and custom domains cleared');\n    this.eventEmitter.emit(EVENTS.LIBRARIES_CLEARED);\n  }\n\n  /**\n   * Test method to verify logging is working\n   */\n  testLogging() {\n    console.log('üß™ LibraryManager test logging - debug enabled:', this.options.debug);\n    this.logger.debug('This is a debug message');\n    this.logger.info('This is an info message');\n    this.logger.warn('This is a warn message');\n    this.logger.error('This is an error message');\n  }\n\n  /**\n   * Destroys the library manager\n   */\n  destroy() {\n    this.libraries = [];\n    this.allowedDomains = [];\n    this.logger.info('Library manager destroyed');\n  }\n}","import { Logger } from '../core/logger.js';\n\n/**\n * Base Dialog - Reusable dialog foundation with neon glow effects\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class BaseDialog {\n  /**\n   * Creates a new BaseDialog instance\n   * @param {Object} options - Configuration options\n   * @param {string} options.title - Dialog title\n   * @param {string} [options.className=''] - Additional CSS classes\n   * @param {boolean} [options.modal=true] - Whether dialog is modal\n   * @param {boolean} [options.closeOnBackdrop=true] - Close on backdrop click\n   * @param {boolean} [options.closeOnEscape=true] - Close on Escape key\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logPrefix='BaseDialog'] - Logger prefix\n   */\n  constructor(options = {}) {\n    this.options = {\n      title: 'Dialog',\n      className: '',\n      modal: true,\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      debug: false,\n      logPrefix: 'BaseDialog',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: this.options.logPrefix\n    });\n\n    this.dialog = null;\n    this.content = null;\n    this.isOpen = false;\n    this.closeButton = null;\n\n    this.logger.debug('BaseDialog instance created with options:', this.options);\n    this.createDialog();\n  }\n\n  /**\n   * Creates the base dialog structure\n   */\n  createDialog() {\n    this.logger.debug('Creating dialog structure...');\n\n    // Create dialog element\n    this.dialog = document.createElement('dialog');\n    this.dialog.className = `base-dialog ${this.options.className}`.trim();\n\n    // Create dialog content wrapper\n    this.content = document.createElement('div');\n    this.content.className = 'dialog-content';\n\n    // Create header\n    const header = document.createElement('header');\n    header.className = 'dialog-header';\n    header.innerHTML = `\n      <h3 class=\"dialog-title\">${this.options.title}</h3>\n      <button class=\"close-btn\" title=\"Close\">√ó</button>\n    `;\n\n    // Cache close button reference\n    this.closeButton = header.querySelector('.close-btn');\n\n    // Create body container (to be populated by subclasses)\n    const body = document.createElement('div');\n    body.className = 'dialog-body';\n\n    // Assemble dialog\n    this.content.appendChild(header);\n    this.content.appendChild(body);\n    this.dialog.appendChild(this.content);\n\n    // Add to document\n    document.body.appendChild(this.dialog);\n\n    this.logger.debug('Dialog structure created and added to DOM');\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up base event listeners\n   */\n  setupEventListeners() {\n    this.logger.debug('Setting up base event listeners...');\n\n    // Close button\n    if (this.closeButton) {\n      this.closeButton.addEventListener('click', () => {\n        this.logger.debug('Close button clicked');\n        this.close();\n      });\n    }\n\n    // Backdrop click\n    if (this.options.closeOnBackdrop) {\n      this.dialog.addEventListener('click', (e) => {\n        if (e.target === this.dialog) {\n          this.logger.debug('Backdrop clicked, closing dialog');\n          this.close();\n        }\n      });\n    }\n\n    // Escape key\n    if (this.options.closeOnEscape) {\n      this.dialog.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape') {\n          this.logger.debug('Escape key pressed, closing dialog');\n          this.close();\n        }\n      });\n    }\n\n    this.logger.debug('Base event listeners configured');\n  }\n\n  /**\n   * Gets the dialog body element for content injection\n   * @returns {HTMLElement} The dialog body element\n   */\n  getBody() {\n    return this.content.querySelector('.dialog-body');\n  }\n\n  /**\n   * Sets the dialog title\n   * @param {string} title - New title\n   */\n  setTitle(title) {\n    this.logger.debug(`Setting dialog title to: \"${title}\"`);\n    const titleElement = this.content.querySelector('.dialog-title');\n    if (titleElement) {\n      titleElement.textContent = title;\n      this.options.title = title;\n    }\n  }\n\n  /**\n   * Opens the dialog\n   * @param {Object} [options={}] - Open options\n   * @param {boolean} [options.focus=true] - Whether to focus the dialog\n   */\n  open(options = {}) {\n    const { focus = true } = options;\n\n    if (this.isOpen) {\n      this.logger.warn('Dialog is already open');\n      return;\n    }\n\n    this.logger.info('Opening dialog...');\n\n    // Call pre-open hook\n    this.onBeforeOpen();\n\n    // Show dialog\n    if (this.options.modal) {\n      this.dialog.showModal();\n    } else {\n      this.dialog.show();\n    }\n\n    this.isOpen = true;\n\n    // Focus management\n    if (focus) {\n      setTimeout(() => {\n        this.dialog.focus();\n        this.onFocus();\n      }, 100);\n    }\n\n    // Call post-open hook\n    this.onAfterOpen();\n\n    this.logger.info('Dialog opened successfully');\n  }\n\n  /**\n   * Closes the dialog\n   */\n  close() {\n    if (!this.isOpen) {\n      this.logger.warn('Dialog is already closed');\n      return;\n    }\n\n    this.logger.info('Closing dialog...');\n\n    // Call pre-close hook\n    this.onBeforeClose();\n\n    this.dialog.close();\n    this.isOpen = false;\n\n    // Call post-close hook\n    this.onAfterClose();\n\n    this.logger.info('Dialog closed successfully');\n  }\n\n  /**\n   * Toggles the dialog open/closed state\n   */\n  toggle() {\n    this.logger.debug('Toggling dialog state');\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Checks if dialog is currently open\n   * @returns {boolean} True if dialog is open\n   */\n  isDialogOpen() {\n    return this.isOpen;\n  }\n\n  /**\n   * Adds content to the dialog body\n   * @param {string|HTMLElement} content - Content to add\n   */\n  setContent(content) {\n    this.logger.debug('Setting dialog content...');\n    const body = this.getBody();\n\n    if (typeof content === 'string') {\n      body.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      body.innerHTML = '';\n      body.appendChild(content);\n    }\n\n    this.logger.debug('Dialog content updated');\n  }\n\n  /**\n   * Adds a CSS class to the dialog\n   * @param {string} className - Class name to add\n   */\n  addClass(className) {\n    this.logger.debug(`Adding class: ${className}`);\n    this.dialog.classList.add(className);\n  }\n\n  /**\n   * Removes a CSS class from the dialog\n   * @param {string} className - Class name to remove\n   */\n  removeClass(className) {\n    this.logger.debug(`Removing class: ${className}`);\n    this.dialog.classList.remove(className);\n  }\n\n  // Lifecycle hooks (to be overridden by subclasses)\n\n  /**\n   * Called before dialog opens\n   * Override in subclasses for custom behavior\n   */\n  onBeforeOpen() {\n    this.logger.debug('onBeforeOpen hook called');\n  }\n\n  /**\n   * Called after dialog opens\n   * Override in subclasses for custom behavior\n   */\n  onAfterOpen() {\n    this.logger.debug('onAfterOpen hook called');\n  }\n\n  /**\n   * Called when dialog receives focus\n   * Override in subclasses for custom behavior\n   */\n  onFocus() {\n    this.logger.debug('onFocus hook called');\n  }\n\n  /**\n   * Called before dialog closes\n   * Override in subclasses for custom behavior\n   */\n  onBeforeClose() {\n    this.logger.debug('onBeforeClose hook called');\n  }\n\n  /**\n   * Called after dialog closes\n   * Override in subclasses for custom behavior\n   */\n  onAfterClose() {\n    this.logger.debug('onAfterClose hook called');\n  }\n\n  /**\n   * Destroys the dialog and cleans up resources\n   */\n  destroy() {\n    this.logger.info('Destroying dialog...');\n\n    if (this.isOpen) {\n      this.close();\n    }\n\n    if (this.dialog) {\n      this.dialog.remove();\n      this.dialog = null;\n    }\n\n    this.content = null;\n    this.closeButton = null;\n    this.isOpen = false;\n\n    this.logger.info('Dialog destroyed successfully');\n  }\n}","import { BaseDialog } from '../ui/base-dialog.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Library Manager Dialog - UI for managing runtime libraries\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class LibraryDialog extends BaseDialog {\n  /**\n   * Creates a new LibraryDialog instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} libraryManager - Library manager instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(eventEmitter, libraryManager, options = {}) {\n    // Call parent constructor with dialog-specific options\n    super({\n      title: 'Runtime Libraries',\n      className: 'library-dialog',\n      debug: options.debug || false,\n      logPrefix: 'LibraryDialog',\n      ...options\n    });\n\n    this.eventEmitter = eventEmitter;\n    this.libraryManager = libraryManager;\n\n    this.urlInput = null;\n    this.addBtn = null;\n    this.libraryList = null;\n\n    // Force a log message to test if logging is working\n    console.log('üîß LibraryDialog created with debug:', this.options.debug);\n\n    this.logger.info('LibraryDialog initializing...');\n    this.createLibraryContent();\n    this.setupLibraryEventListeners();\n    this.logger.info('LibraryDialog initialization complete');\n  }\n\n  /**\n   * Creates the library-specific content for the dialog\n   */\n  createLibraryContent() {\n    this.logger.debug('Creating library-specific dialog content...');\n\n    const body = this.getBody();\n    body.innerHTML = `\n      <section class=\"current-libraries\">\n        <p class=\"descriptor\">Manage libraries loaded into the sandbox environment</p>\n        <div class=\"library-list\">\n          <div class=\"empty-state\">\n            <span class=\"empty-icon\">üìö</span>\n            <p>No libraries added yet</p>\n            <small>Add a CDN URL below to get started</small>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"add-library\">\n        <h4>Add Library</h4>\n        <p class=\"descriptor\">Paste CDN URL to add a new library to your sandbox</p>\n        <div class=\"input-row\">\n          <input type=\"url\" class=\"url-input\" placeholder=\"https://cdnjs.cloudflare.com/ajax/libs/...\">\n          <button class=\"add-btn\">Add</button>\n        </div>\n        <div class=\"input-feedback\"></div>\n      </section>\n    `;\n\n    // Cache element references\n    this.urlInput = body.querySelector('.url-input');\n    this.addBtn = body.querySelector('.add-btn');\n    this.libraryList = body.querySelector('.library-list');\n\n    // Setup library-specific event listeners\n    this.addBtn.addEventListener('click', () => {\n      this.logger.debug('Add button clicked');\n      this.handleAddLibrary();\n    });\n\n    this.urlInput.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        this.logger.debug('Enter key pressed in URL input');\n        this.handleAddLibrary();\n      }\n    });\n\n    this.logger.debug('Library content created successfully');\n  }\n\n  /**\n   * Sets up library-specific event listeners\n   */\n  setupLibraryEventListeners() {\n    this.logger.debug('Setting up library event listeners...');\n\n    this.eventEmitter.on(EVENTS.LIBRARY_MANAGER_OPEN, () => {\n      this.logger.info('Received LIBRARY_MANAGER_OPEN event');\n      this.open();\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_ADDED, (data) => {\n      this.logger.info('Received LIBRARY_ADDED event for:', data?.library?.name);\n      this.refreshLibraryList();\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVED, (data) => {\n      this.logger.info('Received LIBRARY_REMOVED event for:', data?.library?.name);\n      this.refreshLibraryList();\n    });\n\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\n      this.logger.warn('Received DOMAIN_TRUST_REQUEST for domain:', data?.domain);\n      this.showDomainTrustDialog(data);\n    });\n\n    this.logger.debug('Library event listeners configured');\n  }\n\n  /**\n   * Called before dialog opens - prepare library content\n   */\n  onBeforeOpen() {\n    this.logger.debug('Preparing library dialog for opening...');\n    this.refreshLibraryList();\n    this.urlInput.value = '';\n    this.clearFeedback();\n  }\n\n  /**\n   * Called when dialog receives focus - focus URL input\n   */\n  onFocus() {\n    this.logger.debug('Library dialog focused, focusing URL input');\n    if (this.urlInput) {\n      this.urlInput.focus();\n    }\n  }\n\n  /**\n   * Called after dialog closes - clear feedback\n   */\n  onAfterClose() {\n    this.logger.debug('Library dialog closed, clearing feedback');\n    this.clearFeedback();\n  }\n\n  /**\n   * Handles adding a new library\n   */\n  handleAddLibrary() {\n    const url = this.urlInput.value.trim();\n    this.logger.debug('handleAddLibrary called with URL:', url);\n\n    if (!url) {\n      this.logger.warn('Add library attempted with empty URL');\n      this.showFeedback('Please enter a library URL', 'error');\n      return;\n    }\n\n    this.logger.info('Attempting to add library:', url);\n    this.showFeedback('Adding library...', 'loading');\n    this.addBtn.disabled = true;\n\n    // Attempt to add the library\n    const result = this.libraryManager.addLibrary(url);\n    this.logger.debug('Library manager result:', result);\n\n    if (result.success) {\n      this.logger.info(`Library added successfully: ${result.library.name}`);\n      this.showFeedback(`Added: ${result.library.name}`, 'success');\n      this.urlInput.value = '';\n      setTimeout(() => {\n        this.logger.debug('Clearing success feedback after timeout');\n        this.clearFeedback();\n      }, 2000);\n    } else if (result.needsApproval) {\n      this.logger.warn(`Domain approval needed for: ${result.domain}`);\n      this.showFeedback(`Waiting for domain approval: ${result.domain}`, 'warning');\n      // Dialog will be shown by domain trust request event\n    } else {\n      this.logger.error(`Failed to add library: ${result.error}`);\n      this.showFeedback(`Error: ${result.error}`, 'error');\n    }\n\n    this.addBtn.disabled = false;\n    this.logger.debug('Add library operation completed');\n  }\n\n  /**\n   * Shows domain trust confirmation dialog\n   * @param {Object} data - Domain trust data\n   */\n  showDomainTrustDialog(data) {\n    this.logger.info(`Showing domain trust dialog for: ${data.domain}`);\n\n    const confirmed = confirm(\n      `‚ö†Ô∏è New CDN Domain Detected\\n\\n` +\n      `The domain \"${data.domain}\" is not in your trusted list.\\n\\n` +\n      `Adding this domain will allow all scripts from:\\n` +\n      `https://${data.domain}\\n\\n` +\n      `Do you want to trust this domain?`\n    );\n\n    if (confirmed) {\n      this.logger.info(`User confirmed trust for domain: ${data.domain}`);\n      this.libraryManager.addDomain(data.domain);\n\n      // Try adding the library again\n      this.logger.debug(`Retrying library addition for: ${data.url}`);\n      const result = this.libraryManager.addLibrary(data.url, data.name);\n\n      if (result.success) {\n        this.logger.info(`Library added after domain approval: ${result.library.name}`);\n        this.showFeedback(`Added: ${result.library.name}`, 'success');\n        this.urlInput.value = '';\n        setTimeout(() => {\n          this.logger.debug('Clearing success feedback after domain approval');\n          this.clearFeedback();\n        }, 2000);\n      } else {\n        this.logger.error(`Library addition failed after domain approval: ${result.error}`);\n        this.showFeedback(`Error: ${result.error}`, 'error');\n      }\n    } else {\n      this.logger.info(`User cancelled domain trust for: ${data.domain}`);\n      this.showFeedback('Library addition cancelled', 'info');\n      setTimeout(() => {\n        this.logger.debug('Clearing cancellation feedback');\n        this.clearFeedback();\n      }, 2000);\n    }\n  }\n\n  /**\n   * Refreshes the library list display\n   */\n  refreshLibraryList() {\n    this.logger.debug('Refreshing library list display...');\n    const libraries = this.libraryManager.getLibraries();\n\n    if (libraries.length === 0) {\n      this.logger.debug('No libraries found, showing empty state');\n      this.libraryList.innerHTML = `\n        <div class=\"empty-state\">\n          <span class=\"empty-icon\">üìö</span>\n          <p>No libraries added yet</p>\n          <small>Add a CDN URL below to get started</small>\n        </div>\n      `;\n    } else {\n      this.logger.info(`Displaying ${libraries.length} libraries in list`);\n      this.libraryList.innerHTML = libraries.map(lib => {\n        this.logger.trace(`Rendering library item: ${lib.name}`);\n        return `\n          <div class=\"library-item\" data-id=\"${lib.id}\">\n            <div class=\"library-info\">\n              <span class=\"library-name\">${lib.name}</span>\n              <small class=\"library-url\">${lib.url}</small>\n            </div>\n            <button class=\"remove-btn\" title=\"Remove library\" data-id=\"${lib.id}\">üóëÔ∏è</button>\n          </div>\n        `;\n      }).join('');\n\n      // Add remove button listeners\n      this.libraryList.querySelectorAll('.remove-btn').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n          const id = e.target.dataset.id;\n          const library = libraries.find(lib => lib.id === id);\n          this.logger.info(`Remove button clicked for library: ${library?.name || id}`);\n          this.libraryManager.removeLibrary(id);\n        });\n      });\n\n      this.logger.debug('Remove button listeners attached to all library items');\n    }\n\n    this.logger.debug(`Library list refresh completed: ${libraries.length} libraries displayed`);\n  }\n\n  /**\n   * Shows feedback message\n   * @param {string} message - Message to show\n   * @param {string} type - Type of feedback (success, error, warning, info, loading)\n   */\n  showFeedback(message, type = 'info') {\n    this.logger.debug(`Showing ${type} feedback: ${message}`);\n    const feedback = this.getBody().querySelector('.input-feedback');\n    if (feedback) {\n      feedback.textContent = message;\n      feedback.className = `input-feedback ${type}`;\n    } else {\n      this.logger.warn('Feedback element not found in dialog body');\n    }\n  }\n\n  /**\n   * Clears feedback message\n   */\n  clearFeedback() {\n    this.logger.debug('Clearing feedback message');\n    const feedback = this.getBody().querySelector('.input-feedback');\n    if (feedback) {\n      feedback.textContent = '';\n      feedback.className = 'input-feedback';\n    }\n  }\n}","/**\n * Neon Glass Glow Effect Manager\n * Applies animated neon glass borders to UI elements\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { Logger } from '../core/logger.js';\n\nexport class NeonGlowManager {\n  /**\n   * Creates a new NeonGlowManager instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.options = {\n      transitionDuration: 8000,\n      autoRotate: true,\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'NeonGlow'\n    });\n\n    this.hue1 = this.randomHue();\n    this.hue2 = this.randomHue();\n    this.rotationInterval = null;\n    this.glowElements = new Set();\n  }\n\n  /**\n   * Generates a random hue value\n   * @returns {number} Hue between 0-360\n   */\n  randomHue() {\n    return Math.floor(Math.random() * 360);\n  }\n\n  /**\n   * Generates a complementary hue with some variance\n   * @param {number} baseHue - Base hue value\n   * @returns {number} Complementary hue\n   */\n  complementaryHue(baseHue) {\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\n    return (baseHue + offset) % 360;\n  }\n\n  /**\n   * Applies neon glow effect to an element\n   * @param {HTMLElement} element - Element to apply glow to\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\n   */\n  applyGlow(element, options = {}) {\n    // Add neon-glow class\n    element.classList.add('neon-glow');\n\n    // Create glow container\n    const glowContainer = document.createElement('div');\n    glowContainer.className = 'neon-glow-container';\n\n    // Create SINGLE glow element that covers entire pane\n    const shine = document.createElement('div');\n    shine.className = 'neon-shine';\n    glowContainer.appendChild(shine);\n\n    element.appendChild(glowContainer);\n    this.glowElements.add(element);\n\n    this.logger.debug('Applied glow to element:', element);\n  }\n\n  /**\n   * Updates CSS custom properties for hue values\n   * @param {number} hue1 - Primary hue\n   * @param {number} hue2 - Secondary hue\n   */\n  updateHues(hue1, hue2) {\n    this.hue1 = hue1;\n    this.hue2 = hue2;\n\n    document.documentElement.style.setProperty('--hue1', String(hue1));\n    document.documentElement.style.setProperty('--hue2', String(hue2));\n\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\n  }\n\n  /**\n   * Rotates to new random colors\n   */\n  rotateColors() {\n    const newHue1 = this.randomHue();\n    const newHue2 = this.complementaryHue(newHue1);\n\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\n    this.updateHues(newHue1, newHue2);\n  }\n\n  /**\n   * Starts automatic color rotation\n   */\n  startRotation() {\n    if (this.rotationInterval) {\n      this.stopRotation();\n    }\n\n    // Initial colors\n    this.rotateColors();\n\n    // Set up interval\n    this.rotationInterval = setInterval(() => {\n      this.rotateColors();\n    }, this.options.transitionDuration);\n\n    this.logger.info('Started color rotation');\n  }\n\n  /**\n   * Stops automatic color rotation\n   */\n  stopRotation() {\n    if (this.rotationInterval) {\n      clearInterval(this.rotationInterval);\n      this.rotationInterval = null;\n      this.logger.info('Stopped color rotation');\n    }\n  }\n\n  /**\n   * Removes glow from an element\n   * @param {HTMLElement} element - Element to remove glow from\n   */\n  removeGlow(element) {\n    element.classList.remove('neon-glow');\n    const container = element.querySelector('.neon-glow-container');\n    if (container) {\n      container.remove();\n    }\n    this.glowElements.delete(element);\n  }\n\n  /**\n   * Cleans up the glow manager\n   */\n  destroy() {\n    this.logger.info('Destroying neon glow manager');\n    this.stopRotation();\n    \n    // Remove glow from all elements\n    this.glowElements.forEach(element => {\n      this.removeGlow(element);\n    });\n\n    this.glowElements.clear();\n  }\n}\n","import { SandboxEngine } from '../core/sandbox.js';\nimport { ConsoleOutput } from '../core/console.js';\nimport { Storage } from '../core/storage.js';\nimport { Logger } from '../core/logger.js';\nimport { EventEmitter } from '../core/events.js';\nimport { ExamplesLoader } from './examples.js';\nimport { ExamplesDropdown } from './examples-dropdown.js';\nimport { ThemeSwitcher } from './theme-switcher.js';\nimport { FullscreenManager } from './fullscreen.js';\nimport { LibraryManager } from '../libraries/manager.js';\nimport { LibraryDialog } from '../libraries/dialog.js';\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\nimport { isMobile } from '../core/utils.js';\nimport { NeonGlowManager } from './neon.js';\nimport { \n  DEFAULT_TIMEOUT_MS, \n  DEFAULT_STORAGE_KEY, \n  EVENTS, \n  STATUS_MESSAGES,\n  MOBILE_BREAKPOINT \n} from '../core/constants.js';\n\n/**\n * Main controller that orchestrates the sandbox application components\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class SandboxController {\n  /**\n   * Creates a new SandboxController instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\n   * @param {string} [options.defaultCode] - Default code to load\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logLevel='info'] - Log level for debugging\n   */\n  constructor(options = {}) {\n    this.options = {\n      timeLimit: DEFAULT_TIMEOUT_MS,\n      storageKey: DEFAULT_STORAGE_KEY,\n      defaultCode: this.getDefaultCode(),\n      debug: false,\n      logLevel: 'info',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: this.options.logLevel,\n      prefix: 'Controller'\n    });\n\n    this.events = new EventEmitter();\n    this.editor = null;\n    this.sandbox = null;\n    this.console = null;\n    this.storage = null;\n    this.examples = null;\n    this.examplesDropdown = null;\n    this.themeSwitcher = null;\n    this.fullscreenManager = null;\n    this.libraryManager = null;\n    this.libraryDialog = null;\n    this.neonGlow = null;\n    this.elements = {};\n    this.resizeHandlers = [];\n    this.responsiveListener = null;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Returns the default JavaScript code to load in the editor\n   * @returns {string} Default code content\n   */\n  getDefaultCode() {\n    return [\n      '// Welcome to JS Sandbox! üôå',\n      '//',\n      '// Tips:',\n      '//  - Use console.log/info/warn/error',\n      '//  - Ctrl/Cmd+Enter to execute',\n      '//  - \"Reset\" kills stuck executions',\n      '//',\n      '// Examples:',\n      'console.log(\"Hello, sandbox!\");',\n      'function noReturn() { var x = 1+1; }',\n      'noReturn(); // no return value, all good',\n      '',\n      '// DOM inside sandbox:',\n      'var el = document.createElement(\"h1\");',\n      'el.textContent = \"Hello from iframe!\";',\n      'document.body.appendChild(el);',\n      '',\n      '// Errors:',\n      'Promise.reject(\"rejected!\");',\n      '// throw new Error(\"Exception thrown\");',\n      '',\n      '// Infinite loop test (commented):',\n      '// while(true) {}'\n    ].join('\\n');\n  }\n\n  /**\n   * Initializes the controller and all components\n   * @returns {Promise<void>}\n   */\n  async init() {\n    if (this.isInitialized) {\n      this.logger.warn('Controller already initialized');\n      return;\n    }\n\n    try {\n      this.events.emit(EVENTS.INIT_START);\n      this.logger.info('Initializing controller...');\n      \n      this.findElements();\n      await this.initializeComponents();\n      this.setupEventListeners();\n      \n      this.isInitialized = true;\n      this.events.emit(EVENTS.INIT_COMPLETE);\n      this.logger.info('Controller initialization complete');\n    } catch (error) {\n      this.logger.error('Initialization failed:', error);\n      this.events.emit(EVENTS.INIT_ERROR, error);\n      \n      // Show user-friendly error message\n      this.showInitializationError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Shows initialization error to user\n   * @param {Error} error - The error that occurred\n   */\n  showInitializationError(error) {\n    if (this.elements.consoleContainer) {\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'console-line console-error';\n      errorDiv.textContent = `‚ö†Ô∏è Initialization failed: ${error.message}`;\n      this.elements.consoleContainer.appendChild(errorDiv);\n    }\n  }\n\n  /**\n   * Finds and caches DOM elements\n   */\n  findElements() {\n    this.elements = {\n      app: document.querySelector('.app'),\n      editorContainer: document.getElementById('editorContainer'),\n      consoleContainer: document.getElementById('console'),\n      sandboxContainer: document.getElementById('sandboxContainer'),\n      runBtn: document.getElementById('runBtn'),\n      clearBtn: document.getElementById('clearBtn'),\n      resetBtn: document.getElementById('resetBtn'),\n      togglePreview: document.getElementById('togglePreview'),\n      previewWrap: document.getElementById('previewWrap'),\n      status: document.getElementById('status'),\n      limitLabel: document.getElementById('limitLabel'),\n      toolbar: document.querySelector('.toolbar'),\n      fullscreenEditor: document.getElementById('fullscreenEditor'),\n      fullscreenConsole: document.getElementById('fullscreenConsole'),\n      librariesBtn: document.getElementById('librariesBtn'),\n      clearConsoleBtn: document.getElementById('clearConsoleBtn')\n    };\n\n    // Validate required elements\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\n    const missing = required.filter(key => !this.elements[key]);\n    \n    if (missing.length > 0) {\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\n    }\n  }\n\n  /**\n   * Initializes all components with error boundaries\n   * @returns {Promise<void>}\n   */\n  async initializeComponents() {\n    this.logger.info('Initializing components...');\n\n    // Initialize storage\n    try {\n      this.storage = new Storage(this.options.storageKey, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Storage initialized');\n    } catch (error) {\n      this.logger.error('Storage initialization failed:', error);\n      // Non-fatal, continue without persistence\n    }\n\n    // Initialize console\n    try {\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Console initialized');\n    } catch (error) {\n      this.logger.error('Console initialization failed:', error);\n      throw new Error('Failed to initialize console output');\n    }\n\n    // Initialize sandbox\n    try {\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\n        timeLimit: this.options.timeLimit,\n        debug: this.options.debug,\n        logLevel: this.options.logLevel,\n        onMessage: (type, args) => {\n          this.console.addLine(type, args);\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\n        },\n        onStatusChange: (status) => this.updateStatus(status)\n      });\n      this.logger.debug('SandboxEngine created');\n\n      // Initialize sandbox template\n      await this.sandbox.initialize();\n      this.logger.info('Sandbox initialized');\n    } catch (error) {\n      this.logger.error('Sandbox initialization failed:', error);\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\n    }\n\n    // Initialize examples system\n    try {\n      this.examples = new ExamplesLoader({\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\n        debug: true // Always debug examples loading to help troubleshoot\n      });\n\n      // Initialize examples dropdown (only if not already created)\n      if (this.elements.toolbar && !this.examplesDropdown) {\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\n          onSelect: (exampleId) => this.loadExample(exampleId)\n        });\n\n        // Load available examples\n        try {\n          this.examplesDropdown.setLoading(true);\n          const availableExamples = await this.examples.discoverExamples();\n          this.examplesDropdown.setExamples(availableExamples);\n          this.logger.info('Examples loaded:', availableExamples.length);\n        } catch (error) {\n          this.logger.error('Failed to load examples:', error);\n          this.examplesDropdown.setError('Failed to load');\n        }\n      }\n\n      // Initialize theme switcher (only if not already created)\n      if (this.elements.toolbar && !this.themeSwitcher) {\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\n          defaultTheme: 'darcula'\n        });\n        this.logger.info('Theme switcher initialized');\n      }\n\n      // Initialize fullscreen manager (only if not already created)\n      if (!this.fullscreenManager) {\n        this.fullscreenManager = new FullscreenManager(this.events, {\n          debug: this.options.debug\n        });\n        this.fullscreenManager.init({\n          app: this.elements.app,\n          fullscreenEditor: this.elements.fullscreenEditor,\n          fullscreenConsole: this.elements.fullscreenConsole\n        });\n        this.logger.info('Fullscreen manager initialized');\n      }\n\n      // Initialize library manager (only if not already created)\n      if (!this.libraryManager) {\n        this.libraryManager = new LibraryManager(this.events, {\n          debug: this.options.debug\n        });\n        this.logger.info('Library manager initialized');\n      }\n\n      // Initialize library dialog (only if not already created)\n      if (!this.libraryDialog) {\n        this.libraryDialog = new LibraryDialog(this.events, this.libraryManager, {\n          debug: this.options.debug\n        });\n        this.logger.info('Library dialog initialized');\n      }\n    } catch (error) {\n      this.logger.warn('Examples system initialization failed:', error);\n      // Non-fatal, continue without examples\n    }\n\n    // Update time limit display\n    if (this.elements.limitLabel) {\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\n    }\n\n    // Initialize resizable panes\n    this.initializeResizer();\n\n    // Handle responsive layout changes\n    this.setupResponsiveListener();\n\n    // Set initial state for preview toggle\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane && this.elements.previewWrap) {\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\n    }\n\n    // Initialize neon glow effects\n    this.initializeNeonGlow();\n\n    this.logger.info('Components initialization complete');\n  }\n\n  /**\n   * Initializes neon glow effects on UI elements\n   */\n  initializeNeonGlow() {\n    try {\n      this.neonGlow = new NeonGlowManager({\n        transitionDuration: 8000,\n        autoRotate: true,\n        debug: true // Enable debug to see color changes\n      });\n\n      // Apply glow ONLY to panes (not navbar)\n      const panes = this.elements.app.querySelectorAll('.pane');\n      panes.forEach(pane => {\n        this.neonGlow.applyGlow(pane);\n      });\n\n      // Start automatic color rotation\n      this.neonGlow.startRotation();\n\n      this.logger.info('Neon glow effects initialized');\n    } catch (error) {\n      this.logger.warn('Failed to initialize neon glow:', error);\n      // Non-fatal, continue without neon effects\n    }\n  }\n\n  /**\n   * Cleans up existing resize handlers\n   */\n  cleanupResizeHandlers() {\n    this.resizeHandlers.forEach(handler => {\n      if (handler && handler.cleanup) {\n        handler.cleanup();\n      }\n    });\n    this.resizeHandlers = [];\n  }\n\n  /**\n   * Initializes the resizable panes functionality\n   */\n  initializeResizer() {\n    if (!this.elements.app) return;\n\n    // Cleanup existing handlers\n    this.cleanupResizeHandlers();\n\n    // Skip horizontal resize on mobile\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.initializeVerticalResize();\n      return;\n    }\n\n    const mainContent = this.elements.app.querySelector('.main-content');\n    if (!mainContent) return;\n\n    // Remove any existing resize handles first\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\n    existingHandles.forEach(handle => handle.remove());\n\n    // Reset any inline grid styles that might have been applied\n    mainContent.style.gridTemplateColumns = '';\n    mainContent.style.gridTemplateRows = '';\n\n    // Reset right pane styles\n    const rightPane = mainContent.querySelector('.pane:last-child');\n    if (rightPane) {\n      rightPane.style.gridTemplateRows = '';\n      rightPane.classList.remove('preview-hidden');\n    }\n\n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resize-handle';\n\n    // Insert between the first and last pane in main-content\n    const panes = mainContent.querySelectorAll('.pane');\n    if (panes.length >= 2) {\n      mainContent.insertBefore(resizeHandle, panes[1]);\n\n      // Create horizontal resize handler using utility\n      const horizontalHandler = createHorizontalResizeHandler({\n        container: mainContent,\n        leftPane: panes[0],\n        rightPane: panes[1],\n        handle: resizeHandle,\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\n      });\n\n      this.resizeHandlers.push(horizontalHandler);\n    }\n\n    // Initialize vertical resizing\n    this.initializeVerticalResize();\n  }\n\n  /**\n   * Sets up responsive layout listener for orientation/resize changes\n   */\n  setupResponsiveListener() {\n    // Clean up existing listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n    }\n\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\n\n    const handleChange = () => {\n      this.logger.debug('Responsive breakpoint changed');\n      this.initializeResizer();\n    };\n\n    mediaQuery.addListener(handleChange);\n\n    // Store reference for cleanup\n    this.responsiveListener = { mediaQuery, handleChange };\n  }\n\n  /**\n   * Initializes vertical resizing between console and preview\n   */\n  initializeVerticalResize() {\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (!rightPane) return;\n\n    // Create vertical resize handle\n    const verticalHandle = document.createElement('div');\n    verticalHandle.className = 'vertical-resize-handle';\n\n    // Insert after console\n    const consoleEl = rightPane.querySelector('.console');\n    if (consoleEl) {\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\n\n      // Create vertical resize handler using utility\n      const verticalHandler = createVerticalResizeHandler({\n        container: rightPane,\n        topPane: consoleEl,\n        bottomPane: this.elements.previewWrap,\n        handle: verticalHandle,\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\n      });\n\n      this.resizeHandlers.push(verticalHandler);\n    }\n  }\n\n  /**\n   * Gets the event emitter instance\n   * @returns {EventEmitter} The event emitter\n   */\n  getEventEmitter() {\n    return this.events;\n  }\n\n\n  /**\n   * Sets the editor instance\n   * @param {EditorAdapter} editor - The editor instance\n   */\n  setEditor(editor) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n\n    this.editor = editor;\n\n    // Setup editor event handlers\n    this.editor.onChange((code) => {\n      if (this.storage) {\n        this.storage.save(code);\n      }\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\n    });\n\n    this.editor.onExecute(() => {\n      this.run();\n    });\n\n    // Load initial code now that editor is ready\n    this.loadInitialCode();\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\n  }\n\n  /**\n   * Sets up event listeners for UI interactions\n   */\n  setupEventListeners() {\n    if (this.elements.runBtn) {\n      this.elements.runBtn.addEventListener('click', () => this.run());\n    }\n\n    if (this.elements.clearBtn) {\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\n    }\n\n    if (this.elements.resetBtn) {\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    if (this.elements.togglePreview) {\n      this.elements.togglePreview.addEventListener('change', (e) => {\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          if (e.target.checked) {\n            rightPane.classList.add('has-preview');\n          } else {\n            rightPane.classList.remove('has-preview');\n            rightPane.style.gridTemplateRows = '';\n          }\n        }\n      });\n    }\n\n    if (this.elements.librariesBtn) {\n      this.elements.librariesBtn.addEventListener('click', () => {\n        this.events.emit(EVENTS.LIBRARY_MANAGER_OPEN);\n      });\n    }\n\n    if (this.elements.clearConsoleBtn) {\n      this.elements.clearConsoleBtn.addEventListener('click', () => {\n        this.clearConsole();\n      });\n    }\n\n    // Set up theme event listeners\n    this.setupThemeEventListeners();\n  }\n\n  /**\n   * Sets up theme-related event listeners\n   */\n  setupThemeEventListeners() {\n    // Listen for theme loading start\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\n      this.logger.info('Theme loading started:', data.theme);\n    });\n\n    // Listen for theme ready\n    this.events.on(EVENTS.THEME_READY, (data) => {\n      this.logger.info('Theme ready:', data.theme);\n      if (data.error) {\n        this.logger.warn('Theme ready with error:', data.error);\n      }\n    });\n\n    // Listen for theme changes\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\n    });\n  }\n\n  /**\n   * Loads initial code into the editor\n   */\n  loadInitialCode() {\n    const savedCode = this.storage ? this.storage.load() : null;\n    const initialCode = savedCode || this.options.defaultCode;\n\n    if (this.editor) {\n      this.editor.setValue(initialCode);\n      this.editor.focus();\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\n    }\n  }\n\n  /**\n   * Runs the current code in the sandbox\n   */\n  async run() {\n    if (!this.editor) {\n      this.logger.error('No editor configured');\n      return;\n    }\n\n    const code = this.editor.getValue();\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\n\n    // Validate syntax first\n    const validation = this.sandbox.validateSyntax(code);\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\n\n    this.console.clear();\n\n    // On mobile, scroll to console after running code\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.scrollToConsoleOnMobile();\n    }\n\n    // Prepare library data for injection (async)\n    let libraryData = null;\n    if (this.libraryManager) {\n      const libraries = this.libraryManager.getLibraries();\n      if (libraries.length > 0) {\n        // Show loading status for libraries\n        this.updateStatus(`Loading ${libraries.length} libraries...`);\n\n        try {\n          this.logger.debug('Generating library scripts...');\n          const scripts = await this.libraryManager.generateScriptTags();\n          const csp = this.libraryManager.generateCSP();\n\n          libraryData = { scripts, csp };\n          this.logger.debug('Library data prepared successfully');\n        } catch (error) {\n          this.logger.error('Failed to prepare library data:', error);\n          this.updateStatus('Library loading failed');\n          // Continue without libraries\n        }\n      }\n    }\n\n    this.sandbox.execute(code, libraryData);\n  }\n\n  /**\n   * Scrolls to the console pane on mobile devices\n   */\n  scrollToConsoleOnMobile() {\n    this.logger.debug('Scrolling to console on mobile');\n\n    // Target the console pane directly\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane) {\n      // Use scrollIntoView which is more reliable\n      rightPane.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n      this.logger.debug('Scrolled to right pane');\n    } else {\n      // Fallback: scroll by the editor height\n      const editorPane = this.elements.app.querySelector('.pane:first-child');\n      if (editorPane) {\n        const editorHeight = editorPane.offsetHeight;\n        window.scrollTo({\n          top: editorHeight,\n          behavior: 'smooth'\n        });\n        this.logger.debug(`Scrolled by editor height: ${editorHeight}px`);\n      }\n    }\n  }\n\n  /**\n   * Clears the console output\n   */\n  clearConsole() {\n    this.console.clear();\n    this.updateStatus(STATUS_MESSAGES.cleared);\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\n  }\n\n  /**\n   * Resets the sandbox\n   */\n  reset() {\n    this.sandbox.reset();\n    this.updateStatus(STATUS_MESSAGES.reset);\n    this.events.emit(EVENTS.SANDBOX_RESET);\n  }\n\n  /**\n   * Updates the status display\n   * @param {string} status - Status message or key\n   */\n  updateStatus(status) {\n    if (!this.elements.status) return;\n\n    const displayStatus = STATUS_MESSAGES[status] || status;\n    this.elements.status.textContent = displayStatus;\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\n\n    // Emit specific status events\n    if (status === 'completed') {\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\n    } else if (status === 'timeout') {\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\n    }\n  }\n\n  /**\n   * Registers an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @param {Object} [options={}] - Options for the listener\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback, options) {\n    return this.events.on(event, callback, options);\n  }\n\n  /**\n   * Registers a one-time event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @returns {Function} Unsubscribe function\n   */\n  once(event, callback) {\n    return this.events.once(event, callback);\n  }\n\n  /**\n   * Removes an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n\n  /**\n   * Gets the current code from the editor\n   * @returns {string|null} The current code or null if no editor\n   */\n  getCode() {\n    return this.editor ? this.editor.getValue() : null;\n  }\n\n  /**\n   * Sets code in the editor\n   * @param {string} code - The code to set\n   */\n  setCode(code) {\n    if (this.editor) {\n      this.editor.setValue(code);\n    }\n  }\n\n  /**\n   * Validates JavaScript syntax without executing\n   * @param {string} [code] - The code to validate, or current editor code if not provided\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\n   */\n  validateCode(code) {\n    const codeToValidate = code || this.getCode();\n    return this.sandbox ? \n      this.sandbox.validateSyntax(codeToValidate) : \n      { valid: false, error: 'Sandbox not initialized' };\n  }\n\n  /**\n   * Loads and runs an example\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<void>}\n   */\n  async loadExample(exampleId) {\n    try {\n      this.logger.info('Loading example:', exampleId);\n\n      const example = await this.examples.loadExample(exampleId);\n\n      // Set the code in the editor\n      this.setCode(example.code);\n\n      // Open preview pane\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\n        this.elements.togglePreview.checked = true;\n        this.elements.previewWrap.classList.add('show');\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          rightPane.classList.add('has-preview');\n        }\n      }\n\n      // Run the example\n      this.run();\n\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\n    }\n  }\n\n  /**\n   * Cleans up the controller and all components\n   */\n  destroy() {\n    this.logger.info('Destroying controller...');\n    \n    this.events.emit(EVENTS.DESTROY);\n\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n\n    if (this.sandbox) {\n      this.sandbox.destroy();\n      this.sandbox = null;\n    }\n\n    if (this.examples) {\n      this.examples.destroy();\n      this.examples = null;\n    }\n\n    if (this.examplesDropdown) {\n      this.examplesDropdown.destroy();\n      this.examplesDropdown = null;\n    }\n\n    if (this.neonGlow) {\n      this.neonGlow.destroy();\n      this.neonGlow = null;\n    }\n\n    if (this.fullscreenManager) {\n      this.fullscreenManager.destroy();\n      this.fullscreenManager = null;\n    }\n\n    if (this.libraryManager) {\n      this.libraryManager.destroy();\n      this.libraryManager = null;\n    }\n\n    if (this.libraryDialog) {\n      this.libraryDialog.destroy();\n      this.libraryDialog = null;\n    }\n\n    // Cleanup resize handlers\n    this.cleanupResizeHandlers();\n\n    // Cleanup responsive listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n      this.responsiveListener = null;\n    }\n\n    this.events.removeAllListeners();\n    this.isInitialized = false;\n    \n    this.logger.info('Controller destroyed');\n  }\n}\n","import {\n  MIN_LEFT_PANE_WIDTH,\n  MIN_RIGHT_PANE_WIDTH,\n  MIN_CONSOLE_HEIGHT,\n  MIN_PREVIEW_HEIGHT,\n  RESIZE_HANDLE_WIDTH\n} from '../core/constants.js';\n\n/**\n * Shared resize functionality for panes\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\n/**\n * Creates a horizontal resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.leftPane - Left pane element\n * @param {HTMLElement} config.rightPane - Right pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @returns {Object} Handler functions and cleanup\n */\nexport function createHorizontalResizeHandler(config) {\n  const { container, leftPane, rightPane, handle, onResize } = config;\n\n  let isResizing = false;\n  let startX = 0;\n  let startLeftWidth = 0;\n  let startRightWidth = 0;\n\n  const handleStart = (e) => {\n    isResizing = true;\n    // Support both mouse and touch events\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\n    startX = clientX;\n    handle.classList.add('dragging');\n\n    startLeftWidth = leftPane.getBoundingClientRect().width;\n    startRightWidth = rightPane.getBoundingClientRect().width;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'col-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMove = (e) => {\n    if (!isResizing) return;\n\n    // Support both mouse and touch events\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\n    const deltaX = clientX - startX;\n    const containerRect = container.getBoundingClientRect();\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\n\n    // Calculate new widths with constraints\n    const newLeftWidth = Math.max(\n      MIN_LEFT_PANE_WIDTH,\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\n    );\n    const newRightWidth = totalWidth - newLeftWidth;\n\n    // Update grid template\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\n\n    e.preventDefault();\n  };\n\n  const handleEnd = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  // Add both mouse and touch event listeners\n  handle.addEventListener('mousedown', handleStart);\n  handle.addEventListener('touchstart', handleStart);\n  document.addEventListener('mousemove', handleMove);\n  document.addEventListener('touchmove', handleMove);\n  document.addEventListener('mouseup', handleEnd);\n  document.addEventListener('touchend', handleEnd);\n\n  return {\n    handleStart,\n    handleMove,\n    handleEnd,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleStart);\n      handle.removeEventListener('touchstart', handleStart);\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('mouseup', handleEnd);\n      document.removeEventListener('touchend', handleEnd);\n    }\n  };\n}\n\n/**\n * Creates a vertical resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.topPane - Top pane element\n * @param {HTMLElement} config.bottomPane - Bottom pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\n * @returns {Object} Handler functions and cleanup\n */\nexport function createVerticalResizeHandler(config) {\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\n  \n  let isResizing = false;\n  let startY = 0;\n  let startTopHeight = 0;\n  let startBottomHeight = 0;\n\n  const handleStart = (e) => {\n    // Check if resizing is allowed\n    if (shouldResize && !shouldResize()) return;\n\n    isResizing = true;\n    // Support both mouse and touch events\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\n    startY = clientY;\n    handle.classList.add('dragging');\n\n    const topRect = topPane.getBoundingClientRect();\n    const bottomRect = bottomPane.getBoundingClientRect();\n\n    startTopHeight = topRect.height;\n    startBottomHeight = bottomRect.height;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'row-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMove = (e) => {\n    if (!isResizing) return;\n\n    // Support both mouse and touch events\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\n    const deltaY = clientY - startY;\n    const totalContentHeight = startTopHeight + startBottomHeight;\n\n    // Calculate new heights with constraints\n    const newTopHeight = Math.max(\n      MIN_CONSOLE_HEIGHT,\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\n    );\n    const newBottomHeight = totalContentHeight - newTopHeight;\n\n    // Update grid template\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\n\n    e.preventDefault();\n  };\n\n  const handleEnd = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  // Add both mouse and touch event listeners\n  handle.addEventListener('mousedown', handleStart);\n  handle.addEventListener('touchstart', handleStart);\n  document.addEventListener('mousemove', handleMove);\n  document.addEventListener('touchmove', handleMove);\n  document.addEventListener('mouseup', handleEnd);\n  document.addEventListener('touchend', handleEnd);\n\n  return {\n    handleStart,\n    handleMove,\n    handleEnd,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleStart);\n      handle.removeEventListener('touchstart', handleStart);\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('mouseup', handleEnd);\n      document.removeEventListener('touchend', handleEnd);\n    }\n  };\n}\n","import { EditorAdapter } from './base.js';\n\n/**\n * Plain textarea editor adapter for basic code editing\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class TextareaEditor extends EditorAdapter {\n  /**\n   * Creates a new TextareaEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\n   */\n  constructor(container, options = {}, eventEmitter = null) {\n    super(container, options, eventEmitter);\n    this.textarea = null;\n    this.init();\n  }\n\n  /**\n   * Initializes the textarea editor\n   */\n  init() {\n    this.textarea = document.createElement('textarea');\n    this.textarea.className = 'code-editor';\n    this.textarea.spellcheck = false;\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\n\n    this.container.appendChild(this.textarea);\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for the textarea\n   */\n  setupEventListeners() {\n    this.textarea.addEventListener('input', () => {\n      this.triggerChange();\n    });\n\n    this.textarea.addEventListener('keydown', (e) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        e.preventDefault();\n        this.triggerExecute();\n      }\n    });\n  }\n\n  /**\n   * Gets the current code value from the textarea\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.textarea.value;\n  }\n\n  /**\n   * Sets the code value in the textarea\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    this.textarea.value = code;\n  }\n\n  /**\n   * Focuses the textarea\n   */\n  focus() {\n    this.textarea.focus();\n  }\n\n  /**\n   * Cleans up the textarea editor\n   */\n  destroy() {\n    if (this.textarea) {\n      this.textarea.remove();\n    }\n  }\n}","/**\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { SandboxController } from './ui/controller.js';\nimport { CodeMirrorEditor } from './editors/codemirror.js';\nimport { TextareaEditor } from './editors/textarea.js';\nimport { Logger } from './core/logger.js';\n\n/**\n * Auto-detects and initializes the best available editor\n * @param {HTMLElement} container - DOM element to contain the editor\n * @param {Object} [options={}] - Editor configuration options\n * @param {Object} [eventEmitter] - Event emitter for theme changes\n * @returns {EditorAdapter} The initialized editor instance\n */\nfunction createEditor(container, options = {}, eventEmitter = null) {\n  const logger = new Logger({\n    enabled: options.debug || false,\n    level: 'info',\n    prefix: 'EditorFactory'\n  });\n\n  // Try CodeMirror first if available\n  if (typeof CodeMirror !== 'undefined') {\n    try {\n      logger.info('Initializing CodeMirror editor');\n      return new CodeMirrorEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize CodeMirror, falling back to textarea:', e);\n    }\n  }\n\n  // Fallback to textarea\n  logger.info('Initializing textarea editor');\n  return new TextareaEditor(container, options, eventEmitter);\n}\n\n/**\n * Initializes the JavaScript sandbox application\n * @param {Object} [options={}] - Configuration options\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n * @param {string} [options.storageKey] - LocalStorage key for persistence\n * @param {string} [options.defaultCode] - Default code to load\n * @param {boolean} [options.debug=false] - Enable debug logging\n * @param {string} [options.logLevel='info'] - Log level for debugging\n * @param {string} [options.templatePath] - Path to custom sandbox template\n * @returns {Promise<SandboxController>} The initialized sandbox controller\n */\nexport async function initSandbox(options = {}) {\n  const debug = options.debug || false;\n  const logger = new Logger({\n    enabled: debug,\n    level: options.logLevel || 'info',\n    prefix: 'App'\n  });\n\n  try {\n    logger.info('Starting sandbox initialization...');\n\n    // Create controller\n    const controller = new SandboxController(options);\n    \n    // Initialize controller (now properly awaited)\n    await controller.init();\n    logger.info('Controller initialized');\n\n    // Find editor container\n    const editorContainer = document.getElementById('editorContainer');\n    if (!editorContainer) {\n      throw new Error('Editor container element not found');\n    }\n\n    // Create editor with event emitter for theme switching\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\n    const editor = createEditor(editorContainer, {\n      mode: 'javascript',\n      theme: 'darcula', // Temporary default, will be updated by THEME_READY event\n      autofocus: true,\n      debug: debug\n    }, controller.getEventEmitter());\n    logger.info('Editor created, waiting for theme ready event');\n\n    // Set editor on controller\n    controller.setEditor(editor);\n    logger.info('Editor set on controller');\n    \n    logger.info('Sandbox initialization complete');\n    return controller;\n  } catch (error) {\n    logger.error('Sandbox initialization failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Auto-initializes the sandbox if DOM is ready\n */\nfunction autoInit() {\n  // Only auto-init if not already initialized and editor container exists\n  if (!window.sandbox && document.getElementById('editorContainer')) {\n    initSandbox({ debug: true, logLevel: 'trace' })\n      .then(sandbox => {\n        window.sandbox = sandbox;\n        console.log('‚úÖ Sandbox initialized successfully');\n      })\n      .catch(error => {\n        console.error('‚ùå Failed to initialize sandbox:', error);\n      });\n  }\n}\n\n// Auto-initialize based on document state\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  // DOM already loaded\n  autoInit();\n}\n\n// Export for manual initialization\nexport { SandboxController, CodeMirrorEditor, TextareaEditor };\n"],"names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","themes","label","currentTheme","loadSavedTheme","initializeCurrentTheme","emit","EVENTS","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","populateThemes","async","themeValue","switchTheme","examplesDropdown","themeName","link","rel","href","Promise","resolve","reject","onload","onerror","head","savedTheme","find","t","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","FullscreenManager","currentMode","appElement","elements","isChanging","setupEventListeners","init","app","fullscreenEditor","toggleFullscreen","fullscreenConsole","preventDefault","exitFullscreen","on","FULLSCREEN_TOGGLE","mode","FULLSCREEN_EXIT","setFullscreenMode","previousMode","classList","updateButtonStates","add","toUpperCase","activeMode","getCurrentMode","isFullscreen","LibraryManager","allowlistKey","console","log","defaultDomains","libraries","allowedDomains","libraryCache","loadFromStorage","LIBRARY_ADD","data","addLibrary","name","LIBRARY_REMOVE","removeLibrary","DOMAIN_TRUST_REQUEST","addDomain","domain","librariesData","JSON","parse","domainsData","savedDomains","Set","map","lib","join","saveLibraries","serialized","stringify","saveDomains","customDomains","filter","includes","generateId","Date","now","Math","random","toString","substr","extractDomain","URL","hostname","guessLibraryName","pathname","nameWithoutExt","split","pop","replace","patterns","pattern","match","charAt","slice","extractVersionFromUrl","versionPatterns","isDomainAllowed","validateLibraryUrl","valid","domainAllowed","needsDomainApproval","validation","success","needsApproval","library","trim","addedAt","toISOString","LIBRARY_ADDED","index","findIndex","removed","splice","LIBRARY_REMOVED","DOMAIN_ADDED","removeDomain","indexOf","DOMAIN_REMOVED","getLibraries","getAllowedDomains","generateScriptTags","scripts","content","fetch","statusText","result","libraryNames","scriptSize","s","version","versionInfo","toFixed","generateCSP","getStats","libraryCount","domainCount","customDomainCount","LIBRARIES_CLEARED","testLogging","BaseDialog","modal","closeOnBackdrop","closeOnEscape","logPrefix","dialog","isOpen","closeButton","createDialog","header","body","close","getBody","setTitle","titleElement","open","focus","onBeforeOpen","showModal","show","onFocus","onAfterOpen","onBeforeClose","onAfterClose","toggle","isDialogOpen","setContent","HTMLElement","addClass","removeClass","LibraryDialog","libraryManager","super","urlInput","addBtn","libraryList","createLibraryContent","setupLibraryEventListeners","handleAddLibrary","LIBRARY_MANAGER_OPEN","refreshLibraryList","showDomainTrustDialog","clearFeedback","showFeedback","confirm","trace","querySelectorAll","btn","dataset","type","feedback","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","floor","complementaryHue","baseHue","applyGlow","element","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","editor","sandbox","storage","themeSwitcher","fullscreenManager","libraryDialog","neonGlow","resizeHandlers","responsiveListener","isInitialized","INIT_START","findElements","initializeComponents","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","librariesBtn","clearConsoleBtn","missing","ConsoleOutput","SandboxEngine","onMessage","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","initializeNeonGlow","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleStart","clientX","touches","getBoundingClientRect","width","userSelect","cursor","handleMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleEnd","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","setEditor","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","savedCode","initialCode","setValue","CODE_LOAD","fromStorage","getValue","CODE_EXECUTE_START","validateSyntax","CODE_VALIDATE","scrollToConsoleOnMobile","libraryData","csp","execute","scrollIntoView","behavior","block","editorPane","editorHeight","offsetHeight","scrollTo","top","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","EXAMPLE_LOADED","DESTROY","removeAllListeners","TextareaEditor","EditorAdapter","textarea","spellcheck","placeholder","triggerChange","ctrlKey","metaKey","triggerExecute","initSandbox","controller","CodeMirror","CodeMirrorEditor","createEditor","autofocus","autoInit","then","catch","readyState"],"mappings":"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"}