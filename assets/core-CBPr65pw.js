import{N as e,D as t,L as n,T as r,a as i,b as s,C as a}from"./vendor-CVLeJax-.js";async function o(t,n={},r=e){const i=new AbortController,s=setTimeout(()=>i.abort(),r);try{const e=await fetch(t,{...n,signal:i.signal});return clearTimeout(s),e}catch(a){if(clearTimeout(s),"AbortError"===a.name)throw new Error(`Request timeout after ${r}ms`);throw a}}function l(e=768){return window.matchMedia(`(max-width: ${e}px)`).matches}class g{constructor(e=t,r={}){this.templatePath=e,this.template=null,this.isLoaded=!1,this.logger=new n({enabled:!1!==r.debug,level:r.logLevel||"info",prefix:"TemplateEngine",redactSecrets:!0})}forceReload(){this.logger.info("Force reloading template..."),this.template=null,this.isLoaded=!1}async initialize(){if(this.logger.info("Starting initialization..."),this.isLoaded)this.logger.debug("Already loaded, skipping");else try{this.logger.debug("Fetching template from:",this.templatePath);const e="?t="+Date.now(),t=await o(this.templatePath+e,{},r);if(!t.ok)throw new Error(`Failed to load template: ${t.status}`);this.template=await t.text(),this.validateTemplate(),this.logger.info("Template loaded successfully, length:",this.template.length),this.logger.debug("Template preview:",this.template.substring(0,200)+"..."),this.isLoaded=!0}catch(e){this.logger.error("Failed to load sandbox template:",e.message),this.logger.warn("Using fallback template"),this.template=this.getFallbackTemplate(),this.isLoaded=!0}}validateTemplate(){const e=[i.SECRET,i.USER_CODE,i.DYNAMIC_CSP,i.LIBRARY_SCRIPTS].filter(e=>!this.template.includes(e));if(e.length>0)throw new Error(`Template missing required markers: ${e.join(", ")}`);this.logger.debug("Template validation passed")}getFallbackTemplate(){return`<!doctype html>\n<html><head><meta charset="utf-8">\n<meta http-equiv="Content-Security-Policy" content="${i.DYNAMIC_CSP}">\n<title>Sandbox</title>\n${i.LIBRARY_SCRIPTS}\n<style>html,body{margin:0;padding:12px;font:14px/1.4 -apple-system, system-ui, Segoe UI, Roboto} body{background:#fff;color:#111}</style>\n</head><body>\n<script>\n(function(){\n  var SECRET = "${i.SECRET}";\n\n  // Debug logging to sandbox console\n  var debug = function(msg) {\n    console.log('[SANDBOX DEBUG]', msg);\n  };\n\n  // Convert any value to a string for sending\n  var stringify = function(val) {\n    if (val === undefined) return 'undefined';\n    if (val === null) return 'null';\n    if (typeof val === 'string') return val;\n    if (typeof val === 'number' || typeof val === 'boolean') return String(val);\n\n    // Handle Error objects specially\n    if (val instanceof Error) {\n      var errorStr = val.name + ': ' + val.message;\n      if (val.stack) {\n        // Clean up the stack trace\n        var lines = val.stack.split('\\n');\n        var cleaned = [];\n        for (var i = 0; i < lines.length; i++) {\n          var line = lines[i];\n          if (i === 0) {\n            cleaned.push(line); // Keep error message\n          } else if (line.indexOf('<anonymous>') !== -1) {\n            // Extract line and column numbers\n            var match = line.match(/:(d+):(d+)/);\n            if (match) {\n              cleaned.push('    at line ' + match[1] + ', column ' + match[2]);\n            }\n          }\n        }\n        errorStr = cleaned.join('\\n');\n      }\n      return errorStr;\n    }\n\n    // Try to stringify objects\n    try {\n      return JSON.stringify(val);\n    } catch(e) {\n      return Object.prototype.toString.call(val);\n    }\n  };\n\n  var send = function(type){\n    var args = Array.prototype.slice.call(arguments, 1);\n    // Make sure all arguments are strings\n    var stringArgs = [];\n    for (var i = 0; i < args.length; i++) {\n      stringArgs.push(stringify(args[i]));\n    }\n\n    debug('Sending ' + type + ' message with ' + stringArgs.length + ' args');\n\n    try {\n      parent.postMessage({\n        __sandbox: true,\n        secret: SECRET,\n        type: type,\n        args: stringArgs\n      }, "*");\n    } catch(e) {\n      debug('Failed to send message: ' + e.message);\n    }\n  };\n\n  // Override console methods\n  ["log","info","warn","error"].forEach(function(m){\n    var original = console[m];\n    console[m] = function(){\n      var args = Array.prototype.slice.call(arguments);\n      send.apply(null, [m].concat(args));\n      // Still call original for debugging\n      if (original && original.apply) {\n        try { original.apply(console, arguments); } catch(_) {}\n      }\n    };\n  });\n\n  // Global error handler\n  window.addEventListener("error", function(e){\n    debug('Error event caught');\n    debug('Error object: ' + e.error);\n    debug('Error message: ' + e.message);\n    debug('Error lineno: ' + e.lineno);\n\n    var errorMsg = '';\n    if (e.error) {\n      // Extract error details manually since stringify might fail\n      var err = e.error;\n      errorMsg = (err.name || 'Error') + ': ' + (err.message || 'Unknown error');\n\n      // Try to get stack trace\n      if (err.stack) {\n        var lines = err.stack.split('\\n');\n        // First line is usually the error message, skip it if it's redundant\n        var startIdx = (lines[0].indexOf(err.message) !== -1) ? 1 : 0;\n\n        for (var i = startIdx; i < lines.length; i++) {\n          var line = lines[i].trim();\n          if (line) {\n            // Clean up the stack trace line\n            var match = line.match(/at\\s+(?:(.+?)\\s+\\()?(?:.+?):(\\d+):(\\d+)/);\n            if (match) {\n              var fnName = match[1] || 'anonymous';\n              errorMsg += '\\n    at ' + fnName + ' (line ' + match[2] + ', column ' + match[3] + ')';\n            } else if (line.indexOf('at ') === 0) {\n              // Keep other 'at' lines but clean them up\n              errorMsg += '\\n    ' + line;\n            }\n          }\n        }\n      } else if (e.lineno) {\n        // Fallback to basic location info\n        errorMsg += '\\n    at line ' + e.lineno + ', column ' + e.colno;\n      }\n    } else {\n      // Fallback when no error object\n      errorMsg = e.message || 'Unknown error';\n      if (e.lineno) {\n        errorMsg += '\\n    at line ' + e.lineno + ', column ' + e.colno;\n      }\n    }\n\n    debug('Formatted error: ' + errorMsg);\n    send("error", errorMsg);\n\n    // Prevent default browser error handling\n    e.preventDefault();\n    return true;\n  });\n\n  // Handle promise rejections\n  window.addEventListener("unhandledrejection", function(e){\n    debug('Unhandled rejection caught');\n    var errorMsg = "Unhandled Promise Rejection: " + stringify(e.reason);\n    send("error", errorMsg);\n    e.preventDefault();\n    return true;\n  });\n\n  // Execute user code\n  debug('Executing user code...');\n  try {\n${i.USER_CODE}\n  } catch (err) {\n    debug('Caught error in try-catch: ' + err.message);\n    send("error", stringify(err));\n  }\n\n  // Signal completion\n  setTimeout(function(){\n    debug('Sending done signal');\n    send("done");\n  }, 0);\n})();\n<\/script>\n</body></html>`}buildSrcDoc(e,t,n="",r=null){if(this.logger.debug("Building srcDoc..."),!this.isLoaded)throw new Error("TemplateEngine not initialized. Call initialize() first.");const s=e.replace(/<\/(script)/gi,"<\\/$1");const a=String(t),o=`//# sourceURL=user-code.js\n${s}`,l=r||"default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; connect-src 'none';";this.logger.trace("Replacing template markers");let g=this.template;return g=g.replace(new RegExp(this.escapeRegExp(i.SECRET),"g"),a),g=g.replace(new RegExp(this.escapeRegExp(i.USER_CODE),"g"),o),g=g.replace(new RegExp(this.escapeRegExp(i.LIBRARY_SCRIPTS),"g"),n),g=g.replace(new RegExp(this.escapeRegExp(i.DYNAMIC_CSP),"g"),l),this.logger.debug("Template replacement complete"),this.logger.trace("Result preview:",g.substring(0,500)+"..."),n&&this.logger.info("Libraries injected:",n.split("<script").length-1),g}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}}class c{constructor(e,t={}){this.container=e,this.timeLimit=t.timeLimit||s,this.onMessage=t.onMessage||(()=>{}),this.onStatusChange=t.onStatusChange||(()=>{}),this.iframe=null,this.killTimer=null,this.currentSecret=this.generateSecret(),this.messageHandler=null,this.logger=new n({enabled:!1!==t.debug,level:t.logLevel||"info",prefix:"SandboxEngine",redactSecrets:!0}),this.templateEngine=new g(t.templatePath,{debug:t.debug,logLevel:t.logLevel}),this.createIframe(),this.setupMessageListener()}async initialize(){this.logger.info("Initializing...");try{await this.templateEngine.initialize(),this.logger.info("Template engine initialized")}catch(e){throw this.logger.error("Template initialization failed:",e),new Error(`Sandbox initialization failed: ${e.message}`)}}generateSecret(){try{if(window.crypto&&window.crypto.getRandomValues){const e=new Uint32Array(a);return window.crypto.getRandomValues(e),String(e[0])+String(e[1])}}catch(e){this.logger.warn("Crypto API unavailable, using fallback",e)}return String(Math.random()).slice(2)+Date.now()}createIframe(){this.container.innerHTML="",this.iframe=document.createElement("iframe"),this.iframe.className="sandbox-iframe",this.iframe.setAttribute("sandbox","allow-scripts allow-modals"),this.iframe.title="Code Sandbox",this.container.appendChild(this.iframe)}reset(){this.killTimer&&(clearTimeout(this.killTimer),this.killTimer=null),this.createIframe(),this.onStatusChange("reset")}validateSyntax(e){try{return new Function(e),{valid:!0}}catch(t){return{valid:!1,error:t.message,name:t.name,toString:()=>`${t.name}: ${t.message}`}}}async execute(e,t=null){this.logger.debug("Executing code..."),this.templateEngine.isLoaded||(this.logger.debug("Template not loaded, initializing..."),await this.templateEngine.initialize());const n=this.validateSyntax(e);if(!n.valid)return this.logger.debug("Syntax error detected:",n.error),this.onMessage("error",[n.toString()]),void this.onStatusChange("completed");this.currentSecret=this.generateSecret(),this.logger.trace("Generated secret for execution");const r=t?.scripts||"",i=t?.csp||null,s=this.templateEngine.buildSrcDoc(e,this.currentSecret,r,i);this.logger.debug("Setting iframe srcdoc..."),t?.scripts&&this.logger.info("Injecting libraries into sandbox"),this.iframe.srcdoc=s,this.onStatusChange("executing"),this.killTimer&&clearTimeout(this.killTimer),this.killTimer=setTimeout(()=>{this.onMessage("error",[`⏱️ Execution timeout (${this.timeLimit}ms). Sandbox reset.`]),this.reset(),this.onStatusChange("timeout")},this.timeLimit)}setupMessageListener(){this.messageHandler&&window.removeEventListener("message",this.messageHandler),this.messageHandler=e=>{if(e.source!==this.iframe?.contentWindow)return;const t=e.data||{};if(this.logger.trace("Received message from iframe:",t),!t.__sandbox||t.secret!==this.currentSecret)return;const n=t.type||"log",r=Array.isArray(t.args)?t.args:[t.args];if(this.logger.debug(`Processing ${n} message with ${r.length} args`),this.logger.trace("Message args:",r),"done"===n)return this.killTimer&&(clearTimeout(this.killTimer),this.killTimer=null),void this.onStatusChange("completed");"error"===n&&this.logger.warn("Error message received from sandbox:",r),this.onMessage(n,r)},window.addEventListener("message",this.messageHandler)}destroy(){this.logger.info("Destroying sandbox engine..."),this.killTimer&&(clearTimeout(this.killTimer),this.killTimer=null),this.messageHandler&&(window.removeEventListener("message",this.messageHandler),this.messageHandler=null),this.iframe&&(this.iframe.remove(),this.iframe=null),this.logger.info("Sandbox engine destroyed")}}class h{constructor(e,t={}){this.container=e,this.logger=new n({enabled:t.debug||!1,level:"warn",prefix:"ConsoleOutput"})}clear(){this.container.innerHTML=""}addLine(e,t){this.logger.debug(`Adding ${e} line with ${t.length} args`),this.logger.trace("Args received:",t);try{const n=document.createElement("div");n.className=`console-line console-${e}`;const r=t.map((e,t)=>{this.logger.trace(`Formatting arg ${t}:`,typeof e,e);const n=this.formatArg(e);return this.logger.trace("Formatted result:",n),n}).join(" ");if("error"===e&&r.includes("\n")){const e=r.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;").replace(/\n/g,"<br>");n.innerHTML=e}else n.textContent=r;this.container.appendChild(n),this.container.scrollTop=this.container.scrollHeight,this.logger.debug(`Displayed ${e} message:`,n.textContent)}catch(n){this.logger.error("Failed to add console line:",n)}}formatArg(e){try{if(e instanceof Error)return e.stack||e.message||String(e)}catch(n){this.logger.warn("Error checking instanceof Error:",n)}const t=typeof e;if("string"===t)return e;if("number"===t||"boolean"===t||null===e)return String(e);if("undefined"===t)return"undefined";try{if("undefined"!=typeof Node&&e instanceof Node)return"<"+(e.nodeName||"node").toLowerCase()+">"}catch(n){this.logger.warn("Error checking instanceof Node:",n)}try{return function(e,t=2){const n=new WeakSet;return JSON.stringify(e,(e,t)=>{if("object"==typeof t&&null!==t){if(n.has(t))return"[Circular]";n.add(t)}return"undefined"!=typeof Node&&t instanceof Node?"<"+(t.nodeName||"node").toLowerCase()+">":t instanceof Error?t.stack||t.message||String(t):t},t)}(e)}catch(n){return this.logger.warn("Failed to stringify value:",n),String(e)}}}class d{constructor(){this.events=new Map}on(e,t,n={}){this.events.has(e)||this.events.set(e,[]);const r={callback:t,once:n.once||!1};return this.events.get(e).push(r),()=>this.off(e,t)}once(e,t){return this.on(e,t,{once:!0})}off(e,t){if(!this.events.has(e))return;const n=this.events.get(e),r=n.findIndex(e=>e.callback===t);r>-1&&n.splice(r,1),0===n.length&&this.events.delete(e)}emit(e,...t){if(!this.events.has(e))return!1;const n=this.events.get(e),r=[];return n.forEach((n,i)=>{try{n.callback(...t),n.once&&r.push(i)}catch(s){console.error(`Error in event listener for '${e}':`,s)}}),r.reverse().forEach(e=>{n.splice(e,1)}),0===n.length&&this.events.delete(e),!0}removeAllListeners(e){e?this.events.delete(e):this.events.clear()}eventNames(){return Array.from(this.events.keys())}listenerCount(e){return this.events.has(e)?this.events.get(e).length:0}}export{h as C,d as E,c as S,o as f,l as i};
//# sourceMappingURL=core-CBPr65pw.js.map
