{"version":3,"mappings":"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","names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","savedEditor","themes","getThemesForEditor","currentTheme","loadSavedTheme","initializeCurrentTheme","setupEditorChangeListener","on","EVENTS","EDITOR_CHANGE","async","data","refreshThemesForEditor","editor","editorName","EDITOR_THEMES","ACE","CODEMIRROR","TEXTAREA","populateThemes","find","t","switchTheme","newTheme","emit","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","themeValue","examplesDropdown","label","themeName","ace","themePath","require","Promise","resolve","savedTheme","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","EditorSwitcher","defaultEditor","editors","available","CodeMirror","currentEditor","loadSavedEditor","populateEditors","editorValue","switchEditor","availableEditors","filter","saveEditor","oldEditor","getCurrentEditor","setEditor","refreshEditors","FullscreenManager","currentMode","appElement","elements","isChanging","setupEventListeners","init","app","fullscreenEditor","toggleFullscreen","fullscreenConsole","preventDefault","exitFullscreen","FULLSCREEN_TOGGLE","mode","FULLSCREEN_EXIT","setFullscreenMode","previousMode","classList","updateButtonStates","add","toUpperCase","activeMode","getCurrentMode","isFullscreen","LibraryManager","allowlistKey","console","log","defaultDomains","libraries","allowedDomains","libraryCache","loadFromStorage","LIBRARY_ADD","addLibrary","name","LIBRARY_REMOVE","removeLibrary","DOMAIN_TRUST_REQUEST","addDomain","domain","librariesData","JSON","parse","domainsData","savedDomains","Set","map","lib","join","saveLibraries","serialized","stringify","saveDomains","customDomains","includes","generateId","Date","now","Math","random","toString","substr","extractDomain","URL","hostname","guessLibraryName","pathname","nameWithoutExt","split","pop","replace","patterns","pattern","match","charAt","slice","extractVersionFromUrl","versionPatterns","isDomainAllowed","validateLibraryUrl","valid","domainAllowed","needsDomainApproval","validation","success","needsApproval","library","trim","addedAt","toISOString","LIBRARY_ADDED","index","findIndex","removed","splice","LIBRARY_REMOVED","DOMAIN_ADDED","removeDomain","indexOf","DOMAIN_REMOVED","getLibraries","getAllowedDomains","generateScriptTags","scripts","content","fetch","statusText","result","libraryNames","scriptSize","s","version","versionInfo","toFixed","generateCSP","getStats","libraryCount","domainCount","customDomainCount","LIBRARIES_CLEARED","testLogging","BaseDialog","modal","closeOnBackdrop","closeOnEscape","logPrefix","dialog","isOpen","closeButton","createDialog","header","body","close","getBody","setTitle","titleElement","open","focus","onBeforeOpen","showModal","show","onFocus","onAfterOpen","onBeforeClose","onAfterClose","toggle","isDialogOpen","setContent","HTMLElement","addClass","removeClass","LibraryDialog","libraryManager","super","urlInput","addBtn","libraryList","createLibraryContent","setupLibraryEventListeners","handleAddLibrary","LIBRARY_MANAGER_OPEN","refreshLibraryList","showDomainTrustDialog","clearFeedback","showFeedback","confirm","trace","querySelectorAll","btn","dataset","type","feedback","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","floor","complementaryHue","baseHue","applyGlow","element","glowContainer","shine","updateHues","documentElement","style","setProperty","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","sandbox","storage","themeSwitcher","editorSwitcher","fullscreenManager","libraryDialog","neonGlow","resizeHandlers","responsiveListener","isInitialized","INIT_START","findElements","initializeComponents","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","librariesBtn","clearConsoleBtn","missing","ConsoleOutput","SandboxEngine","onMessage","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","editorControls","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","initializeNeonGlow","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleStart","clientX","touches","getBoundingClientRect","width","userSelect","cursor","handleMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","max","MIN_LEFT_PANE_WIDTH","min","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleEnd","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","window","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","height","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","setupEditorEventListeners","currentCode","getValue","newEditor","ACEEditor","__vitePreload","then","ace$1","__VITE_PRELOAD__","autofocus","CodeMirrorEditor","import","n","l","TextareaEditor","textarea","setValue","EDITOR_CHANGED","savedCode","initialCode","CODE_LOAD","fromStorage","CODE_EXECUTE_START","validateSyntax","CODE_VALIDATE","enterConsoleFullscreenOnMobile","libraryData","csp","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","EXAMPLE_LOADED","DESTROY","removeAllListeners","EditorAdapter","editorElement","cssText","edit","session","setMode","setOptions","fontSize","showPrintMargin","showGutter","highlightActiveLine","enableBasicAutocompletion","autocomplete","enableLiveAutocompletion","enableSnippets","wrap","tabSize","useSoftTabs","behavioursEnabled","wrapBehavioursEnabled","commands","addCommand","bindKey","win","mac","exec","triggerExecute","triggerChange","applyGlassEffect","onThemeChange","aceElement","backgroundColor","getComputedStyle","reducedOpacityColor","reduceColorOpacity","styleElement","head","color","opacity","rgbaMatch","r","g","b","rgbMatch","hexMatch","parseInt","applyTransformation","transformation","getCursorPosition","action","insert","cursorOffset","newCursor","moveCursorTo","row","column","positions","range","Range","start","end","spellcheck","placeholder","ctrlKey","metaKey","initSandbox","controller","createEditor","autoInit","catch","readyState"],"ignoreList":[],"sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/editor-switcher.js","../../src/ui/fullscreen.js","../../src/libraries/manager.js","../../src/ui/base-dialog.js","../../src/libraries/dialog.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/ace.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\nimport { Logger } from './logger.js';\n\n/**\n * Simple localStorage wrapper for persistent code storage\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class Storage {\n  /**\n   * Creates a new Storage instance\n   * @param {string} [key] - The localStorage key to use\n   * @param {Object} [options={}] - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\n    this.key = key;\n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'warn',\n      prefix: 'Storage'\n    });\n  }\n\n  /**\n   * Saves code to localStorage\n   * @param {string} code - The code to save\n   * @returns {boolean} True if save was successful\n   */\n  save(code) {\n    try {\n      localStorage.setItem(this.key, code);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to save code to localStorage:', e);\n      return false;\n    }\n  }\n\n  /**\n   * Loads code from localStorage\n   * @returns {string|null} The saved code or null if not found\n   */\n  load() {\n    try {\n      return localStorage.getItem(this.key);\n    } catch (e) {\n      this.logger.warn('Failed to load code from localStorage:', e);\n      return null;\n    }\n  }\n\n  /**\n   * Clears the saved code\n   * @returns {boolean} True if clear was successful\n   */\n  clear() {\n    try {\n      localStorage.removeItem(this.key);\n      return true;\n    } catch (e) {\n      this.logger.warn('Failed to clear localStorage:', e);\n      return false;\n    }\n  }\n}\n","import { Logger } from '../core/logger.js';\nimport { fetchWithTimeout } from '../core/utils.js';\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\n\n/**\n * Examples loader for the JavaScript sandbox\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesLoader {\n  /**\n   * Creates a new ExamplesLoader instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.examplesPath] - Path to examples directory\n   * @param {Function} [options.onLoad] - Callback when example is loaded\n   * @param {Function} [options.onError] - Callback when loading fails\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\n    this.onLoad = options.onLoad || (() => {});\n    this.onError = options.onError || (() => {});\n    this.examples = new Map();\n    \n    this.logger = new Logger({\n      enabled: options.debug || false,\n      level: 'info',\n      prefix: 'ExamplesLoader'\n    });\n  }\n\n  /**\n   * Discovers available examples by attempting to load known files\n   * @returns {Promise<Array>} Array of example metadata\n   */\n  async discoverExamples() {\n    // Known examples - in a real app, this could come from an API or manifest\n    const knownExamples = [\n      {\n        id: 'hello-world',\n        title: '👋 Hello World',\n        description: 'Simple greeting with interactive button',\n        file: 'hello-world.js'\n      },\n      {\n        id: 'spinning-animation',\n        title: '🌀 CSS Animations',\n        description: 'Spinning box with rainbow colors and controls',\n        file: 'spinning-animation.js'\n      },\n      {\n        id: 'interactive-form',\n        title: '📝 Interactive Form',\n        description: 'Form validation and submission handling',\n        file: 'interactive-form.js'\n      },\n      {\n        id: 'canvas-drawing',\n        title: '🎨 Canvas Drawing',\n        description: 'Draw with mouse or touch on HTML5 canvas',\n        file: 'canvas-drawing.js'\n      }\n    ];\n\n    const availableExamples = [];\n\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\n\n    // Test each example to see if it's available\n    for (const example of knownExamples) {\n      try {\n        const url = `${this.examplesPath}/${example.file}`;\n        this.logger.debug(`Fetching example: ${url}`);\n        \n        const response = await fetchWithTimeout(\n          url,\n          {},\n          NETWORK_TIMEOUT_MS\n        );\n        \n        if (response.ok) {\n          const code = await response.text();\n          this.examples.set(example.id, { ...example, code });\n          availableExamples.push(example);\n          this.logger.debug(`✓ Example loaded: ${example.id}`);\n        } else {\n          this.logger.warn(`✗ Example ${example.id} returned ${response.status}`);\n        }\n      } catch (error) {\n        this.logger.warn(`✗ Example ${example.id} failed:`, error.message);\n      }\n    }\n\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\n    return availableExamples;\n  }\n\n  /**\n   * Loads an example by ID\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<Object>} Example data with code\n   */\n  async loadExample(exampleId) {\n    if (this.examples.has(exampleId)) {\n      const example = this.examples.get(exampleId);\n      this.onLoad(example);\n      return example;\n    }\n\n    // Try to load if not cached\n    try {\n      await this.discoverExamples();\n      const example = this.examples.get(exampleId);\n\n      if (example) {\n        this.onLoad(example);\n        return example;\n      } else {\n        throw new Error(`Example '${exampleId}' not found`);\n      }\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.onError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Gets all available examples\n   * @returns {Array} Array of cached examples\n   */\n  getAvailableExamples() {\n    return Array.from(this.examples.values());\n  }\n\n  /**\n   * Clears the examples cache\n   */\n  clearCache() {\n    this.logger.debug('Clearing examples cache');\n    this.examples.clear();\n  }\n\n  /**\n   * Cleans up the examples loader\n   */\n  destroy() {\n    this.logger.debug('Destroying examples loader');\n    this.clearCache();\n  }\n}\n","/**\n * Examples dropdown UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ExamplesDropdown {\n  /**\n   * Creates a new ExamplesDropdown instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} options - Configuration options\n   * @param {Function} [options.onSelect] - Callback when example is selected\n   */\n  constructor(container, options = {}) {\n    this.container = container;\n    this.onSelect = options.onSelect || (() => {});\n    this.examples = [];\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'examples-dropdown';\n    this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\n\n    this.dropdown.addEventListener('change', (e) => {\n      const exampleId = e.target.value;\n      if (exampleId) {\n        this.onSelect(exampleId);\n        // Reset to placeholder after selection\n        setTimeout(() => {\n          this.dropdown.value = '';\n        }, 100);\n      }\n    });\n\n    // Insert after the preview button (make examples last in toolbar)\n    const previewLabel = this.container.querySelector('label.btn');\n    if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with examples\n   * @param {Array} examples - Array of example objects\n   */\n  setExamples(examples) {\n    this.examples = examples;\n\n    // Reset to normal placeholder first\n    this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\n\n    // Add example options\n    examples.forEach(example => {\n      const option = document.createElement('option');\n      option.value = example.id;\n      option.textContent = example.title;\n      option.title = example.description; // Tooltip\n      this.dropdown.appendChild(option);\n    });\n\n    // Enable dropdown if we have examples\n    this.dropdown.disabled = examples.length === 0;\n  }\n\n  /**\n   * Shows loading state\n   */\n  setLoading(loading = true) {\n    if (loading) {\n      this.dropdown.innerHTML = '<option value=\"\">⏳ Loading examples...</option>';\n      this.dropdown.disabled = true;\n    } else {\n      this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\n      this.dropdown.disabled = false;\n    }\n  }\n\n  /**\n   * Shows error state\n   * @param {string} message - Error message to display\n   */\n  setError(message = 'Failed to load examples') {\n    this.dropdown.innerHTML = `<option value=\"\">❌ ${message}</option>`;\n    this.dropdown.disabled = true;\n  }\n\n  /**\n   * Destroys the dropdown\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS, EDITOR_THEMES } from '../core/constants.js';\n\n/**\n * Theme switcher UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ThemeSwitcher {\n\n  /**\n   * Creates a new ThemeSwitcher instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} eventEmitter - The event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\n   * @param {boolean} [options.debug=true] - Enable debug logging\n   */\n  constructor(container, eventEmitter, options = {}) {\n    this.container = container;\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      defaultTheme: 'monokai',\n      debug: true,\n      storageKey: 'sandbox_current_theme',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'ThemeSwitcher'\n    });\n\n    // Check for saved editor preference to initialize with correct themes\n    const savedEditor = localStorage.getItem('sandbox_current_editor') || 'ace';\n    this.logger.info('Initializing theme switcher with saved editor:', savedEditor);\n    \n    // Initialize with themes for the saved editor\n    this.themes = ThemeSwitcher.getThemesForEditor(savedEditor);\n\n    // Load saved theme or use default (now that themes array exists)\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\n\n    this.createDropdown();\n\n    // Load CSS for the current theme on startup and emit events\n    this.initializeCurrentTheme();\n\n    // Listen for editor changes to refresh theme list\n    this.setupEditorChangeListener();\n  }\n\n  /**\n   * Sets up listener for editor changes\n   */\n  setupEditorChangeListener() {\n    if (this.eventEmitter) {\n      this.eventEmitter.on(EVENTS.EDITOR_CHANGE, async (data) => {\n        this.logger.info('Editor changed, refreshing theme list:', data);\n        await this.refreshThemesForEditor(data.editor);\n      });\n    }\n  }\n\n  /**\n   * Gets themes for a specific editor\n   * @param {string} editorName - The editor name\n   * @returns {Array} Array of theme objects\n   */\n  static getThemesForEditor(editorName) {\n    switch (editorName) {\n      case 'ace':\n        return EDITOR_THEMES.ACE;\n      case 'codemirror':\n        return EDITOR_THEMES.CODEMIRROR;\n      case 'textarea':\n        return EDITOR_THEMES.TEXTAREA;\n      default:\n        return EDITOR_THEMES.ACE; // Default fallback\n    }\n  }\n\n  /**\n   * Refreshes themes based on the current editor\n   * @param {string} editorName - The current editor name\n   */\n  async refreshThemesForEditor(editorName) {\n    this.logger.info('Refreshing themes for editor:', editorName);\n    \n    // Update themes based on editor using constants\n    this.themes = ThemeSwitcher.getThemesForEditor(editorName);\n\n    // Repopulate dropdown\n    this.populateThemes();\n    \n    // If current theme is not available in new editor, switch to first available\n    if (!this.themes.find(t => t.value === this.currentTheme)) {\n      const newTheme = this.themes[0].value;\n      this.logger.info('Current theme not available in new editor, switching to:', newTheme);\n      await this.switchTheme(newTheme);\n    } else {\n      // Restore current selection and re-apply the theme\n      this.dropdown.value = this.currentTheme;\n      this.logger.info('Re-applying current theme for new editor:', this.currentTheme);\n      await this.switchTheme(this.currentTheme);\n    }\n  }\n\n  /**\n   * Initializes the current theme by loading its CSS and emitting events\n   */\n  async initializeCurrentTheme() {\n    this.logger.info('Initializing current theme:', this.currentTheme);\n\n    // Emit that theme loading started\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\n      theme: this.currentTheme\n    });\n\n    try {\n      await this.loadThemeCSS(this.currentTheme);\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\n\n      // Emit that theme is ready for use\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: this.currentTheme\n      });\n    } catch (error) {\n      this.logger.warn('Failed to load current theme CSS:', error);\n\n      // Emit error but fallback to default\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\n        theme: 'darcula', // fallback\n        error: error.message\n      });\n    }\n  }\n\n  /**\n   * Creates the theme switcher dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.theme-switcher');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\n    this.dropdown.title = 'Switch editor theme';\n\n    // Add theme options\n    this.populateThemes();\n\n    // Set default theme\n    this.dropdown.value = this.currentTheme;\n\n    this.dropdown.addEventListener('change', async (e) => {\n      const themeValue = e.target.value;\n      this.logger.info('Theme dropdown changed to:', themeValue);\n      this.logger.info('Current theme is:', this.currentTheme);\n\n      if (themeValue && themeValue !== this.currentTheme) {\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\n        await this.switchTheme(themeValue);\n      } else {\n        this.logger.warn('Theme value is empty or same as current theme');\n      }\n    });\n\n    // Insert after the examples dropdown if it exists, otherwise after preview button\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\n    const previewLabel = this.container.querySelector('label.btn');\n\n    if (examplesDropdown) {\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\n    } else if (previewLabel) {\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\n    } else {\n      this.container.appendChild(this.dropdown);\n    }\n  }\n\n  /**\n   * Populates the dropdown with available themes\n   */\n  populateThemes() {\n    // Clear existing options\n    this.dropdown.innerHTML = '';\n\n    // Add theme options\n    this.themes.forEach(theme => {\n      const option = document.createElement('option');\n      option.value = theme.value;\n      option.textContent = theme.label;\n      this.dropdown.appendChild(option);\n    });\n  }\n\n  /**\n   * Loads an ACE theme - themes are already loaded via CDN scripts\n   * @param {string} themeName - The theme name to load\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\n   */\n  async loadThemeCSS(themeName) {\n    // ACE themes are loaded via script tags in HTML, so we just need to verify they're available\n    this.logger.info('ACE theme loading for:', themeName);\n    \n    // Check if ACE is available\n    if (typeof ace === 'undefined') {\n      throw new Error('ACE editor not loaded');\n    }\n\n    // Check if the theme is available in ACE\n    try {\n      // Try to access the theme to see if it's loaded\n      const themePath = `ace/theme/${themeName}`;\n      if (ace.require && ace.require(themePath)) {\n        this.logger.info('ACE theme is available:', themeName);\n        return;\n      }\n    } catch (error) {\n      this.logger.warn('ACE theme may not be loaded:', themeName, error);\n    }\n\n    // For now, we'll assume themes are loaded via CDN scripts\n    // In a production app, you might want to dynamically load theme scripts\n    this.logger.info('Assuming ACE theme is available:', themeName);\n    return Promise.resolve();\n  }\n\n  /**\n   * Loads saved theme from localStorage\n   * @returns {string|null} Saved theme name or null if not found\n   */\n  loadSavedTheme() {\n    try {\n      const savedTheme = localStorage.getItem(this.options.storageKey);\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\n        return savedTheme;\n      }\n    } catch (error) {\n      this.logger.warn('Failed to load saved theme:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Saves current theme to localStorage\n   * @param {string} themeName - Theme name to save\n   */\n  saveTheme(themeName) {\n    try {\n      localStorage.setItem(this.options.storageKey, themeName);\n      this.logger.info('Saved theme to storage:', themeName);\n    } catch (error) {\n      this.logger.warn('Failed to save theme:', error);\n    }\n  }\n\n  /**\n   * Switches to a new theme\n   * @param {string} themeName - The theme name to switch to\n   */\n  async switchTheme(themeName) {\n    const oldTheme = this.currentTheme;\n    this.currentTheme = themeName;\n\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\n\n    // Update dropdown value\n    this.dropdown.value = themeName;\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\n\n    try {\n      // Load theme CSS first\n      await this.loadThemeCSS(themeName);\n\n      // Save theme for persistence\n      this.saveTheme(themeName);\n\n      // Emit theme change event for editor adapters to listen to\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\n        theme: themeName,\n        oldTheme: oldTheme\n      });\n      this.logger.info('Theme change event emitted successfully');\n    } catch (error) {\n      this.logger.error('Failed to switch theme:', error);\n      // Revert dropdown to old theme\n      this.dropdown.value = oldTheme;\n      this.currentTheme = oldTheme;\n    }\n  }\n\n  /**\n   * Gets the current theme\n   * @returns {string} Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Sets the current theme programmatically\n   * @param {string} themeName - The theme name to set\n   */\n  setTheme(themeName) {\n    if (this.themes.find(t => t.value === themeName)) {\n      this.switchTheme(themeName);\n    }\n  }\n\n  /**\n   * Adds a new theme to the list\n   * @param {string} value - Theme value/name\n   * @param {string} label - Display label for the theme\n   */\n  addTheme(value, label) {\n    // Check if theme already exists\n    if (!this.themes.find(t => t.value === value)) {\n      this.themes.push({ value, label });\n      this.populateThemes();\n      this.dropdown.value = this.currentTheme; // Restore selection\n    }\n  }\n\n  /**\n   * Destroys the theme switcher\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Editor switcher UI component\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class EditorSwitcher {\n  /**\n   * Creates a new EditorSwitcher instance\n   * @param {HTMLElement} container - The container element for the dropdown\n   * @param {Object} eventEmitter - The event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {string} [options.defaultEditor='ace'] - Default editor name\n   * @param {boolean} [options.debug=true] - Enable debug logging\n   */\n  constructor(container, eventEmitter, options = {}) {\n    this.container = container;\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      defaultEditor: 'ace',\n      debug: true,\n      storageKey: 'sandbox_current_editor',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'EditorSwitcher'\n    });\n\n    // Define available editors\n    this.editors = [\n      { value: 'ace', label: '🎯 ACE Editor', available: () => typeof ace !== 'undefined' },\n      { value: 'codemirror', label: '📝 CodeMirror', available: () => typeof CodeMirror !== 'undefined' },\n      { value: 'textarea', label: '📄 Textarea', available: () => true } // Always available\n    ];\n\n    // Load saved editor or use default\n    this.currentEditor = this.loadSavedEditor() || this.options.defaultEditor;\n    this.logger.info('Initializing editor switcher with editor:', this.currentEditor);\n\n    this.createDropdown();\n  }\n\n  /**\n   * Creates the editor switcher dropdown HTML structure\n   */\n  createDropdown() {\n    // Check if dropdown already exists in container\n    const existingDropdown = this.container.querySelector('.editor-switcher');\n    if (existingDropdown) {\n      existingDropdown.remove();\n    }\n\n    this.dropdown = document.createElement('select');\n    this.dropdown.className = 'editor-switcher examples-dropdown'; // Reuse examples dropdown styling\n    this.dropdown.title = 'Switch editor (ACE, CodeMirror, Textarea)';\n\n    // Add editor options\n    this.populateEditors();\n\n    // Set current editor\n    this.dropdown.value = this.currentEditor;\n\n    this.dropdown.addEventListener('change', async (e) => {\n      const editorValue = e.target.value;\n      this.logger.info('Editor dropdown changed to:', editorValue);\n      this.logger.info('Current editor is:', this.currentEditor);\n\n      if (editorValue && editorValue !== this.currentEditor) {\n        this.logger.info('Switching editor from', this.currentEditor, 'to', editorValue);\n        await this.switchEditor(editorValue);\n      } else {\n        this.logger.warn('Editor value is empty or same as current editor');\n      }\n    });\n\n    // Insert into the editor controls container\n    this.container.appendChild(this.dropdown);\n  }\n\n  /**\n   * Populates the dropdown with available editors\n   */\n  populateEditors() {\n    // Clear existing options\n    this.dropdown.innerHTML = '';\n\n    // Add editor options, filtering by availability\n    this.editors.forEach(editor => {\n      if (editor.available()) {\n        const option = document.createElement('option');\n        option.value = editor.value;\n        option.textContent = editor.label;\n        this.dropdown.appendChild(option);\n      } else {\n        this.logger.debug('Editor not available:', editor.value);\n      }\n    });\n\n    // If current editor is not available, fallback to first available\n    const availableEditors = this.editors.filter(e => e.available());\n    if (availableEditors.length > 0 && !this.editors.find(e => e.value === this.currentEditor)?.available()) {\n      this.logger.warn('Current editor not available, falling back to:', availableEditors[0].value);\n      this.currentEditor = availableEditors[0].value;\n      this.dropdown.value = this.currentEditor;\n    }\n  }\n\n  /**\n   * Loads saved editor from localStorage\n   * @returns {string|null} Saved editor name or null if not found\n   */\n  loadSavedEditor() {\n    try {\n      const savedEditor = localStorage.getItem(this.options.storageKey);\n      if (savedEditor && this.editors.find(e => e.value === savedEditor && e.available())) {\n        this.logger.info('Loaded saved editor from storage:', savedEditor);\n        return savedEditor;\n      }\n    } catch (error) {\n      this.logger.warn('Failed to load saved editor:', error);\n    }\n    return null;\n  }\n\n  /**\n   * Saves current editor to localStorage\n   * @param {string} editorName - Editor name to save\n   */\n  saveEditor(editorName) {\n    try {\n      localStorage.setItem(this.options.storageKey, editorName);\n      this.logger.info('Saved editor to storage:', editorName);\n    } catch (error) {\n      this.logger.warn('Failed to save editor:', error);\n    }\n  }\n\n  /**\n   * Switches to a new editor\n   * @param {string} editorName - The editor name to switch to\n   */\n  async switchEditor(editorName) {\n    const oldEditor = this.currentEditor;\n    this.currentEditor = editorName;\n\n    this.logger.info('switchEditor called: changing from', oldEditor, 'to', editorName);\n\n    // Update dropdown value\n    this.dropdown.value = editorName;\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\n\n    try {\n      // Save editor for persistence\n      this.saveEditor(editorName);\n\n      // Emit editor change event for controller to listen to\n      this.logger.info('Emitting editor change event with data:', { editor: editorName, oldEditor: oldEditor });\n      this.eventEmitter.emit(EVENTS.EDITOR_CHANGE, {\n        editor: editorName,\n        oldEditor: oldEditor\n      });\n      this.logger.info('Editor change event emitted successfully');\n    } catch (error) {\n      this.logger.error('Failed to switch editor:', error);\n      // Revert dropdown to old editor\n      this.dropdown.value = oldEditor;\n      this.currentEditor = oldEditor;\n    }\n  }\n\n  /**\n   * Gets the current editor\n   * @returns {string} Current editor name\n   */\n  getCurrentEditor() {\n    return this.currentEditor;\n  }\n\n  /**\n   * Sets the current editor programmatically\n   * @param {string} editorName - The editor name to set\n   */\n  setEditor(editorName) {\n    if (this.editors.find(e => e.value === editorName && e.available())) {\n      this.switchEditor(editorName);\n    }\n  }\n\n  /**\n   * Refreshes the editor list (useful when new editors become available)\n   */\n  refreshEditors() {\n    this.logger.info('Refreshing editor list');\n    this.populateEditors();\n    this.dropdown.value = this.currentEditor;\n  }\n\n  /**\n   * Destroys the editor switcher\n   */\n  destroy() {\n    if (this.dropdown && this.dropdown.parentNode) {\n      this.dropdown.parentNode.removeChild(this.dropdown);\n    }\n  }\n}\n","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Fullscreen manager for toggling between editor and console views\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class FullscreenManager {\n  /**\n   * Creates a new FullscreenManager instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'FullscreenManager'\n    });\n\n    this.currentMode = null; // null, 'editor', 'console'\n    this.appElement = null;\n    this.elements = {};\n    this.isChanging = false; // Recursion guard\n\n    this.setupEventListeners();\n  }\n\n  /**\n   * Initializes the fullscreen manager with DOM elements\n   * @param {Object} elements - DOM elements\n   * @param {HTMLElement} elements.app - Main app container\n   * @param {HTMLElement} elements.fullscreenEditor - Editor fullscreen button\n   * @param {HTMLElement} elements.fullscreenConsole - Console fullscreen button\n   */\n  init(elements) {\n    this.appElement = elements.app;\n    this.elements = elements;\n\n    this.logger.info('Fullscreen manager initialized');\n\n    // Add click listeners to fullscreen buttons\n    if (this.elements.fullscreenEditor) {\n      this.elements.fullscreenEditor.addEventListener('click', () => {\n        this.toggleFullscreen('editor');\n      });\n    }\n\n    if (this.elements.fullscreenConsole) {\n      this.elements.fullscreenConsole.addEventListener('click', () => {\n        this.toggleFullscreen('console');\n      });\n    }\n\n    // Add keyboard shortcut (F11 or Escape)\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'F11') {\n        e.preventDefault();\n        this.toggleFullscreen();\n      } else if (e.key === 'Escape' && this.currentMode) {\n        this.exitFullscreen();\n      }\n    });\n  }\n\n  /**\n   * Sets up event listeners for fullscreen events\n   */\n  setupEventListeners() {\n    this.eventEmitter.on(EVENTS.FULLSCREEN_TOGGLE, (mode) => {\n      this.toggleFullscreen(mode);\n    });\n\n    this.eventEmitter.on(EVENTS.FULLSCREEN_EXIT, () => {\n      this.exitFullscreen();\n    });\n  }\n\n  /**\n   * Toggles fullscreen mode for specified pane\n   * @param {string} [mode] - 'editor', 'console', or null to cycle\n   */\n  toggleFullscreen(mode) {\n    if (!this.appElement) {\n      this.logger.warn('App element not initialized');\n      return;\n    }\n\n    // If no mode specified, cycle through modes\n    if (!mode) {\n      if (this.currentMode === null) {\n        mode = 'editor';\n      } else if (this.currentMode === 'editor') {\n        mode = 'console';\n      } else {\n        mode = null; // exit fullscreen\n      }\n    }\n\n    // If same mode is clicked, exit fullscreen\n    if (mode === this.currentMode) {\n      mode = null;\n    }\n\n    this.setFullscreenMode(mode);\n  }\n\n  /**\n   * Sets the fullscreen mode\n   * @param {string|null} mode - 'editor', 'console', or null for normal view\n   */\n  setFullscreenMode(mode) {\n    if (!this.appElement) return;\n\n    // Prevent recursion: if we're already changing or in the target mode, don't do anything\n    if (this.isChanging || mode === this.currentMode) return;\n\n    this.isChanging = true;\n    const previousMode = this.currentMode;\n\n    try {\n      // Remove all fullscreen classes\n      this.appElement.classList.remove('fullscreen-editor', 'fullscreen-console');\n\n      // Update button states\n      this.updateButtonStates(null);\n\n      if (mode) {\n        // Add appropriate fullscreen class\n        this.appElement.classList.add(`fullscreen-${mode}`);\n        this.updateButtonStates(mode);\n\n        this.logger.info(`Entering fullscreen mode: ${mode}`);\n        this.eventEmitter.emit(`FULLSCREEN_${mode.toUpperCase()}`, { mode });\n      } else if (previousMode) {\n        // Only emit exit event if we were actually in fullscreen before\n        this.logger.info('Exiting fullscreen mode');\n        this.eventEmitter.emit(EVENTS.FULLSCREEN_EXIT, { previousMode });\n      }\n\n      this.currentMode = mode;\n    } finally {\n      // Always clear the changing flag\n      this.isChanging = false;\n    }\n  }\n\n  /**\n   * Updates button states based on current mode\n   * @param {string|null} activeMode - Current active mode\n   */\n  updateButtonStates(activeMode) {\n    // Update editor button\n    if (this.elements.fullscreenEditor) {\n      if (activeMode === 'editor') {\n        this.elements.fullscreenEditor.textContent = '◱'; // Exit symbol\n        this.elements.fullscreenEditor.title = 'Exit Fullscreen';\n      } else {\n        this.elements.fullscreenEditor.textContent = '⛶'; // Fullscreen symbol\n        this.elements.fullscreenEditor.title = 'Fullscreen Editor';\n      }\n    }\n\n    // Update console button\n    if (this.elements.fullscreenConsole) {\n      if (activeMode === 'console') {\n        this.elements.fullscreenConsole.textContent = '◱'; // Exit symbol\n        this.elements.fullscreenConsole.title = 'Exit Fullscreen';\n      } else {\n        this.elements.fullscreenConsole.textContent = '⛶'; // Fullscreen symbol\n        this.elements.fullscreenConsole.title = 'Fullscreen Console';\n      }\n    }\n  }\n\n  /**\n   * Exits fullscreen mode\n   */\n  exitFullscreen() {\n    this.setFullscreenMode(null);\n  }\n\n  /**\n   * Gets the current fullscreen mode\n   * @returns {string|null} Current mode or null\n   */\n  getCurrentMode() {\n    return this.currentMode;\n  }\n\n  /**\n   * Checks if currently in fullscreen\n   * @returns {boolean} True if in fullscreen mode\n   */\n  isFullscreen() {\n    return this.currentMode !== null;\n  }\n\n  /**\n   * Destroys the fullscreen manager\n   */\n  destroy() {\n    this.exitFullscreen();\n    this.logger.info('Fullscreen manager destroyed');\n  }\n}","import { Logger } from '../core/logger.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Library Manager - Handles CDN library loading with user-controlled allowlists\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class LibraryManager {\n  /**\n   * Creates a new LibraryManager instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.storageKey='sandbox_libraries'] - localStorage key\n   */\n  constructor(eventEmitter, options = {}) {\n    this.eventEmitter = eventEmitter;\n    this.options = {\n      debug: false,\n      storageKey: 'sandbox_libraries',\n      allowlistKey: 'sandbox_allowed_domains',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'LibraryManager'\n    });\n\n    // Force a log message to test if logging is working\n    console.log('🔧 LibraryManager created with debug:', this.options.debug);\n\n    // Default trusted CDN domains\n    this.defaultDomains = [\n      'cdnjs.cloudflare.com',\n      'unpkg.com',\n      'jsdelivr.net',\n      'code.jquery.com',\n      'stackpath.bootstrapcdn.com'\n    ];\n\n    this.libraries = [];\n    this.allowedDomains = [];\n    this.libraryCache = new Map(); // Cache for fetched library content\n\n    this.loadFromStorage();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for library management\n   */\n  setupEventListeners() {\n    this.eventEmitter.on(EVENTS.LIBRARY_ADD, (data) => {\n      this.addLibrary(data.url, data.name);\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVE, (data) => {\n      this.removeLibrary(data.id);\n    });\n\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\n      this.addDomain(data.domain);\n    });\n  }\n\n  /**\n   * Loads libraries and allowed domains from localStorage\n   */\n  loadFromStorage() {\n    this.logger.debug('Loading library data from localStorage...');\n\n    try {\n      // Load libraries\n      this.logger.debug(`Checking localStorage for key: ${this.options.storageKey}`);\n      const librariesData = localStorage.getItem(this.options.storageKey);\n      this.libraries = librariesData ? JSON.parse(librariesData) : [];\n      this.logger.debug(`Loaded ${this.libraries.length} libraries from storage`);\n\n      // Load allowed domains (merge with defaults)\n      this.logger.debug(`Checking localStorage for key: ${this.options.allowlistKey}`);\n      const domainsData = localStorage.getItem(this.options.allowlistKey);\n      const savedDomains = domainsData ? JSON.parse(domainsData) : [];\n      this.allowedDomains = [...new Set([...this.defaultDomains, ...savedDomains])];\n\n      this.logger.debug(`Merged domains - defaults: ${this.defaultDomains.length}, saved: ${savedDomains.length}, total: ${this.allowedDomains.length}`);\n      this.logger.info(`Storage load complete: ${this.libraries.length} libraries, ${this.allowedDomains.length} allowed domains`);\n\n      // Log library names for debugging\n      if (this.libraries.length > 0) {\n        this.logger.debug('Loaded libraries:', this.libraries.map(lib => lib.name).join(', '));\n      }\n    } catch (error) {\n      this.logger.error('Failed to load from storage:', error);\n      this.logger.warn('Falling back to empty state with default domains');\n      this.libraries = [];\n      this.allowedDomains = [...this.defaultDomains];\n    }\n  }\n\n  /**\n   * Saves libraries to localStorage\n   */\n  saveLibraries() {\n    this.logger.debug(`Saving ${this.libraries.length} libraries to localStorage...`);\n    try {\n      const serialized = JSON.stringify(this.libraries);\n      localStorage.setItem(this.options.storageKey, serialized);\n      this.logger.debug(`Libraries saved successfully (${serialized.length} chars)`);\n    } catch (error) {\n      this.logger.error('Failed to save libraries to localStorage:', error);\n      if (error.name === 'QuotaExceededError') {\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\n      }\n    }\n  }\n\n  /**\n   * Saves allowed domains to localStorage\n   */\n  saveDomains() {\n    // Only save non-default domains to avoid bloating storage\n    const customDomains = this.allowedDomains.filter(\n      domain => !this.defaultDomains.includes(domain)\n    );\n\n    this.logger.debug(`Saving ${customDomains.length} custom domains to localStorage...`);\n    try {\n      const serialized = JSON.stringify(customDomains);\n      localStorage.setItem(this.options.allowlistKey, serialized);\n      this.logger.debug(`Custom domains saved successfully: [${customDomains.join(', ')}]`);\n    } catch (error) {\n      this.logger.error('Failed to save domains to localStorage:', error);\n      if (error.name === 'QuotaExceededError') {\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\n      }\n    }\n  }\n\n  /**\n   * Generates a unique ID for a library\n   * @returns {string} Unique identifier\n   */\n  generateId() {\n    return 'lib_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  /**\n   * Extracts domain from URL\n   * @param {string} url - The URL to extract domain from\n   * @returns {string|null} Domain or null if invalid\n   */\n  extractDomain(url) {\n    try {\n      const urlObj = new URL(url);\n      return urlObj.hostname;\n    } catch (error) {\n      this.logger.warn('Invalid URL provided:', url);\n      return null;\n    }\n  }\n\n  /**\n   * Extracts library name from URL (best guess)\n   * @param {string} url - The library URL\n   * @returns {string} Guessed library name\n   */\n  guessLibraryName(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n\n      // Extract filename without extension\n      const filename = pathname.split('/').pop();\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\n\n      // Common library name patterns\n      const patterns = [\n        /^(.+?)[-.][\\d]/,  // name-version or name.version\n        /^(.+?)\\.min$/,    // name.min\n        /^(.+?)$/          // fallback to full name\n      ];\n\n      for (const pattern of patterns) {\n        const match = nameWithoutExt.match(pattern);\n        if (match && match[1]) {\n          return match[1].charAt(0).toUpperCase() + match[1].slice(1);\n        }\n      }\n\n      return nameWithoutExt || 'Unknown Library';\n    } catch (error) {\n      return 'Unknown Library';\n    }\n  }\n\n  /**\n   * Extracts version from URL (best guess)\n   * @param {string} url - The library URL\n   * @returns {string|null} Version string or null if not found\n   */\n  extractVersionFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n\n      // Extract filename without extension\n      const filename = pathname.split('/').pop();\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\n\n      // Version extraction patterns\n      const versionPatterns = [\n        /[-.](\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)/,  // semantic version (e.g., jquery-3.6.0.min.js)\n        /[-.](\\d+\\.\\d+\\.\\d+)/,                              // x.y.z version\n        /[-.](\\d+\\.\\d+)/,                                   // x.y version\n        /\\/(\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)\\//  // version in path (e.g., /3.6.0/)\n      ];\n\n      for (const pattern of versionPatterns) {\n        const match = url.match(pattern) || nameWithoutExt.match(pattern);\n        if (match && match[1]) {\n          return match[1];\n        }\n      }\n\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  /**\n   * Checks if a domain is in the allowed list\n   * @param {string} domain - Domain to check\n   * @returns {boolean} True if domain is allowed\n   */\n  isDomainAllowed(domain) {\n    return this.allowedDomains.includes(domain);\n  }\n\n  /**\n   * Validates a library URL\n   * @param {string} url - URL to validate\n   * @returns {Object} Validation result with status and domain\n   */\n  validateLibraryUrl(url) {\n    if (!url || typeof url !== 'string') {\n      return { valid: false, error: 'URL is required' };\n    }\n\n    // Basic URL validation\n    const domain = this.extractDomain(url);\n    if (!domain) {\n      return { valid: false, error: 'Invalid URL format' };\n    }\n\n    // Check if URL points to a JavaScript file\n    if (!url.match(/\\.js(\\?.*)?$/i)) {\n      return { valid: false, error: 'URL must point to a JavaScript file (.js)' };\n    }\n\n    // Check if domain is allowed\n    const domainAllowed = this.isDomainAllowed(domain);\n\n    return {\n      valid: true,\n      domain,\n      domainAllowed,\n      needsDomainApproval: !domainAllowed\n    };\n  }\n\n  /**\n   * Adds a library to the collection\n   * @param {string} url - Library URL\n   * @param {string} [name] - Optional library name (will be guessed if not provided)\n   * @returns {Object} Result object with success status\n   */\n  addLibrary(url, name = null) {\n    const validation = this.validateLibraryUrl(url);\n\n    if (!validation.valid) {\n      this.logger.warn('Library validation failed:', validation.error);\n      return { success: false, error: validation.error };\n    }\n\n    // Check if library already exists\n    const existing = this.libraries.find(lib => lib.url === url);\n    if (existing) {\n      this.logger.warn('Library already exists:', url);\n      return { success: false, error: 'Library already added' };\n    }\n\n    // Check domain approval\n    if (validation.needsDomainApproval) {\n      this.logger.info('Domain approval needed for:', validation.domain);\n      this.eventEmitter.emit(EVENTS.DOMAIN_TRUST_REQUEST, {\n        domain: validation.domain,\n        url,\n        name: name || this.guessLibraryName(url)\n      });\n      return { success: false, needsApproval: true, domain: validation.domain };\n    }\n\n    // Add the library\n    const library = {\n      id: this.generateId(),\n      name: name || this.guessLibraryName(url),\n      url: url.trim(),\n      domain: validation.domain,\n      addedAt: new Date().toISOString()\n    };\n\n    this.libraries.push(library);\n    this.saveLibraries();\n\n    this.logger.info('Library added:', library.name);\n    this.eventEmitter.emit(EVENTS.LIBRARY_ADDED, { library });\n\n    return { success: true, library };\n  }\n\n  /**\n   * Removes a library by ID\n   * @param {string} id - Library ID to remove\n   * @returns {boolean} True if library was removed\n   */\n  removeLibrary(id) {\n    const index = this.libraries.findIndex(lib => lib.id === id);\n    if (index === -1) {\n      this.logger.warn('Library not found for removal:', id);\n      return false;\n    }\n\n    const removed = this.libraries.splice(index, 1)[0];\n    this.saveLibraries();\n\n    this.logger.info('Library removed:', removed.name);\n    this.eventEmitter.emit(EVENTS.LIBRARY_REMOVED, { library: removed });\n\n    return true;\n  }\n\n  /**\n   * Adds a domain to the allowed list\n   * @param {string} domain - Domain to add\n   * @returns {boolean} True if domain was added\n   */\n  addDomain(domain) {\n    if (!domain || this.allowedDomains.includes(domain)) {\n      return false;\n    }\n\n    this.allowedDomains.push(domain);\n    this.saveDomains();\n\n    this.logger.info('Domain added to allowlist:', domain);\n    this.eventEmitter.emit(EVENTS.DOMAIN_ADDED, { domain });\n\n    return true;\n  }\n\n  /**\n   * Removes a domain from the allowed list (if not default)\n   * @param {string} domain - Domain to remove\n   * @returns {boolean} True if domain was removed\n   */\n  removeDomain(domain) {\n    if (this.defaultDomains.includes(domain)) {\n      this.logger.warn('Cannot remove default domain:', domain);\n      return false;\n    }\n\n    const index = this.allowedDomains.indexOf(domain);\n    if (index === -1) {\n      return false;\n    }\n\n    this.allowedDomains.splice(index, 1);\n    this.saveDomains();\n\n    this.logger.info('Domain removed from allowlist:', domain);\n    this.eventEmitter.emit(EVENTS.DOMAIN_REMOVED, { domain });\n\n    return true;\n  }\n\n  /**\n   * Gets all libraries\n   * @returns {Array} Array of library objects\n   */\n  getLibraries() {\n    return [...this.libraries];\n  }\n\n  /**\n   * Gets all allowed domains\n   * @returns {Array} Array of allowed domains\n   */\n  getAllowedDomains() {\n    return [...this.allowedDomains];\n  }\n\n  /**\n   * Fetches library content and generates inline script tags\n   * @returns {Promise<string>} HTML script tags with inline content\n   */\n  async generateScriptTags() {\n    if (this.libraries.length === 0) {\n      this.logger.debug('No libraries to generate scripts for');\n      return '';\n    }\n\n    this.logger.info(`Fetching content for ${this.libraries.length} libraries...`);\n    const scripts = [];\n\n    for (const lib of this.libraries) {\n      try {\n        let content;\n\n        // Check cache first\n        if (this.libraryCache.has(lib.url)) {\n          this.logger.debug(`Using cached content for: ${lib.name}`);\n          content = this.libraryCache.get(lib.url);\n        } else {\n          this.logger.debug(`Fetching library: ${lib.name} from ${lib.url}`);\n\n          const response = await fetch(lib.url);\n          if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n          }\n\n          content = await response.text();\n          this.logger.debug(`Fetched ${lib.name}: ${content.length} characters`);\n\n          // Cache the content\n          this.libraryCache.set(lib.url, content);\n        }\n\n        // Create clean inline script with library content\n        scripts.push(`  <script data-library=\"${lib.name}\">\n/* Library: ${lib.name} */\n/* Source: ${lib.url} */\n/* Cached: ${new Date().toISOString()} */\n${content}\n</script>`);\n\n        this.logger.info(`✅ Successfully loaded library: ${lib.name}`);\n      } catch (error) {\n        this.logger.error(`❌ Failed to fetch library ${lib.name}:`, error.message);\n\n        // Add error placeholder script\n        scripts.push(`  <script data-library=\"${lib.name}\">\n/* Library: ${lib.name} - FAILED TO LOAD */\n/* Error: ${error.message} */\n/* URL: ${lib.url} */\nconsole.error('Failed to load library ${lib.name}: ${error.message}');\n</script>`);\n      }\n    }\n\n    const result = scripts.join('\\n');\n\n    // Enhanced logging for library injection\n    if (this.libraries.length > 0) {\n      const libraryNames = this.libraries.map(lib => lib.name).join(', ');\n      this.logger.info(`📚 Injecting ${this.libraries.length} libraries into sandbox: ${libraryNames}`);\n\n      // Log each library with detailed info including version detection\n      this.libraries.forEach(lib => {\n        const scriptSize = scripts.find(s => s.includes(`data-library=\"${lib.name}\"`))?.length || 0;\n        const version = this.extractVersionFromUrl(lib.url);\n        const versionInfo = version ? ` v${version}` : '';\n        this.logger.debug(`  → ${lib.name}${versionInfo}: ${(scriptSize / 1024).toFixed(1)}KB from ${lib.url}`);\n      });\n\n      this.logger.info(`📦 Total script injection size: ${(result.length / 1024).toFixed(1)}KB`);\n    } else {\n      this.logger.debug('No libraries to inject into sandbox');\n    }\n\n    return result;\n  }\n\n  /**\n   * Generates dynamic CSP policy with allowed domains\n   * @returns {string} CSP policy string\n   */\n  generateCSP() {\n    const scriptSrc = [\n      \"'self'\",\n      \"'unsafe-inline'\",\n      \"'unsafe-eval'\",\n      ...this.allowedDomains.map(domain => `https://${domain}`)\n    ].join(' ');\n\n    return `default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; script-src ${scriptSrc}; connect-src 'none';`;\n  }\n\n  /**\n   * Gets library statistics\n   * @returns {Object} Statistics object\n   */\n  getStats() {\n    return {\n      libraryCount: this.libraries.length,\n      domainCount: this.allowedDomains.length,\n      customDomainCount: this.allowedDomains.length - this.defaultDomains.length\n    };\n  }\n\n  /**\n   * Clears all libraries and custom domains\n   */\n  clear() {\n    this.libraries = [];\n    this.allowedDomains = [...this.defaultDomains];\n\n    localStorage.removeItem(this.options.storageKey);\n    localStorage.removeItem(this.options.allowlistKey);\n\n    this.logger.info('All libraries and custom domains cleared');\n    this.eventEmitter.emit(EVENTS.LIBRARIES_CLEARED);\n  }\n\n  /**\n   * Test method to verify logging is working\n   */\n  testLogging() {\n    console.log('🧪 LibraryManager test logging - debug enabled:', this.options.debug);\n    this.logger.debug('This is a debug message');\n    this.logger.info('This is an info message');\n    this.logger.warn('This is a warn message');\n    this.logger.error('This is an error message');\n  }\n\n  /**\n   * Destroys the library manager\n   */\n  destroy() {\n    this.libraries = [];\n    this.allowedDomains = [];\n    this.logger.info('Library manager destroyed');\n  }\n}","import { Logger } from '../core/logger.js';\n\n/**\n * Base Dialog - Reusable dialog foundation with neon glow effects\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class BaseDialog {\n  /**\n   * Creates a new BaseDialog instance\n   * @param {Object} options - Configuration options\n   * @param {string} options.title - Dialog title\n   * @param {string} [options.className=''] - Additional CSS classes\n   * @param {boolean} [options.modal=true] - Whether dialog is modal\n   * @param {boolean} [options.closeOnBackdrop=true] - Close on backdrop click\n   * @param {boolean} [options.closeOnEscape=true] - Close on Escape key\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logPrefix='BaseDialog'] - Logger prefix\n   */\n  constructor(options = {}) {\n    this.options = {\n      title: 'Dialog',\n      className: '',\n      modal: true,\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      debug: false,\n      logPrefix: 'BaseDialog',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: this.options.logPrefix\n    });\n\n    this.dialog = null;\n    this.content = null;\n    this.isOpen = false;\n    this.closeButton = null;\n\n    this.logger.debug('BaseDialog instance created with options:', this.options);\n    this.createDialog();\n  }\n\n  /**\n   * Creates the base dialog structure\n   */\n  createDialog() {\n    this.logger.debug('Creating dialog structure...');\n\n    // Create dialog element\n    this.dialog = document.createElement('dialog');\n    this.dialog.className = `base-dialog ${this.options.className}`.trim();\n\n    // Create dialog content wrapper\n    this.content = document.createElement('div');\n    this.content.className = 'dialog-content';\n\n    // Create header\n    const header = document.createElement('header');\n    header.className = 'dialog-header';\n    header.innerHTML = `\n      <h3 class=\"dialog-title\">${this.options.title}</h3>\n      <button class=\"close-btn\" title=\"Close\">×</button>\n    `;\n\n    // Cache close button reference\n    this.closeButton = header.querySelector('.close-btn');\n\n    // Create body container (to be populated by subclasses)\n    const body = document.createElement('div');\n    body.className = 'dialog-body';\n\n    // Assemble dialog\n    this.content.appendChild(header);\n    this.content.appendChild(body);\n    this.dialog.appendChild(this.content);\n\n    // Add to document\n    document.body.appendChild(this.dialog);\n\n    this.logger.debug('Dialog structure created and added to DOM');\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up base event listeners\n   */\n  setupEventListeners() {\n    this.logger.debug('Setting up base event listeners...');\n\n    // Close button\n    if (this.closeButton) {\n      this.closeButton.addEventListener('click', () => {\n        this.logger.debug('Close button clicked');\n        this.close();\n      });\n    }\n\n    // Backdrop click\n    if (this.options.closeOnBackdrop) {\n      this.dialog.addEventListener('click', (e) => {\n        if (e.target === this.dialog) {\n          this.logger.debug('Backdrop clicked, closing dialog');\n          this.close();\n        }\n      });\n    }\n\n    // Escape key\n    if (this.options.closeOnEscape) {\n      this.dialog.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape') {\n          this.logger.debug('Escape key pressed, closing dialog');\n          this.close();\n        }\n      });\n    }\n\n    this.logger.debug('Base event listeners configured');\n  }\n\n  /**\n   * Gets the dialog body element for content injection\n   * @returns {HTMLElement} The dialog body element\n   */\n  getBody() {\n    return this.content.querySelector('.dialog-body');\n  }\n\n  /**\n   * Sets the dialog title\n   * @param {string} title - New title\n   */\n  setTitle(title) {\n    this.logger.debug(`Setting dialog title to: \"${title}\"`);\n    const titleElement = this.content.querySelector('.dialog-title');\n    if (titleElement) {\n      titleElement.textContent = title;\n      this.options.title = title;\n    }\n  }\n\n  /**\n   * Opens the dialog\n   * @param {Object} [options={}] - Open options\n   * @param {boolean} [options.focus=true] - Whether to focus the dialog\n   */\n  open(options = {}) {\n    const { focus = true } = options;\n\n    if (this.isOpen) {\n      this.logger.warn('Dialog is already open');\n      return;\n    }\n\n    this.logger.info('Opening dialog...');\n\n    // Call pre-open hook\n    this.onBeforeOpen();\n\n    // Show dialog\n    if (this.options.modal) {\n      this.dialog.showModal();\n    } else {\n      this.dialog.show();\n    }\n\n    this.isOpen = true;\n\n    // Focus management\n    if (focus) {\n      setTimeout(() => {\n        this.dialog.focus();\n        this.onFocus();\n      }, 100);\n    }\n\n    // Call post-open hook\n    this.onAfterOpen();\n\n    this.logger.info('Dialog opened successfully');\n  }\n\n  /**\n   * Closes the dialog\n   */\n  close() {\n    if (!this.isOpen) {\n      this.logger.warn('Dialog is already closed');\n      return;\n    }\n\n    this.logger.info('Closing dialog...');\n\n    // Call pre-close hook\n    this.onBeforeClose();\n\n    this.dialog.close();\n    this.isOpen = false;\n\n    // Call post-close hook\n    this.onAfterClose();\n\n    this.logger.info('Dialog closed successfully');\n  }\n\n  /**\n   * Toggles the dialog open/closed state\n   */\n  toggle() {\n    this.logger.debug('Toggling dialog state');\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Checks if dialog is currently open\n   * @returns {boolean} True if dialog is open\n   */\n  isDialogOpen() {\n    return this.isOpen;\n  }\n\n  /**\n   * Adds content to the dialog body\n   * @param {string|HTMLElement} content - Content to add\n   */\n  setContent(content) {\n    this.logger.debug('Setting dialog content...');\n    const body = this.getBody();\n\n    if (typeof content === 'string') {\n      body.innerHTML = content;\n    } else if (content instanceof HTMLElement) {\n      body.innerHTML = '';\n      body.appendChild(content);\n    }\n\n    this.logger.debug('Dialog content updated');\n  }\n\n  /**\n   * Adds a CSS class to the dialog\n   * @param {string} className - Class name to add\n   */\n  addClass(className) {\n    this.logger.debug(`Adding class: ${className}`);\n    this.dialog.classList.add(className);\n  }\n\n  /**\n   * Removes a CSS class from the dialog\n   * @param {string} className - Class name to remove\n   */\n  removeClass(className) {\n    this.logger.debug(`Removing class: ${className}`);\n    this.dialog.classList.remove(className);\n  }\n\n  // Lifecycle hooks (to be overridden by subclasses)\n\n  /**\n   * Called before dialog opens\n   * Override in subclasses for custom behavior\n   */\n  onBeforeOpen() {\n    this.logger.debug('onBeforeOpen hook called');\n  }\n\n  /**\n   * Called after dialog opens\n   * Override in subclasses for custom behavior\n   */\n  onAfterOpen() {\n    this.logger.debug('onAfterOpen hook called');\n  }\n\n  /**\n   * Called when dialog receives focus\n   * Override in subclasses for custom behavior\n   */\n  onFocus() {\n    this.logger.debug('onFocus hook called');\n  }\n\n  /**\n   * Called before dialog closes\n   * Override in subclasses for custom behavior\n   */\n  onBeforeClose() {\n    this.logger.debug('onBeforeClose hook called');\n  }\n\n  /**\n   * Called after dialog closes\n   * Override in subclasses for custom behavior\n   */\n  onAfterClose() {\n    this.logger.debug('onAfterClose hook called');\n  }\n\n  /**\n   * Destroys the dialog and cleans up resources\n   */\n  destroy() {\n    this.logger.info('Destroying dialog...');\n\n    if (this.isOpen) {\n      this.close();\n    }\n\n    if (this.dialog) {\n      this.dialog.remove();\n      this.dialog = null;\n    }\n\n    this.content = null;\n    this.closeButton = null;\n    this.isOpen = false;\n\n    this.logger.info('Dialog destroyed successfully');\n  }\n}","import { BaseDialog } from '../ui/base-dialog.js';\nimport { EVENTS } from '../core/constants.js';\n\n/**\n * Library Manager Dialog - UI for managing runtime libraries\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class LibraryDialog extends BaseDialog {\n  /**\n   * Creates a new LibraryDialog instance\n   * @param {Object} eventEmitter - Event emitter instance\n   * @param {Object} libraryManager - Library manager instance\n   * @param {Object} options - Configuration options\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(eventEmitter, libraryManager, options = {}) {\n    // Call parent constructor with dialog-specific options\n    super({\n      title: 'Runtime Libraries',\n      className: 'library-dialog',\n      debug: options.debug || false,\n      logPrefix: 'LibraryDialog',\n      ...options\n    });\n\n    this.eventEmitter = eventEmitter;\n    this.libraryManager = libraryManager;\n\n    this.urlInput = null;\n    this.addBtn = null;\n    this.libraryList = null;\n\n    // Force a log message to test if logging is working\n    console.log('🔧 LibraryDialog created with debug:', this.options.debug);\n\n    this.logger.info('LibraryDialog initializing...');\n    this.createLibraryContent();\n    this.setupLibraryEventListeners();\n    this.logger.info('LibraryDialog initialization complete');\n  }\n\n  /**\n   * Creates the library-specific content for the dialog\n   */\n  createLibraryContent() {\n    this.logger.debug('Creating library-specific dialog content...');\n\n    const body = this.getBody();\n    body.innerHTML = `\n      <section class=\"current-libraries\">\n        <p class=\"descriptor\">Manage libraries loaded into the sandbox environment</p>\n        <div class=\"library-list\">\n          <div class=\"empty-state\">\n            <span class=\"empty-icon\">📚</span>\n            <p>No libraries added yet</p>\n            <small>Add a CDN URL below to get started</small>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"add-library\">\n        <h4>Add Library</h4>\n        <p class=\"descriptor\">Paste CDN URL to add a new library to your sandbox</p>\n        <div class=\"input-row\">\n          <input type=\"url\" class=\"url-input\" placeholder=\"https://cdnjs.cloudflare.com/ajax/libs/...\">\n          <button class=\"add-btn\">Add</button>\n        </div>\n        <div class=\"input-feedback\"></div>\n      </section>\n    `;\n\n    // Cache element references\n    this.urlInput = body.querySelector('.url-input');\n    this.addBtn = body.querySelector('.add-btn');\n    this.libraryList = body.querySelector('.library-list');\n\n    // Setup library-specific event listeners\n    this.addBtn.addEventListener('click', () => {\n      this.logger.debug('Add button clicked');\n      this.handleAddLibrary();\n    });\n\n    this.urlInput.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        this.logger.debug('Enter key pressed in URL input');\n        this.handleAddLibrary();\n      }\n    });\n\n    this.logger.debug('Library content created successfully');\n  }\n\n  /**\n   * Sets up library-specific event listeners\n   */\n  setupLibraryEventListeners() {\n    this.logger.debug('Setting up library event listeners...');\n\n    this.eventEmitter.on(EVENTS.LIBRARY_MANAGER_OPEN, () => {\n      this.logger.info('Received LIBRARY_MANAGER_OPEN event');\n      this.open();\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_ADDED, (data) => {\n      this.logger.info('Received LIBRARY_ADDED event for:', data?.library?.name);\n      this.refreshLibraryList();\n    });\n\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVED, (data) => {\n      this.logger.info('Received LIBRARY_REMOVED event for:', data?.library?.name);\n      this.refreshLibraryList();\n    });\n\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\n      this.logger.warn('Received DOMAIN_TRUST_REQUEST for domain:', data?.domain);\n      this.showDomainTrustDialog(data);\n    });\n\n    this.logger.debug('Library event listeners configured');\n  }\n\n  /**\n   * Called before dialog opens - prepare library content\n   */\n  onBeforeOpen() {\n    this.logger.debug('Preparing library dialog for opening...');\n    this.refreshLibraryList();\n    this.urlInput.value = '';\n    this.clearFeedback();\n  }\n\n  /**\n   * Called when dialog receives focus - focus URL input\n   */\n  onFocus() {\n    this.logger.debug('Library dialog focused, focusing URL input');\n    if (this.urlInput) {\n      this.urlInput.focus();\n    }\n  }\n\n  /**\n   * Called after dialog closes - clear feedback\n   */\n  onAfterClose() {\n    this.logger.debug('Library dialog closed, clearing feedback');\n    this.clearFeedback();\n  }\n\n  /**\n   * Handles adding a new library\n   */\n  handleAddLibrary() {\n    const url = this.urlInput.value.trim();\n    this.logger.debug('handleAddLibrary called with URL:', url);\n\n    if (!url) {\n      this.logger.warn('Add library attempted with empty URL');\n      this.showFeedback('Please enter a library URL', 'error');\n      return;\n    }\n\n    this.logger.info('Attempting to add library:', url);\n    this.showFeedback('Adding library...', 'loading');\n    this.addBtn.disabled = true;\n\n    // Attempt to add the library\n    const result = this.libraryManager.addLibrary(url);\n    this.logger.debug('Library manager result:', result);\n\n    if (result.success) {\n      this.logger.info(`Library added successfully: ${result.library.name}`);\n      this.showFeedback(`Added: ${result.library.name}`, 'success');\n      this.urlInput.value = '';\n      setTimeout(() => {\n        this.logger.debug('Clearing success feedback after timeout');\n        this.clearFeedback();\n      }, 2000);\n    } else if (result.needsApproval) {\n      this.logger.warn(`Domain approval needed for: ${result.domain}`);\n      this.showFeedback(`Waiting for domain approval: ${result.domain}`, 'warning');\n      // Dialog will be shown by domain trust request event\n    } else {\n      this.logger.error(`Failed to add library: ${result.error}`);\n      this.showFeedback(`Error: ${result.error}`, 'error');\n    }\n\n    this.addBtn.disabled = false;\n    this.logger.debug('Add library operation completed');\n  }\n\n  /**\n   * Shows domain trust confirmation dialog\n   * @param {Object} data - Domain trust data\n   */\n  showDomainTrustDialog(data) {\n    this.logger.info(`Showing domain trust dialog for: ${data.domain}`);\n\n    const confirmed = confirm(\n      `⚠️ New CDN Domain Detected\\n\\n` +\n      `The domain \"${data.domain}\" is not in your trusted list.\\n\\n` +\n      `Adding this domain will allow all scripts from:\\n` +\n      `https://${data.domain}\\n\\n` +\n      `Do you want to trust this domain?`\n    );\n\n    if (confirmed) {\n      this.logger.info(`User confirmed trust for domain: ${data.domain}`);\n      this.libraryManager.addDomain(data.domain);\n\n      // Try adding the library again\n      this.logger.debug(`Retrying library addition for: ${data.url}`);\n      const result = this.libraryManager.addLibrary(data.url, data.name);\n\n      if (result.success) {\n        this.logger.info(`Library added after domain approval: ${result.library.name}`);\n        this.showFeedback(`Added: ${result.library.name}`, 'success');\n        this.urlInput.value = '';\n        setTimeout(() => {\n          this.logger.debug('Clearing success feedback after domain approval');\n          this.clearFeedback();\n        }, 2000);\n      } else {\n        this.logger.error(`Library addition failed after domain approval: ${result.error}`);\n        this.showFeedback(`Error: ${result.error}`, 'error');\n      }\n    } else {\n      this.logger.info(`User cancelled domain trust for: ${data.domain}`);\n      this.showFeedback('Library addition cancelled', 'info');\n      setTimeout(() => {\n        this.logger.debug('Clearing cancellation feedback');\n        this.clearFeedback();\n      }, 2000);\n    }\n  }\n\n  /**\n   * Refreshes the library list display\n   */\n  refreshLibraryList() {\n    this.logger.debug('Refreshing library list display...');\n    const libraries = this.libraryManager.getLibraries();\n\n    if (libraries.length === 0) {\n      this.logger.debug('No libraries found, showing empty state');\n      this.libraryList.innerHTML = `\n        <div class=\"empty-state\">\n          <span class=\"empty-icon\">📚</span>\n          <p>No libraries added yet</p>\n          <small>Add a CDN URL below to get started</small>\n        </div>\n      `;\n    } else {\n      this.logger.info(`Displaying ${libraries.length} libraries in list`);\n      this.libraryList.innerHTML = libraries.map(lib => {\n        this.logger.trace(`Rendering library item: ${lib.name}`);\n        return `\n          <div class=\"library-item\" data-id=\"${lib.id}\">\n            <div class=\"library-info\">\n              <span class=\"library-name\">${lib.name}</span>\n              <small class=\"library-url\">${lib.url}</small>\n            </div>\n            <button class=\"remove-btn\" title=\"Remove library\" data-id=\"${lib.id}\">🗑️</button>\n          </div>\n        `;\n      }).join('');\n\n      // Add remove button listeners\n      this.libraryList.querySelectorAll('.remove-btn').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n          const id = e.target.dataset.id;\n          const library = libraries.find(lib => lib.id === id);\n          this.logger.info(`Remove button clicked for library: ${library?.name || id}`);\n          this.libraryManager.removeLibrary(id);\n        });\n      });\n\n      this.logger.debug('Remove button listeners attached to all library items');\n    }\n\n    this.logger.debug(`Library list refresh completed: ${libraries.length} libraries displayed`);\n  }\n\n  /**\n   * Shows feedback message\n   * @param {string} message - Message to show\n   * @param {string} type - Type of feedback (success, error, warning, info, loading)\n   */\n  showFeedback(message, type = 'info') {\n    this.logger.debug(`Showing ${type} feedback: ${message}`);\n    const feedback = this.getBody().querySelector('.input-feedback');\n    if (feedback) {\n      feedback.textContent = message;\n      feedback.className = `input-feedback ${type}`;\n    } else {\n      this.logger.warn('Feedback element not found in dialog body');\n    }\n  }\n\n  /**\n   * Clears feedback message\n   */\n  clearFeedback() {\n    this.logger.debug('Clearing feedback message');\n    const feedback = this.getBody().querySelector('.input-feedback');\n    if (feedback) {\n      feedback.textContent = '';\n      feedback.className = 'input-feedback';\n    }\n  }\n}","/**\n * Neon Glass Glow Effect Manager\n * Applies animated neon glass borders to UI elements\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { Logger } from '../core/logger.js';\n\nexport class NeonGlowManager {\n  /**\n   * Creates a new NeonGlowManager instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   */\n  constructor(options = {}) {\n    this.options = {\n      transitionDuration: 8000,\n      autoRotate: true,\n      debug: false,\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: 'info',\n      prefix: 'NeonGlow'\n    });\n\n    this.hue1 = this.randomHue();\n    this.hue2 = this.randomHue();\n    this.rotationInterval = null;\n    this.glowElements = new Set();\n  }\n\n  /**\n   * Generates a random hue value\n   * @returns {number} Hue between 0-360\n   */\n  randomHue() {\n    return Math.floor(Math.random() * 360);\n  }\n\n  /**\n   * Generates a complementary hue with some variance\n   * @param {number} baseHue - Base hue value\n   * @returns {number} Complementary hue\n   */\n  complementaryHue(baseHue) {\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\n    return (baseHue + offset) % 360;\n  }\n\n  /**\n   * Applies neon glow effect to an element\n   * @param {HTMLElement} element - Element to apply glow to\n   * @param {Object} [options={}] - Glow options (unused in new implementation)\n   */\n  applyGlow(element, options = {}) {\n    // Add neon-glow class\n    element.classList.add('neon-glow');\n\n    // Create glow container\n    const glowContainer = document.createElement('div');\n    glowContainer.className = 'neon-glow-container';\n\n    // Create SINGLE glow element that covers entire pane\n    const shine = document.createElement('div');\n    shine.className = 'neon-shine';\n    glowContainer.appendChild(shine);\n\n    element.appendChild(glowContainer);\n    this.glowElements.add(element);\n\n    this.logger.debug('Applied glow to element:', element);\n  }\n\n  /**\n   * Updates CSS custom properties for hue values\n   * @param {number} hue1 - Primary hue\n   * @param {number} hue2 - Secondary hue\n   */\n  updateHues(hue1, hue2) {\n    this.hue1 = hue1;\n    this.hue2 = hue2;\n\n    document.documentElement.style.setProperty('--hue1', String(hue1));\n    document.documentElement.style.setProperty('--hue2', String(hue2));\n\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\n  }\n\n  /**\n   * Rotates to new random colors\n   */\n  rotateColors() {\n    const newHue1 = this.randomHue();\n    const newHue2 = this.complementaryHue(newHue1);\n\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\n    this.updateHues(newHue1, newHue2);\n  }\n\n  /**\n   * Starts automatic color rotation\n   */\n  startRotation() {\n    if (this.rotationInterval) {\n      this.stopRotation();\n    }\n\n    // Initial colors\n    this.rotateColors();\n\n    // Set up interval\n    this.rotationInterval = setInterval(() => {\n      this.rotateColors();\n    }, this.options.transitionDuration);\n\n    this.logger.info('Started color rotation');\n  }\n\n  /**\n   * Stops automatic color rotation\n   */\n  stopRotation() {\n    if (this.rotationInterval) {\n      clearInterval(this.rotationInterval);\n      this.rotationInterval = null;\n      this.logger.info('Stopped color rotation');\n    }\n  }\n\n  /**\n   * Removes glow from an element\n   * @param {HTMLElement} element - Element to remove glow from\n   */\n  removeGlow(element) {\n    element.classList.remove('neon-glow');\n    const container = element.querySelector('.neon-glow-container');\n    if (container) {\n      container.remove();\n    }\n    this.glowElements.delete(element);\n  }\n\n  /**\n   * Cleans up the glow manager\n   */\n  destroy() {\n    this.logger.info('Destroying neon glow manager');\n    this.stopRotation();\n    \n    // Remove glow from all elements\n    this.glowElements.forEach(element => {\n      this.removeGlow(element);\n    });\n\n    this.glowElements.clear();\n  }\n}\n","import { SandboxEngine } from '../core/sandbox.js';\nimport { ConsoleOutput } from '../core/console.js';\nimport { Storage } from '../core/storage.js';\nimport { Logger } from '../core/logger.js';\nimport { EventEmitter } from '../core/events.js';\nimport { ExamplesLoader } from './examples.js';\nimport { ExamplesDropdown } from './examples-dropdown.js';\nimport { ThemeSwitcher } from './theme-switcher.js';\nimport { EditorSwitcher } from './editor-switcher.js';\nimport { FullscreenManager } from './fullscreen.js';\nimport { LibraryManager } from '../libraries/manager.js';\nimport { LibraryDialog } from '../libraries/dialog.js';\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\nimport { isMobile } from '../core/utils.js';\nimport { NeonGlowManager } from './neon.js';\nimport { \n  DEFAULT_TIMEOUT_MS, \n  DEFAULT_STORAGE_KEY, \n  EVENTS, \n  STATUS_MESSAGES,\n  MOBILE_BREAKPOINT \n} from '../core/constants.js';\n\n/**\n * Main controller that orchestrates the sandbox application components\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class SandboxController {\n  /**\n   * Creates a new SandboxController instance\n   * @param {Object} [options={}] - Configuration options\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\n   * @param {string} [options.defaultCode] - Default code to load\n   * @param {boolean} [options.debug=false] - Enable debug logging\n   * @param {string} [options.logLevel='info'] - Log level for debugging\n   */\n  constructor(options = {}) {\n    this.options = {\n      timeLimit: DEFAULT_TIMEOUT_MS,\n      storageKey: DEFAULT_STORAGE_KEY,\n      defaultCode: this.getDefaultCode(),\n      debug: false,\n      logLevel: 'info',\n      ...options\n    };\n\n    this.logger = new Logger({\n      enabled: this.options.debug,\n      level: this.options.logLevel,\n      prefix: 'Controller'\n    });\n\n    this.events = new EventEmitter();\n    this.editor = null;\n    this.sandbox = null;\n    this.console = null;\n    this.storage = null;\n    this.examples = null;\n    this.examplesDropdown = null;\n    this.themeSwitcher = null;\n    this.editorSwitcher = null;\n    this.fullscreenManager = null;\n    this.libraryManager = null;\n    this.libraryDialog = null;\n    this.neonGlow = null;\n    this.elements = {};\n    this.resizeHandlers = [];\n    this.responsiveListener = null;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Returns the default JavaScript code to load in the editor\n   * @returns {string} Default code content\n   */\n  getDefaultCode() {\n    return [\n      '// Welcome to JS Sandbox! 🙌',\n      '//',\n      '// Tips:',\n      '//  - Use console.log/info/warn/error',\n      '//  - Ctrl/Cmd+Enter to execute',\n      '//  - \"Reset\" kills stuck executions',\n      '//',\n      '// Examples:',\n      'console.log(\"Hello, sandbox!\");',\n      'function noReturn() { var x = 1+1; }',\n      'noReturn(); // no return value, all good',\n      '',\n      '// DOM inside sandbox:',\n      'var el = document.createElement(\"h1\");',\n      'el.textContent = \"Hello from iframe!\";',\n      'document.body.appendChild(el);',\n      '',\n      '// Errors:',\n      'Promise.reject(\"rejected!\");',\n      '// throw new Error(\"Exception thrown\");',\n      '',\n      '// Infinite loop test (commented):',\n      '// while(true) {}'\n    ].join('\\n');\n  }\n\n  /**\n   * Initializes the controller and all components\n   * @returns {Promise<void>}\n   */\n  async init() {\n    if (this.isInitialized) {\n      this.logger.warn('Controller already initialized');\n      return;\n    }\n\n    try {\n      this.events.emit(EVENTS.INIT_START);\n      this.logger.info('Initializing controller...');\n      \n      this.findElements();\n      await this.initializeComponents();\n      this.setupEventListeners();\n      \n      this.isInitialized = true;\n      this.events.emit(EVENTS.INIT_COMPLETE);\n      this.logger.info('Controller initialization complete');\n    } catch (error) {\n      this.logger.error('Initialization failed:', error);\n      this.events.emit(EVENTS.INIT_ERROR, error);\n      \n      // Show user-friendly error message\n      this.showInitializationError(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Shows initialization error to user\n   * @param {Error} error - The error that occurred\n   */\n  showInitializationError(error) {\n    if (this.elements.consoleContainer) {\n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'console-line console-error';\n      errorDiv.textContent = `⚠️ Initialization failed: ${error.message}`;\n      this.elements.consoleContainer.appendChild(errorDiv);\n    }\n  }\n\n  /**\n   * Finds and caches DOM elements\n   */\n  findElements() {\n    this.elements = {\n      app: document.querySelector('.app'),\n      editorContainer: document.getElementById('editorContainer'),\n      consoleContainer: document.getElementById('console'),\n      sandboxContainer: document.getElementById('sandboxContainer'),\n      runBtn: document.getElementById('runBtn'),\n      clearBtn: document.getElementById('clearBtn'),\n      resetBtn: document.getElementById('resetBtn'),\n      togglePreview: document.getElementById('togglePreview'),\n      previewWrap: document.getElementById('previewWrap'),\n      status: document.getElementById('status'),\n      limitLabel: document.getElementById('limitLabel'),\n      toolbar: document.querySelector('.toolbar'),\n      fullscreenEditor: document.getElementById('fullscreenEditor'),\n      fullscreenConsole: document.getElementById('fullscreenConsole'),\n      librariesBtn: document.getElementById('librariesBtn'),\n      clearConsoleBtn: document.getElementById('clearConsoleBtn')\n    };\n\n    // Validate required elements\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\n    const missing = required.filter(key => !this.elements[key]);\n    \n    if (missing.length > 0) {\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\n    }\n  }\n\n  /**\n   * Initializes all components with error boundaries\n   * @returns {Promise<void>}\n   */\n  async initializeComponents() {\n    this.logger.info('Initializing components...');\n\n    // Initialize storage\n    try {\n      this.storage = new Storage(this.options.storageKey, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Storage initialized');\n    } catch (error) {\n      this.logger.error('Storage initialization failed:', error);\n      // Non-fatal, continue without persistence\n    }\n\n    // Initialize console\n    try {\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\n        debug: this.options.debug\n      });\n      this.logger.debug('Console initialized');\n    } catch (error) {\n      this.logger.error('Console initialization failed:', error);\n      throw new Error('Failed to initialize console output');\n    }\n\n    // Initialize sandbox\n    try {\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\n        timeLimit: this.options.timeLimit,\n        debug: this.options.debug,\n        logLevel: this.options.logLevel,\n        onMessage: (type, args) => {\n          this.console.addLine(type, args);\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\n        },\n        onStatusChange: (status) => this.updateStatus(status)\n      });\n      this.logger.debug('SandboxEngine created');\n\n      // Initialize sandbox template\n      await this.sandbox.initialize();\n      this.logger.info('Sandbox initialized');\n    } catch (error) {\n      this.logger.error('Sandbox initialization failed:', error);\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\n    }\n\n    // Initialize examples system\n    try {\n      this.examples = new ExamplesLoader({\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\n        debug: true // Always debug examples loading to help troubleshoot\n      });\n\n      // Initialize examples dropdown (only if not already created)\n      if (this.elements.toolbar && !this.examplesDropdown) {\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\n          onSelect: (exampleId) => this.loadExample(exampleId)\n        });\n\n        // Load available examples\n        try {\n          this.examplesDropdown.setLoading(true);\n          const availableExamples = await this.examples.discoverExamples();\n          this.examplesDropdown.setExamples(availableExamples);\n          this.logger.info('Examples loaded:', availableExamples.length);\n        } catch (error) {\n          this.logger.error('Failed to load examples:', error);\n          this.examplesDropdown.setError('Failed to load');\n        }\n      }\n\n      // Initialize theme switcher (only if not already created)\n      if (this.elements.toolbar && !this.themeSwitcher) {\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\n          defaultTheme: 'monokai'\n        });\n        this.logger.info('Theme switcher initialized');\n      }\n\n      // Initialize editor switcher (only if not already created)\n      const editorControls = this.elements.app.querySelector('.editor-controls');\n      if (editorControls && !this.editorSwitcher) {\n        this.editorSwitcher = new EditorSwitcher(editorControls, this.events, {\n          defaultEditor: 'ace'\n        });\n        this.logger.info('Editor switcher initialized');\n      }\n\n      // Initialize fullscreen manager (only if not already created)\n      if (!this.fullscreenManager) {\n        this.fullscreenManager = new FullscreenManager(this.events, {\n          debug: this.options.debug\n        });\n        this.fullscreenManager.init({\n          app: this.elements.app,\n          fullscreenEditor: this.elements.fullscreenEditor,\n          fullscreenConsole: this.elements.fullscreenConsole\n        });\n        this.logger.info('Fullscreen manager initialized');\n      }\n\n      // Initialize library manager (only if not already created)\n      if (!this.libraryManager) {\n        this.libraryManager = new LibraryManager(this.events, {\n          debug: this.options.debug\n        });\n        this.logger.info('Library manager initialized');\n      }\n\n      // Initialize library dialog (only if not already created)\n      if (!this.libraryDialog) {\n        this.libraryDialog = new LibraryDialog(this.events, this.libraryManager, {\n          debug: this.options.debug\n        });\n        this.logger.info('Library dialog initialized');\n      }\n    } catch (error) {\n      this.logger.warn('Examples system initialization failed:', error);\n      // Non-fatal, continue without examples\n    }\n\n    // Update time limit display\n    if (this.elements.limitLabel) {\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\n    }\n\n    // Initialize resizable panes\n    this.initializeResizer();\n\n    // Handle responsive layout changes\n    this.setupResponsiveListener();\n\n    // Set initial state for preview toggle\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (rightPane && this.elements.previewWrap) {\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\n    }\n\n    // Initialize neon glow effects\n    this.initializeNeonGlow();\n\n    this.logger.info('Components initialization complete');\n  }\n\n  /**\n   * Initializes neon glow effects on UI elements\n   */\n  initializeNeonGlow() {\n    try {\n      this.neonGlow = new NeonGlowManager({\n        transitionDuration: 8000,\n        autoRotate: true,\n        debug: true // Enable debug to see color changes\n      });\n\n      // Apply glow ONLY to panes (not navbar)\n      const panes = this.elements.app.querySelectorAll('.pane');\n      panes.forEach(pane => {\n        this.neonGlow.applyGlow(pane);\n      });\n\n      // Start automatic color rotation\n      this.neonGlow.startRotation();\n\n      this.logger.info('Neon glow effects initialized');\n    } catch (error) {\n      this.logger.warn('Failed to initialize neon glow:', error);\n      // Non-fatal, continue without neon effects\n    }\n  }\n\n  /**\n   * Cleans up existing resize handlers\n   */\n  cleanupResizeHandlers() {\n    this.resizeHandlers.forEach(handler => {\n      if (handler && handler.cleanup) {\n        handler.cleanup();\n      }\n    });\n    this.resizeHandlers = [];\n  }\n\n  /**\n   * Initializes the resizable panes functionality\n   */\n  initializeResizer() {\n    if (!this.elements.app) return;\n\n    // Cleanup existing handlers\n    this.cleanupResizeHandlers();\n\n    // Skip horizontal resize on mobile\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.initializeVerticalResize();\n      return;\n    }\n\n    const mainContent = this.elements.app.querySelector('.main-content');\n    if (!mainContent) return;\n\n    // Remove any existing resize handles first\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\n    existingHandles.forEach(handle => handle.remove());\n\n    // Reset any inline grid styles that might have been applied\n    mainContent.style.gridTemplateColumns = '';\n    mainContent.style.gridTemplateRows = '';\n\n    // Reset right pane styles\n    const rightPane = mainContent.querySelector('.pane:last-child');\n    if (rightPane) {\n      rightPane.style.gridTemplateRows = '';\n      rightPane.classList.remove('preview-hidden');\n    }\n\n    // Create resize handle\n    const resizeHandle = document.createElement('div');\n    resizeHandle.className = 'resize-handle';\n\n    // Insert between the first and last pane in main-content\n    const panes = mainContent.querySelectorAll('.pane');\n    if (panes.length >= 2) {\n      mainContent.insertBefore(resizeHandle, panes[1]);\n\n      // Create horizontal resize handler using utility\n      const horizontalHandler = createHorizontalResizeHandler({\n        container: mainContent,\n        leftPane: panes[0],\n        rightPane: panes[1],\n        handle: resizeHandle,\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\n      });\n\n      this.resizeHandlers.push(horizontalHandler);\n    }\n\n    // Initialize vertical resizing\n    this.initializeVerticalResize();\n  }\n\n  /**\n   * Sets up responsive layout listener for orientation/resize changes\n   */\n  setupResponsiveListener() {\n    // Clean up existing listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n    }\n\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\n\n    const handleChange = () => {\n      this.logger.debug('Responsive breakpoint changed');\n      this.initializeResizer();\n    };\n\n    mediaQuery.addListener(handleChange);\n\n    // Store reference for cleanup\n    this.responsiveListener = { mediaQuery, handleChange };\n  }\n\n  /**\n   * Initializes vertical resizing between console and preview\n   */\n  initializeVerticalResize() {\n    const rightPane = this.elements.app.querySelector('.pane.right');\n    if (!rightPane) return;\n\n    // Create vertical resize handle\n    const verticalHandle = document.createElement('div');\n    verticalHandle.className = 'vertical-resize-handle';\n\n    // Insert after console\n    const consoleEl = rightPane.querySelector('.console');\n    if (consoleEl) {\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\n\n      // Create vertical resize handler using utility\n      const verticalHandler = createVerticalResizeHandler({\n        container: rightPane,\n        topPane: consoleEl,\n        bottomPane: this.elements.previewWrap,\n        handle: verticalHandle,\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\n      });\n\n      this.resizeHandlers.push(verticalHandler);\n    }\n  }\n\n  /**\n   * Gets the event emitter instance\n   * @returns {EventEmitter} The event emitter\n   */\n  getEventEmitter() {\n    return this.events;\n  }\n\n\n  /**\n   * Sets the editor instance\n   * @param {EditorAdapter} editor - The editor instance\n   */\n  setEditor(editor) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n\n    this.editor = editor;\n\n    // Setup editor event handlers\n    this.editor.onChange((code) => {\n      if (this.storage) {\n        this.storage.save(code);\n      }\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\n    });\n\n    this.editor.onExecute(() => {\n      this.run();\n    });\n\n    // Load initial code now that editor is ready\n    this.loadInitialCode();\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\n  }\n\n  /**\n   * Sets up event listeners for UI interactions\n   */\n  setupEventListeners() {\n    if (this.elements.runBtn) {\n      this.elements.runBtn.addEventListener('click', () => this.run());\n    }\n\n    if (this.elements.clearBtn) {\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\n    }\n\n    if (this.elements.resetBtn) {\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\n    }\n\n    if (this.elements.togglePreview) {\n      this.elements.togglePreview.addEventListener('change', (e) => {\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          if (e.target.checked) {\n            rightPane.classList.add('has-preview');\n          } else {\n            rightPane.classList.remove('has-preview');\n            rightPane.style.gridTemplateRows = '';\n          }\n        }\n      });\n    }\n\n    if (this.elements.librariesBtn) {\n      this.elements.librariesBtn.addEventListener('click', () => {\n        this.events.emit(EVENTS.LIBRARY_MANAGER_OPEN);\n      });\n    }\n\n    if (this.elements.clearConsoleBtn) {\n      this.elements.clearConsoleBtn.addEventListener('click', () => {\n        this.clearConsole();\n      });\n    }\n\n    // Set up theme event listeners\n    this.setupThemeEventListeners();\n\n    // Set up editor change event listeners\n    this.setupEditorEventListeners();\n  }\n\n  /**\n   * Sets up theme-related event listeners\n   */\n  setupThemeEventListeners() {\n    // Listen for theme loading start\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\n      this.logger.info('Theme loading started:', data.theme);\n    });\n\n    // Listen for theme ready\n    this.events.on(EVENTS.THEME_READY, (data) => {\n      this.logger.info('Theme ready:', data.theme);\n      if (data.error) {\n        this.logger.warn('Theme ready with error:', data.error);\n      }\n    });\n\n    // Listen for theme changes\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\n    });\n  }\n\n  /**\n   * Sets up editor-related event listeners\n   */\n  setupEditorEventListeners() {\n    // Listen for editor changes\n    this.events.on(EVENTS.EDITOR_CHANGE, async (data) => {\n      this.logger.info('Editor change requested:', data);\n      await this.switchEditor(data.editor, data.oldEditor);\n    });\n  }\n\n  /**\n   * Switches to a different editor\n   * @param {string} editorName - The editor to switch to\n   * @param {string} oldEditor - The previous editor name\n   */\n  async switchEditor(editorName, oldEditor) {\n    this.logger.info('Switching editor from', oldEditor, 'to', editorName);\n\n    // Save current code before switching\n    const currentCode = this.editor ? this.editor.getValue() : '';\n\n    // Destroy current editor\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n\n    // Create new editor\n    const editorContainer = this.elements.editorContainer;\n    if (!editorContainer) {\n      throw new Error('Editor container not found');\n    }\n\n    // Clear container\n    editorContainer.innerHTML = '';\n\n    // Import and create the appropriate editor\n    let newEditor;\n    try {\n      if (editorName === 'ace') {\n        const { ACEEditor } = await import('../editors/ace.js');\n        newEditor = new ACEEditor(editorContainer, {\n          mode: 'javascript',\n          theme: this.themeSwitcher ? this.themeSwitcher.getCurrentTheme() : 'monokai',\n          autofocus: true,\n          debug: this.options.debug\n        }, this.events);\n      } else if (editorName === 'codemirror') {\n        const { CodeMirrorEditor } = await import('../editors/codemirror.js');\n        newEditor = new CodeMirrorEditor(editorContainer, {\n          mode: 'javascript',\n          theme: this.themeSwitcher ? this.themeSwitcher.getCurrentTheme() : 'darcula',\n          autofocus: true,\n          debug: this.options.debug\n        }, this.events);\n      } else {\n        const { TextareaEditor } = await import('../editors/textarea.js');\n        newEditor = new TextareaEditor(editorContainer, {\n          autofocus: true,\n          debug: this.options.debug\n        }, this.events);\n      }\n\n      // Set up the new editor\n      this.setEditor(newEditor);\n\n      // Restore code\n      if (currentCode) {\n        this.editor.setValue(currentCode);\n      }\n\n      this.logger.info('Editor switched successfully to:', editorName);\n      this.events.emit(EVENTS.EDITOR_CHANGED, { editor: editorName, oldEditor: oldEditor });\n\n    } catch (error) {\n      this.logger.error('Failed to switch editor:', error);\n      // Fallback to textarea\n      const { TextareaEditor } = await import('../editors/textarea.js');\n      this.editor = new TextareaEditor(editorContainer, {\n        autofocus: true,\n        debug: this.options.debug\n      }, this.events);\n      this.setEditor(this.editor);\n      if (currentCode) {\n        this.editor.setValue(currentCode);\n      }\n    }\n  }\n\n  /**\n   * Loads initial code into the editor\n   */\n  loadInitialCode() {\n    const savedCode = this.storage ? this.storage.load() : null;\n    const initialCode = savedCode || this.options.defaultCode;\n\n    if (this.editor) {\n      this.editor.setValue(initialCode);\n      this.editor.focus();\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\n    }\n  }\n\n  /**\n   * Runs the current code in the sandbox\n   */\n  async run() {\n    if (!this.editor) {\n      this.logger.error('No editor configured');\n      return;\n    }\n\n    const code = this.editor.getValue();\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\n\n    // Validate syntax first\n    const validation = this.sandbox.validateSyntax(code);\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\n\n    this.console.clear();\n\n    // On mobile, enter fullscreen console mode after running code\n    if (isMobile(MOBILE_BREAKPOINT)) {\n      this.enterConsoleFullscreenOnMobile();\n    }\n\n    // Prepare library data for injection (async)\n    let libraryData = null;\n    if (this.libraryManager) {\n      const libraries = this.libraryManager.getLibraries();\n      if (libraries.length > 0) {\n        // Show loading status for libraries\n        this.updateStatus(`Loading ${libraries.length} libraries...`);\n\n        try {\n          this.logger.debug('Generating library scripts...');\n          const scripts = await this.libraryManager.generateScriptTags();\n          const csp = this.libraryManager.generateCSP();\n\n          libraryData = { scripts, csp };\n          this.logger.debug('Library data prepared successfully');\n        } catch (error) {\n          this.logger.error('Failed to prepare library data:', error);\n          this.updateStatus('Library loading failed');\n          // Continue without libraries\n        }\n      }\n    }\n\n    this.sandbox.execute(code, libraryData);\n  }\n\n  /**\n   * Enters fullscreen console mode on mobile devices when running code\n   */\n  enterConsoleFullscreenOnMobile() {\n    if (this.fullscreenManager && !this.fullscreenManager.isFullscreen()) {\n      this.logger.debug('Entering console fullscreen mode on mobile after run');\n      this.fullscreenManager.setFullscreenMode('console');\n    }\n  }\n\n  /**\n   * Clears the console output\n   */\n  clearConsole() {\n    this.console.clear();\n    this.updateStatus(STATUS_MESSAGES.cleared);\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\n  }\n\n  /**\n   * Resets the sandbox\n   */\n  reset() {\n    this.sandbox.reset();\n    this.updateStatus(STATUS_MESSAGES.reset);\n    this.events.emit(EVENTS.SANDBOX_RESET);\n  }\n\n  /**\n   * Updates the status display\n   * @param {string} status - Status message or key\n   */\n  updateStatus(status) {\n    if (!this.elements.status) return;\n\n    const displayStatus = STATUS_MESSAGES[status] || status;\n    this.elements.status.textContent = displayStatus;\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\n\n    // Emit specific status events\n    if (status === 'completed') {\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\n    } else if (status === 'timeout') {\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\n    }\n  }\n\n  /**\n   * Registers an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @param {Object} [options={}] - Options for the listener\n   * @returns {Function} Unsubscribe function\n   */\n  on(event, callback, options) {\n    return this.events.on(event, callback, options);\n  }\n\n  /**\n   * Registers a one-time event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   * @returns {Function} Unsubscribe function\n   */\n  once(event, callback) {\n    return this.events.once(event, callback);\n  }\n\n  /**\n   * Removes an event listener\n   * @param {string} event - The event name\n   * @param {Function} callback - The callback function\n   */\n  off(event, callback) {\n    this.events.off(event, callback);\n  }\n\n  /**\n   * Gets the current code from the editor\n   * @returns {string|null} The current code or null if no editor\n   */\n  getCode() {\n    return this.editor ? this.editor.getValue() : null;\n  }\n\n  /**\n   * Sets code in the editor\n   * @param {string} code - The code to set\n   */\n  setCode(code) {\n    if (this.editor) {\n      this.editor.setValue(code);\n    }\n  }\n\n  /**\n   * Validates JavaScript syntax without executing\n   * @param {string} [code] - The code to validate, or current editor code if not provided\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\n   */\n  validateCode(code) {\n    const codeToValidate = code || this.getCode();\n    return this.sandbox ? \n      this.sandbox.validateSyntax(codeToValidate) : \n      { valid: false, error: 'Sandbox not initialized' };\n  }\n\n  /**\n   * Loads and runs an example\n   * @param {string} exampleId - The example ID to load\n   * @returns {Promise<void>}\n   */\n  async loadExample(exampleId) {\n    try {\n      this.logger.info('Loading example:', exampleId);\n\n      const example = await this.examples.loadExample(exampleId);\n\n      // Set the code in the editor\n      this.setCode(example.code);\n\n      // Open preview pane\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\n        this.elements.togglePreview.checked = true;\n        this.elements.previewWrap.classList.add('show');\n\n        const rightPane = this.elements.app.querySelector('.pane.right');\n        if (rightPane) {\n          rightPane.classList.add('has-preview');\n        }\n      }\n\n      // Run the example\n      this.run();\n\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\n    } catch (error) {\n      this.logger.error('Failed to load example:', error);\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\n    }\n  }\n\n  /**\n   * Cleans up the controller and all components\n   */\n  destroy() {\n    this.logger.info('Destroying controller...');\n    \n    this.events.emit(EVENTS.DESTROY);\n\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n\n    if (this.sandbox) {\n      this.sandbox.destroy();\n      this.sandbox = null;\n    }\n\n    if (this.examples) {\n      this.examples.destroy();\n      this.examples = null;\n    }\n\n    if (this.examplesDropdown) {\n      this.examplesDropdown.destroy();\n      this.examplesDropdown = null;\n    }\n\n    if (this.themeSwitcher) {\n      this.themeSwitcher.destroy();\n      this.themeSwitcher = null;\n    }\n\n    if (this.editorSwitcher) {\n      this.editorSwitcher.destroy();\n      this.editorSwitcher = null;\n    }\n\n    if (this.neonGlow) {\n      this.neonGlow.destroy();\n      this.neonGlow = null;\n    }\n\n    if (this.fullscreenManager) {\n      this.fullscreenManager.destroy();\n      this.fullscreenManager = null;\n    }\n\n    if (this.libraryManager) {\n      this.libraryManager.destroy();\n      this.libraryManager = null;\n    }\n\n    if (this.libraryDialog) {\n      this.libraryDialog.destroy();\n      this.libraryDialog = null;\n    }\n\n    // Cleanup resize handlers\n    this.cleanupResizeHandlers();\n\n    // Cleanup responsive listener\n    if (this.responsiveListener) {\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\n      this.responsiveListener = null;\n    }\n\n    this.events.removeAllListeners();\n    this.isInitialized = false;\n    \n    this.logger.info('Controller destroyed');\n  }\n}\n","import {\n  MIN_LEFT_PANE_WIDTH,\n  MIN_RIGHT_PANE_WIDTH,\n  MIN_CONSOLE_HEIGHT,\n  MIN_PREVIEW_HEIGHT,\n  RESIZE_HANDLE_WIDTH\n} from '../core/constants.js';\n\n/**\n * Shared resize functionality for panes\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\n/**\n * Creates a horizontal resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.leftPane - Left pane element\n * @param {HTMLElement} config.rightPane - Right pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @returns {Object} Handler functions and cleanup\n */\nexport function createHorizontalResizeHandler(config) {\n  const { container, leftPane, rightPane, handle, onResize } = config;\n\n  let isResizing = false;\n  let startX = 0;\n  let startLeftWidth = 0;\n  let startRightWidth = 0;\n\n  const handleStart = (e) => {\n    isResizing = true;\n    // Support both mouse and touch events\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\n    startX = clientX;\n    handle.classList.add('dragging');\n\n    startLeftWidth = leftPane.getBoundingClientRect().width;\n    startRightWidth = rightPane.getBoundingClientRect().width;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'col-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMove = (e) => {\n    if (!isResizing) return;\n\n    // Support both mouse and touch events\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\n    const deltaX = clientX - startX;\n    const containerRect = container.getBoundingClientRect();\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\n\n    // Calculate new widths with constraints\n    const newLeftWidth = Math.max(\n      MIN_LEFT_PANE_WIDTH,\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\n    );\n    const newRightWidth = totalWidth - newLeftWidth;\n\n    // Update grid template\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\n\n    e.preventDefault();\n  };\n\n  const handleEnd = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  // Add both mouse and touch event listeners\n  handle.addEventListener('mousedown', handleStart);\n  handle.addEventListener('touchstart', handleStart);\n  document.addEventListener('mousemove', handleMove);\n  document.addEventListener('touchmove', handleMove);\n  document.addEventListener('mouseup', handleEnd);\n  document.addEventListener('touchend', handleEnd);\n\n  return {\n    handleStart,\n    handleMove,\n    handleEnd,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleStart);\n      handle.removeEventListener('touchstart', handleStart);\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('mouseup', handleEnd);\n      document.removeEventListener('touchend', handleEnd);\n    }\n  };\n}\n\n/**\n * Creates a vertical resize handler\n * @param {Object} config - Configuration object\n * @param {HTMLElement} config.container - Container element\n * @param {HTMLElement} config.topPane - Top pane element\n * @param {HTMLElement} config.bottomPane - Bottom pane element\n * @param {HTMLElement} config.handle - Resize handle element\n * @param {Function} config.onResize - Callback when resize completes\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\n * @returns {Object} Handler functions and cleanup\n */\nexport function createVerticalResizeHandler(config) {\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\n  \n  let isResizing = false;\n  let startY = 0;\n  let startTopHeight = 0;\n  let startBottomHeight = 0;\n\n  const handleStart = (e) => {\n    // Check if resizing is allowed\n    if (shouldResize && !shouldResize()) return;\n\n    isResizing = true;\n    // Support both mouse and touch events\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\n    startY = clientY;\n    handle.classList.add('dragging');\n\n    const topRect = topPane.getBoundingClientRect();\n    const bottomRect = bottomPane.getBoundingClientRect();\n\n    startTopHeight = topRect.height;\n    startBottomHeight = bottomRect.height;\n\n    document.body.style.userSelect = 'none';\n    document.body.style.cursor = 'row-resize';\n\n    e.preventDefault();\n  };\n\n  const handleMove = (e) => {\n    if (!isResizing) return;\n\n    // Support both mouse and touch events\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\n    const deltaY = clientY - startY;\n    const totalContentHeight = startTopHeight + startBottomHeight;\n\n    // Calculate new heights with constraints\n    const newTopHeight = Math.max(\n      MIN_CONSOLE_HEIGHT,\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\n    );\n    const newBottomHeight = totalContentHeight - newTopHeight;\n\n    // Update grid template\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\n\n    e.preventDefault();\n  };\n\n  const handleEnd = () => {\n    if (!isResizing) return;\n\n    isResizing = false;\n    handle.classList.remove('dragging');\n\n    document.body.style.userSelect = '';\n    document.body.style.cursor = '';\n\n    if (onResize) onResize();\n  };\n\n  // Add both mouse and touch event listeners\n  handle.addEventListener('mousedown', handleStart);\n  handle.addEventListener('touchstart', handleStart);\n  document.addEventListener('mousemove', handleMove);\n  document.addEventListener('touchmove', handleMove);\n  document.addEventListener('mouseup', handleEnd);\n  document.addEventListener('touchend', handleEnd);\n\n  return {\n    handleStart,\n    handleMove,\n    handleEnd,\n    cleanup: () => {\n      handle.removeEventListener('mousedown', handleStart);\n      handle.removeEventListener('touchstart', handleStart);\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('mouseup', handleEnd);\n      document.removeEventListener('touchend', handleEnd);\n    }\n  };\n}\n","import { EditorAdapter } from './base.js';\nimport { Logger } from '../core/logger.js';\n\n/**\n * ACE editor adapter with syntax highlighting and advanced features\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class ACEEditor extends EditorAdapter {\n  /**\n   * Creates a new ACEEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.mode='javascript'] - ACE language mode\n   * @param {string} [options.theme='monokai'] - ACE theme\n   * @param {boolean} [options.autofocus=true] - Whether to autofocus the editor\n   * @param {boolean} [options.autocomplete=true] - Enable autocomplete\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\n   */\n  constructor(container, options = {}, eventEmitter = null) {\n    super(container, options, eventEmitter);\n    this.editor = null;\n    this.currentTheme = options.theme || 'monokai';\n\n    this.logger = new Logger({\n      enabled: true,\n      level: 'info',\n      prefix: 'ACEEditor'\n    });\n\n    this.logger.info('ACE editor initialized with theme:', this.currentTheme);\n    this.logger.info('Event emitter provided:', !!eventEmitter);\n\n    this.init();\n  }\n\n  /**\n   * Initializes the ACE editor instance\n   * @throws {Error} If ACE is not loaded\n   */\n  init() {\n    if (typeof ace === 'undefined') {\n      throw new Error('ACE is not loaded. Include ACE before using this adapter.');\n    }\n\n    // Create editor element\n    const editorElement = document.createElement('div');\n    editorElement.style.cssText = `\n      width: 100%;\n      height: 100%;\n      min-height: 300px;\n    `;\n    this.container.appendChild(editorElement);\n\n    // Initialize ACE editor\n    this.editor = ace.edit(editorElement);\n    \n    // Configure editor\n    this.editor.setTheme(`ace/theme/${this.currentTheme}`);\n    this.editor.session.setMode('ace/mode/javascript');\n    this.editor.setOptions({\n      fontSize: '14px',\n      showPrintMargin: false,\n      showGutter: true,\n      highlightActiveLine: true,\n      enableBasicAutocompletion: this.options.autocomplete !== false,\n      enableLiveAutocompletion: this.options.autocomplete !== false,\n      enableSnippets: true,\n      wrap: true,\n      tabSize: 2,\n      useSoftTabs: true,\n      behavioursEnabled: true,\n      wrapBehavioursEnabled: true\n    });\n\n    // Set up keyboard shortcuts\n    this.editor.commands.addCommand({\n      name: 'executeCode',\n      bindKey: { win: 'Ctrl-Enter', mac: 'Cmd-Enter' },\n      exec: () => this.triggerExecute()\n    });\n\n    // Set up event listeners\n    this.editor.on('change', () => {\n      this.triggerChange();\n    });\n\n    // Apply glass effect on initial load\n    this.applyGlassEffect(this.currentTheme);\n\n    // Focus if requested\n    if (this.options.autofocus !== false) {\n      this.editor.focus();\n    }\n\n    this.logger.info('ACE editor initialized successfully');\n  }\n\n  /**\n   * Gets the current code value from ACE\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.editor ? this.editor.getValue() : '';\n  }\n\n  /**\n   * Sets the code value in ACE\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    if (this.editor) {\n      this.editor.setValue(code, -1); // -1 means move cursor to start\n    }\n  }\n\n  /**\n   * Focuses the ACE editor\n   */\n  focus() {\n    if (this.editor) {\n      this.editor.focus();\n    }\n  }\n\n  /**\n   * Handles theme change events\n   * @param {string} newTheme - The new theme name\n   * @param {string} oldTheme - The previous theme name\n   */\n  onThemeChange(newTheme, oldTheme) {\n    this.logger.info('onThemeChange called with:', { newTheme, oldTheme });\n    this.logger.info('Current theme before change:', this.currentTheme);\n    this.logger.info('ACE editor instance exists:', !!this.editor);\n\n    if (this.editor && newTheme !== this.currentTheme) {\n      this.logger.info('Applying theme change from', this.currentTheme, 'to', newTheme);\n      this.currentTheme = newTheme;\n      this.editor.setTheme(`ace/theme/${newTheme}`);\n      this.logger.info('Theme applied successfully');\n\n      // Apply glass glow effect by reducing background opacity\n      this.applyGlassEffect(newTheme);\n    } else {\n      this.logger.warn('Theme change skipped. Reasons:');\n      this.logger.warn('- ACE editor exists:', !!this.editor);\n      this.logger.warn('- New theme different from current:', newTheme !== this.currentTheme);\n      this.logger.warn('- New theme value:', newTheme);\n      this.logger.warn('- Current theme value:', this.currentTheme);\n    }\n  }\n\n  /**\n   * Applies glass effect by reducing ACE background opacity\n   * @param {string} theme - The current theme name\n   */\n  applyGlassEffect(theme) {\n    // Wait for theme to be applied, then modify background opacity\n    setTimeout(() => {\n      const aceElement = this.container.querySelector('.ace_editor');\n      if (aceElement) {\n        this.logger.info('Applying glass effect for theme:', theme);\n\n        // Get the computed background color from the theme\n        const computedStyle = window.getComputedStyle(aceElement);\n        const backgroundColor = computedStyle.backgroundColor;\n        this.logger.info('Original background color:', backgroundColor);\n\n        // Parse the color and reduce opacity to 70%\n        const reducedOpacityColor = this.reduceColorOpacity(backgroundColor, 0.7);\n        this.logger.info('Reduced opacity color:', reducedOpacityColor);\n\n        // Create or update style element for glass effect\n        let styleElement = document.getElementById('ace-glass-effect');\n        if (!styleElement) {\n          styleElement = document.createElement('style');\n          styleElement.id = 'ace-glass-effect';\n          document.head.appendChild(styleElement);\n        }\n\n        // Apply reduced opacity background to let glow show through\n        styleElement.textContent = `\n          .ace_editor {\n            background-color: ${reducedOpacityColor} !important;\n          }\n          .ace_gutter {\n            background-color: ${this.reduceColorOpacity(backgroundColor, 0.8)} !important;\n          }\n        `;\n\n        this.logger.info('Glass effect applied with reduced opacity background');\n      }\n    }, 200); // Slightly longer delay to ensure theme CSS is fully loaded\n  }\n\n  /**\n   * Reduces the opacity of a CSS color value\n   * @param {string} color - The CSS color value (rgb, rgba, hex, etc.)\n   * @param {number} opacity - The target opacity (0-1)\n   * @returns {string} The color with reduced opacity in rgba format\n   */\n  reduceColorOpacity(color, opacity) {\n    // Handle rgba format\n    const rgbaMatch = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)/);\n    if (rgbaMatch) {\n      const [, r, g, b] = rgbaMatch;\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n\n    // Handle rgb format\n    const rgbMatch = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (rgbMatch) {\n      const [, r, g, b] = rgbMatch;\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n\n    // Handle hex format\n    const hexMatch = color.match(/^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i);\n    if (hexMatch) {\n      const r = parseInt(hexMatch[1], 16);\n      const g = parseInt(hexMatch[2], 16);\n      const b = parseInt(hexMatch[3], 16);\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    }\n\n    // Fallback for other formats or if parsing fails\n    this.logger.warn('Could not parse color:', color, 'using fallback');\n    return `rgba(0, 0, 0, ${opacity})`;\n  }\n\n  /**\n   * Gets the current theme\n   * @returns {string} Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Sets the theme programmatically\n   * @param {string} theme - Theme name to set\n   */\n  setTheme(theme) {\n    if (this.editor && theme !== this.currentTheme) {\n      this.currentTheme = theme;\n      this.editor.setTheme(`ace/theme/${theme}`);\n    }\n  }\n\n  /**\n   * Apply a transformation to the ACE editor\n   * @param {Object} transformation - Transformation to apply\n   */\n  applyTransformation(transformation) {\n    this.logger.debug('Applying transformation:', transformation);\n\n    const cursor = this.editor.getCursorPosition();\n\n    switch (transformation.action) {\n      case 'insert':\n        this.editor.insert(transformation.text);\n        if (transformation.cursorOffset !== undefined) {\n          const newCursor = this.editor.getCursorPosition();\n          this.editor.moveCursorTo(newCursor.row, newCursor.column + transformation.cursorOffset);\n        }\n        break;\n\n      case 'skip':\n        this.editor.moveCursorTo(cursor.row, cursor.column + transformation.positions);\n        break;\n\n      case 'deleteRange':\n        const range = new ace.Range(\n          cursor.row, transformation.start,\n          cursor.row, transformation.end\n        );\n        this.editor.session.remove(range);\n        break;\n\n      default:\n        this.logger.warn('Unknown transformation action:', transformation.action);\n    }\n  }\n\n  /**\n   * Cleans up the ACE editor\n   */\n  destroy() {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  }\n}\n","import { EditorAdapter } from './base.js';\n\n/**\n * Plain textarea editor adapter for basic code editing\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\nexport class TextareaEditor extends EditorAdapter {\n  /**\n   * Creates a new TextareaEditor instance\n   * @param {HTMLElement} container - DOM element to contain the editor\n   * @param {Object} [options={}] - Editor configuration options\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\n   */\n  constructor(container, options = {}, eventEmitter = null) {\n    super(container, options, eventEmitter);\n    this.textarea = null;\n    this.init();\n  }\n\n  /**\n   * Initializes the textarea editor\n   */\n  init() {\n    this.textarea = document.createElement('textarea');\n    this.textarea.className = 'code-editor';\n    this.textarea.spellcheck = false;\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\n\n    this.container.appendChild(this.textarea);\n    this.setupEventListeners();\n  }\n\n  /**\n   * Sets up event listeners for the textarea\n   */\n  setupEventListeners() {\n    this.textarea.addEventListener('input', () => {\n      this.triggerChange();\n    });\n\n    this.textarea.addEventListener('keydown', (e) => {\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n        e.preventDefault();\n        this.triggerExecute();\n      }\n    });\n  }\n\n  /**\n   * Gets the current code value from the textarea\n   * @returns {string} The current code\n   */\n  getValue() {\n    return this.textarea.value;\n  }\n\n  /**\n   * Sets the code value in the textarea\n   * @param {string} code - The code to set\n   */\n  setValue(code) {\n    this.textarea.value = code;\n  }\n\n  /**\n   * Focuses the textarea\n   */\n  focus() {\n    this.textarea.focus();\n  }\n\n  /**\n   * Cleans up the textarea editor\n   */\n  destroy() {\n    if (this.textarea) {\n      this.textarea.remove();\n    }\n  }\n}","/**\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\n */\n\nimport { SandboxController } from './ui/controller.js';\nimport { ACEEditor } from './editors/ace.js';\nimport { CodeMirrorEditor } from './editors/codemirror.js';\nimport { TextareaEditor } from './editors/textarea.js';\nimport { Logger } from './core/logger.js';\n\n/**\n * Auto-detects and initializes the best available editor\n * @param {HTMLElement} container - DOM element to contain the editor\n * @param {Object} [options={}] - Editor configuration options\n * @param {Object} [eventEmitter] - Event emitter for theme changes\n * @returns {EditorAdapter} The initialized editor instance\n */\nfunction createEditor(container, options = {}, eventEmitter = null) {\n  const logger = new Logger({\n    enabled: options.debug || false,\n    level: 'info',\n    prefix: 'EditorFactory'\n  });\n\n  // Check for saved editor preference\n  const savedEditor = localStorage.getItem('sandbox_current_editor');\n  logger.info('Saved editor preference:', savedEditor);\n\n  // Try saved editor first if available\n  if (savedEditor === 'ace' && typeof ace !== 'undefined') {\n    try {\n      logger.info('Initializing saved ACE editor');\n      return new ACEEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize saved ACE, falling back:', e);\n    }\n  } else if (savedEditor === 'codemirror' && typeof CodeMirror !== 'undefined') {\n    try {\n      logger.info('Initializing saved CodeMirror editor');\n      return new CodeMirrorEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize saved CodeMirror, falling back:', e);\n    }\n  } else if (savedEditor === 'textarea') {\n    try {\n      logger.info('Initializing saved textarea editor');\n      return new TextareaEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize saved textarea, falling back:', e);\n    }\n  }\n\n  // Fallback: Try ACE first if available\n  if (typeof ace !== 'undefined') {\n    try {\n      logger.info('Initializing ACE editor (fallback)');\n      return new ACEEditor(container, options, eventEmitter);\n    } catch (e) {\n      logger.warn('Failed to initialize ACE, falling back to textarea:', e);\n    }\n  }\n\n  // Final fallback to textarea\n  logger.info('Initializing textarea editor (final fallback)');\n  return new TextareaEditor(container, options, eventEmitter);\n}\n\n/**\n * Initializes the JavaScript sandbox application\n * @param {Object} [options={}] - Configuration options\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\n * @param {string} [options.storageKey] - LocalStorage key for persistence\n * @param {string} [options.defaultCode] - Default code to load\n * @param {boolean} [options.debug=false] - Enable debug logging\n * @param {string} [options.logLevel='info'] - Log level for debugging\n * @param {string} [options.templatePath] - Path to custom sandbox template\n * @returns {Promise<SandboxController>} The initialized sandbox controller\n */\nexport async function initSandbox(options = {}) {\n  const debug = options.debug || false;\n  const logger = new Logger({\n    enabled: debug,\n    level: options.logLevel || 'info',\n    prefix: 'App'\n  });\n\n  try {\n    logger.info('Starting sandbox initialization...');\n\n    // Create controller\n    const controller = new SandboxController(options);\n    \n    // Initialize controller (now properly awaited)\n    await controller.init();\n    logger.info('Controller initialized');\n\n    // Find editor container\n    const editorContainer = document.getElementById('editorContainer');\n    if (!editorContainer) {\n      throw new Error('Editor container element not found');\n    }\n\n    // Create editor with event emitter for theme switching\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\n    const editor = createEditor(editorContainer, {\n      mode: 'javascript',\n      theme: 'monokai', // Temporary default, will be updated by THEME_READY event\n      autofocus: true,\n      debug: debug\n    }, controller.getEventEmitter());\n    logger.info('Editor created, waiting for theme ready event');\n\n    // Set editor on controller\n    controller.setEditor(editor);\n    logger.info('Editor set on controller');\n    \n    logger.info('Sandbox initialization complete');\n    return controller;\n  } catch (error) {\n    logger.error('Sandbox initialization failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Auto-initializes the sandbox if DOM is ready\n */\nfunction autoInit() {\n  // Only auto-init if not already initialized and editor container exists\n  if (!window.sandbox && document.getElementById('editorContainer')) {\n    initSandbox({ debug: true, logLevel: 'trace' })\n      .then(sandbox => {\n        window.sandbox = sandbox;\n        console.log('✅ Sandbox initialized successfully');\n      })\n      .catch(error => {\n        console.error('❌ Failed to initialize sandbox:', error);\n      });\n  }\n}\n\n// Auto-initialize based on document state\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', autoInit);\n} else {\n  // DOM already loaded\n  autoInit();\n}\n\n// Export for manual initialization\nexport { SandboxController, ACEEditor, CodeMirrorEditor, TextareaEditor };\n"],"file":"assets/index-Dw-3sGOX.js"}