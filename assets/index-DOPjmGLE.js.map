{"version":3,"mappings":"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","names":["Storage","constructor","key","DEFAULT_STORAGE_KEY","options","this","logger","Logger","enabled","debug","level","prefix","save","code","localStorage","setItem","e","warn","load","getItem","clear","removeItem","ExamplesLoader","examplesPath","DEFAULT_EXAMPLES_PATH","onLoad","onError","examples","Map","discoverExamples","knownExamples","id","title","description","file","availableExamples","info","example","url","response","fetchWithTimeout","NETWORK_TIMEOUT_MS","ok","text","set","push","status","error","message","length","loadExample","exampleId","has","get","Error","getAvailableExamples","Array","from","values","clearCache","destroy","ExamplesDropdown","container","onSelect","createDropdown","existingDropdown","querySelector","remove","dropdown","document","createElement","className","innerHTML","addEventListener","target","value","setTimeout","previewLabel","insertBefore","nextSibling","appendChild","setExamples","forEach","option","textContent","disabled","setLoading","loading","setError","parentNode","removeChild","ThemeSwitcher","eventEmitter","defaultTheme","storageKey","themes","getThemesForEditor","currentTheme","loadSavedTheme","initializeCurrentTheme","setupEditorChangeListener","on","EVENTS","EDITOR_CHANGE","data","refreshThemesForEditor","editor","editorName","EDITOR_THEMES","ACE","CODEMIRROR","TEXTAREA","populateThemes","find","t","newTheme","switchTheme","emit","THEME_LOAD_START","theme","loadThemeCSS","THEME_READY","async","themeValue","examplesDropdown","label","themeName","ace","themePath","require","Promise","resolve","savedTheme","saveTheme","oldTheme","THEME_CHANGE","getCurrentTheme","setTheme","addTheme","EditorSwitcher","defaultEditor","editors","available","CodeMirror","currentEditor","loadSavedEditor","populateEditors","editorValue","switchEditor","availableEditors","filter","savedEditor","saveEditor","oldEditor","getCurrentEditor","setEditor","refreshEditors","FullscreenManager","currentMode","appElement","elements","isChanging","setupEventListeners","init","app","fullscreenEditor","toggleFullscreen","fullscreenConsole","preventDefault","exitFullscreen","FULLSCREEN_TOGGLE","mode","FULLSCREEN_EXIT","setFullscreenMode","previousMode","classList","updateButtonStates","add","toUpperCase","activeMode","getCurrentMode","isFullscreen","LibraryManager","allowlistKey","console","log","defaultDomains","libraries","allowedDomains","libraryCache","loadFromStorage","LIBRARY_ADD","addLibrary","name","LIBRARY_REMOVE","removeLibrary","DOMAIN_TRUST_REQUEST","addDomain","domain","librariesData","JSON","parse","domainsData","savedDomains","Set","map","lib","join","saveLibraries","serialized","stringify","saveDomains","customDomains","includes","generateId","Date","now","Math","random","toString","substr","extractDomain","URL","hostname","guessLibraryName","pathname","nameWithoutExt","split","pop","replace","patterns","pattern","match","charAt","slice","extractVersionFromUrl","versionPatterns","isDomainAllowed","validateLibraryUrl","valid","domainAllowed","needsDomainApproval","validation","success","needsApproval","library","trim","addedAt","toISOString","LIBRARY_ADDED","index","findIndex","removed","splice","LIBRARY_REMOVED","DOMAIN_ADDED","removeDomain","indexOf","DOMAIN_REMOVED","getLibraries","getAllowedDomains","generateScriptTags","scripts","content","fetch","statusText","result","libraryNames","scriptSize","s","version","versionInfo","toFixed","generateCSP","getStats","libraryCount","domainCount","customDomainCount","LIBRARIES_CLEARED","testLogging","BaseDialog","modal","closeOnBackdrop","closeOnEscape","logPrefix","dialog","isOpen","closeButton","createDialog","header","body","close","getBody","setTitle","titleElement","open","focus","onBeforeOpen","showModal","show","onFocus","onAfterOpen","onBeforeClose","onAfterClose","toggle","isDialogOpen","setContent","HTMLElement","addClass","removeClass","LibraryDialog","libraryManager","super","urlInput","addBtn","libraryList","createLibraryContent","setupLibraryEventListeners","handleAddLibrary","LIBRARY_MANAGER_OPEN","refreshLibraryList","showDomainTrustDialog","clearFeedback","showFeedback","confirm","trace","querySelectorAll","btn","dataset","type","feedback","NeonGlowManager","transitionDuration","autoRotate","hue1","randomHue","hue2","rotationInterval","glowElements","floor","complementaryHue","baseHue","applyGlow","element","dynamicSize","glowContainer","shine","setupDynamicSizing","updateGlowSize","rect","getBoundingClientRect","width","height","gradientSizeX","min","gradientSizeY","cornerSize","borderWidth","max","glowRadius","style","setProperty","window","ResizeObserver","resizeObserver","observe","_neonResizeObserver","resizeHandler","_neonResizeHandler","updateHues","documentElement","String","rotateColors","newHue1","newHue2","startRotation","stopRotation","setInterval","clearInterval","removeGlow","delete","SandboxController","timeLimit","DEFAULT_TIMEOUT_MS","defaultCode","getDefaultCode","logLevel","events","EventEmitter","sandbox","storage","themeSwitcher","editorSwitcher","fullscreenManager","libraryDialog","neonGlow","resizeHandlers","responsiveListener","isInitialized","INIT_START","findElements","initializeComponents","INIT_COMPLETE","INIT_ERROR","showInitializationError","consoleContainer","errorDiv","editorContainer","getElementById","sandboxContainer","runBtn","clearBtn","resetBtn","togglePreview","previewWrap","limitLabel","toolbar","librariesBtn","clearConsoleBtn","missing","ConsoleOutput","SandboxEngine","onMessage","args","addLine","CONSOLE_MESSAGE","onStatusChange","updateStatus","initialize","EXAMPLE_LOAD","EXAMPLE_ERROR","editorControls","initializeResizer","setupResponsiveListener","rightPane","isPreviewVisible","contains","initializeNeonGlow","pane","cleanupResizeHandlers","handler","cleanup","isMobile","MOBILE_BREAKPOINT","initializeVerticalResize","mainContent","handle","gridTemplateColumns","gridTemplateRows","resizeHandle","panes","horizontalHandler","config","leftPane","onResize","isResizing","startX","startLeftWidth","handleStart","clientX","touches","userSelect","cursor","handleMove","deltaX","totalWidth","RESIZE_HANDLE_WIDTH","newLeftWidth","MIN_LEFT_PANE_WIDTH","MIN_RIGHT_PANE_WIDTH","newRightWidth","handleEnd","removeEventListener","createHorizontalResizeHandler","PANES_RESIZED","mediaQuery","removeListener","handleChange","matchMedia","addListener","verticalHandle","consoleEl","verticalHandler","topPane","bottomPane","shouldResize","startY","startTopHeight","startBottomHeight","clientY","topRect","bottomRect","deltaY","totalContentHeight","newTopHeight","MIN_CONSOLE_HEIGHT","MIN_PREVIEW_HEIGHT","newBottomHeight","createVerticalResizeHandler","PANES_RESIZED_VERTICAL","getEventEmitter","onChange","CODE_CHANGE","onExecute","run","loadInitialCode","EDITOR_READY","clearConsole","reset","checked","setupThemeEventListeners","setupEditorEventListeners","currentCode","getValue","newEditor","ACEEditor","__vitePreload","then","ace$1","autofocus","CodeMirrorEditor","import","n","l","TextareaEditor","textarea","setValue","EDITOR_CHANGED","savedCode","initialCode","CODE_LOAD","fromStorage","CODE_EXECUTE_START","validateSyntax","CODE_VALIDATE","enterConsoleFullscreenOnMobile","libraryData","csp","execute","STATUS_MESSAGES","cleared","CONSOLE_CLEAR","SANDBOX_RESET","displayStatus","STATUS_CHANGE","CODE_EXECUTE_COMPLETE","CODE_EXECUTE_TIMEOUT","event","callback","once","off","getCode","setCode","validateCode","codeToValidate","EXAMPLE_LOADED","DESTROY","removeAllListeners","EditorAdapter","editorElement","cssText","edit","session","setMode","setOptions","fontSize","showPrintMargin","showGutter","highlightActiveLine","enableBasicAutocompletion","autocomplete","enableLiveAutocompletion","enableSnippets","wrap","tabSize","useSoftTabs","behavioursEnabled","wrapBehavioursEnabled","commands","addCommand","bindKey","win","mac","exec","triggerExecute","triggerChange","applyGlassEffect","onThemeChange","aceElement","backgroundColor","getComputedStyle","reducedOpacityColor","reduceColorOpacity","styleElement","head","color","opacity","rgbaMatch","r","g","b","rgbMatch","hexMatch","parseInt","applyTransformation","transformation","getCursorPosition","action","insert","cursorOffset","newCursor","moveCursorTo","row","column","positions","range","Range","start","end","spellcheck","placeholder","ctrlKey","metaKey","initSandbox","controller","createEditor","autoInit","catch","readyState"],"ignoreList":[],"sources":["../../src/core/storage.js","../../src/ui/examples.js","../../src/ui/examples-dropdown.js","../../src/ui/theme-switcher.js","../../src/ui/editor-switcher.js","../../src/ui/fullscreen.js","../../src/libraries/manager.js","../../src/ui/base-dialog.js","../../src/libraries/dialog.js","../../src/ui/neon.js","../../src/ui/controller.js","../../src/ui/resize-utils.js","../../src/editors/ace.js","../../src/editors/textarea.js","../../src/index.js"],"sourcesContent":["import { DEFAULT_STORAGE_KEY } from './constants.js';\r\nimport { Logger } from './logger.js';\r\n\r\n/**\r\n * Simple localStorage wrapper for persistent code storage\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class Storage {\r\n  /**\r\n   * Creates a new Storage instance\r\n   * @param {string} [key] - The localStorage key to use\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(key = DEFAULT_STORAGE_KEY, options = {}) {\r\n    this.key = key;\r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'warn',\r\n      prefix: 'Storage'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Saves code to localStorage\r\n   * @param {string} code - The code to save\r\n   * @returns {boolean} True if save was successful\r\n   */\r\n  save(code) {\r\n    try {\r\n      localStorage.setItem(this.key, code);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to save code to localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads code from localStorage\r\n   * @returns {string|null} The saved code or null if not found\r\n   */\r\n  load() {\r\n    try {\r\n      return localStorage.getItem(this.key);\r\n    } catch (e) {\r\n      this.logger.warn('Failed to load code from localStorage:', e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the saved code\r\n   * @returns {boolean} True if clear was successful\r\n   */\r\n  clear() {\r\n    try {\r\n      localStorage.removeItem(this.key);\r\n      return true;\r\n    } catch (e) {\r\n      this.logger.warn('Failed to clear localStorage:', e);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../core/logger.js';\r\nimport { fetchWithTimeout } from '../core/utils.js';\r\nimport { DEFAULT_EXAMPLES_PATH, NETWORK_TIMEOUT_MS } from '../core/constants.js';\r\n\r\n/**\r\n * Examples loader for the JavaScript sandbox\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesLoader {\r\n  /**\r\n   * Creates a new ExamplesLoader instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.examplesPath] - Path to examples directory\r\n   * @param {Function} [options.onLoad] - Callback when example is loaded\r\n   * @param {Function} [options.onError] - Callback when loading fails\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.examplesPath = options.examplesPath || DEFAULT_EXAMPLES_PATH;\r\n    this.onLoad = options.onLoad || (() => {});\r\n    this.onError = options.onError || (() => {});\r\n    this.examples = new Map();\r\n    \r\n    this.logger = new Logger({\r\n      enabled: options.debug || false,\r\n      level: 'info',\r\n      prefix: 'ExamplesLoader'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Discovers available examples by attempting to load known files\r\n   * @returns {Promise<Array>} Array of example metadata\r\n   */\r\n  async discoverExamples() {\r\n    // Known examples - in a real app, this could come from an API or manifest\r\n    const knownExamples = [\r\n      {\r\n        id: 'hello-world',\r\n        title: '👋 Hello World',\r\n        description: 'Simple greeting with interactive button',\r\n        file: 'hello-world.js'\r\n      },\r\n      {\r\n        id: 'spinning-animation',\r\n        title: '🌀 CSS Animations',\r\n        description: 'Spinning box with rainbow colors and controls',\r\n        file: 'spinning-animation.js'\r\n      },\r\n      {\r\n        id: 'interactive-form',\r\n        title: '📝 Interactive Form',\r\n        description: 'Form validation and submission handling',\r\n        file: 'interactive-form.js'\r\n      },\r\n      {\r\n        id: 'canvas-drawing',\r\n        title: '🎨 Canvas Drawing',\r\n        description: 'Draw with mouse or touch on HTML5 canvas',\r\n        file: 'canvas-drawing.js'\r\n      }\r\n    ];\r\n\r\n    const availableExamples = [];\r\n\r\n    this.logger.info(`Discovering examples from: ${this.examplesPath}`);\r\n\r\n    // Test each example to see if it's available\r\n    for (const example of knownExamples) {\r\n      try {\r\n        const url = `${this.examplesPath}/${example.file}`;\r\n        this.logger.debug(`Fetching example: ${url}`);\r\n        \r\n        const response = await fetchWithTimeout(\r\n          url,\r\n          {},\r\n          NETWORK_TIMEOUT_MS\r\n        );\r\n        \r\n        if (response.ok) {\r\n          const code = await response.text();\r\n          this.examples.set(example.id, { ...example, code });\r\n          availableExamples.push(example);\r\n          this.logger.debug(`✓ Example loaded: ${example.id}`);\r\n        } else {\r\n          this.logger.warn(`✗ Example ${example.id} returned ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`✗ Example ${example.id} failed:`, error.message);\r\n      }\r\n    }\r\n\r\n    this.logger.info(`Discovered ${availableExamples.length} of ${knownExamples.length} examples`);\r\n    return availableExamples;\r\n  }\r\n\r\n  /**\r\n   * Loads an example by ID\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<Object>} Example data with code\r\n   */\r\n  async loadExample(exampleId) {\r\n    if (this.examples.has(exampleId)) {\r\n      const example = this.examples.get(exampleId);\r\n      this.onLoad(example);\r\n      return example;\r\n    }\r\n\r\n    // Try to load if not cached\r\n    try {\r\n      await this.discoverExamples();\r\n      const example = this.examples.get(exampleId);\r\n\r\n      if (example) {\r\n        this.onLoad(example);\r\n        return example;\r\n      } else {\r\n        throw new Error(`Example '${exampleId}' not found`);\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.onError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all available examples\r\n   * @returns {Array} Array of cached examples\r\n   */\r\n  getAvailableExamples() {\r\n    return Array.from(this.examples.values());\r\n  }\r\n\r\n  /**\r\n   * Clears the examples cache\r\n   */\r\n  clearCache() {\r\n    this.logger.debug('Clearing examples cache');\r\n    this.examples.clear();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the examples loader\r\n   */\r\n  destroy() {\r\n    this.logger.debug('Destroying examples loader');\r\n    this.clearCache();\r\n  }\r\n}\r\n","/**\r\n * Examples dropdown UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ExamplesDropdown {\r\n  /**\r\n   * Creates a new ExamplesDropdown instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} options - Configuration options\r\n   * @param {Function} [options.onSelect] - Callback when example is selected\r\n   */\r\n  constructor(container, options = {}) {\r\n    this.container = container;\r\n    this.onSelect = options.onSelect || (() => {});\r\n    this.examples = [];\r\n\r\n    this.createDropdown();\r\n  }\r\n\r\n  /**\r\n   * Creates the dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.examples-dropdown');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'examples-dropdown';\r\n    this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\r\n\r\n    this.dropdown.addEventListener('change', (e) => {\r\n      const exampleId = e.target.value;\r\n      if (exampleId) {\r\n        this.onSelect(exampleId);\r\n        // Reset to placeholder after selection\r\n        setTimeout(() => {\r\n          this.dropdown.value = '';\r\n        }, 100);\r\n      }\r\n    });\r\n\r\n    // Insert after the preview button (make examples last in toolbar)\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n    if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with examples\r\n   * @param {Array} examples - Array of example objects\r\n   */\r\n  setExamples(examples) {\r\n    this.examples = examples;\r\n\r\n    // Reset to normal placeholder first\r\n    this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\r\n\r\n    // Add example options\r\n    examples.forEach(example => {\r\n      const option = document.createElement('option');\r\n      option.value = example.id;\r\n      option.textContent = example.title;\r\n      option.title = example.description; // Tooltip\r\n      this.dropdown.appendChild(option);\r\n    });\r\n\r\n    // Enable dropdown if we have examples\r\n    this.dropdown.disabled = examples.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Shows loading state\r\n   */\r\n  setLoading(loading = true) {\r\n    if (loading) {\r\n      this.dropdown.innerHTML = '<option value=\"\">⏳ Loading examples...</option>';\r\n      this.dropdown.disabled = true;\r\n    } else {\r\n      this.dropdown.innerHTML = '<option value=\"\">📚 Load Example...</option>';\r\n      this.dropdown.disabled = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows error state\r\n   * @param {string} message - Error message to display\r\n   */\r\n  setError(message = 'Failed to load examples') {\r\n    this.dropdown.innerHTML = `<option value=\"\">❌ ${message}</option>`;\r\n    this.dropdown.disabled = true;\r\n  }\r\n\r\n  /**\r\n   * Destroys the dropdown\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS, EDITOR_THEMES } from '../core/constants.js';\r\n\r\n/**\r\n * Theme switcher UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ThemeSwitcher {\r\n\r\n  /**\r\n   * Creates a new ThemeSwitcher instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} eventEmitter - The event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.defaultTheme='darcula'] - Default theme name\r\n   * @param {boolean} [options.debug=true] - Enable debug logging\r\n   */\r\n  constructor(container, eventEmitter, options = {}) {\r\n    this.container = container;\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      defaultTheme: 'monokai',\r\n      debug: true,\r\n      storageKey: 'sandbox_current_theme',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'ThemeSwitcher'\r\n    });\r\n\r\n    // Initialize with default themes (will be updated based on current editor)\r\n    this.themes = ThemeSwitcher.getThemesForEditor('ace');\r\n\r\n    // Load saved theme or use default (now that themes array exists)\r\n    this.currentTheme = this.loadSavedTheme() || this.options.defaultTheme;\r\n    this.logger.info('Initializing theme switcher with theme:', this.currentTheme);\r\n\r\n    this.createDropdown();\r\n\r\n    // Load CSS for the current theme on startup and emit events\r\n    this.initializeCurrentTheme();\r\n\r\n    // Listen for editor changes to refresh theme list\r\n    this.setupEditorChangeListener();\r\n  }\r\n\r\n  /**\r\n   * Sets up listener for editor changes\r\n   */\r\n  setupEditorChangeListener() {\r\n    if (this.eventEmitter) {\r\n      this.eventEmitter.on(EVENTS.EDITOR_CHANGE, (data) => {\r\n        this.logger.info('Editor changed, refreshing theme list:', data);\r\n        this.refreshThemesForEditor(data.editor);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets themes for a specific editor\r\n   * @param {string} editorName - The editor name\r\n   * @returns {Array} Array of theme objects\r\n   */\r\n  static getThemesForEditor(editorName) {\r\n    switch (editorName) {\r\n      case 'ace':\r\n        return EDITOR_THEMES.ACE;\r\n      case 'codemirror':\r\n        return EDITOR_THEMES.CODEMIRROR;\r\n      case 'textarea':\r\n        return EDITOR_THEMES.TEXTAREA;\r\n      default:\r\n        return EDITOR_THEMES.ACE; // Default fallback\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refreshes themes based on the current editor\r\n   * @param {string} editorName - The current editor name\r\n   */\r\n  refreshThemesForEditor(editorName) {\r\n    this.logger.info('Refreshing themes for editor:', editorName);\r\n    \r\n    // Update themes based on editor using constants\r\n    this.themes = ThemeSwitcher.getThemesForEditor(editorName);\r\n\r\n    // Repopulate dropdown\r\n    this.populateThemes();\r\n    \r\n    // If current theme is not available in new editor, switch to first available\r\n    if (!this.themes.find(t => t.value === this.currentTheme)) {\r\n      const newTheme = this.themes[0].value;\r\n      this.logger.info('Current theme not available in new editor, switching to:', newTheme);\r\n      this.switchTheme(newTheme);\r\n    } else {\r\n      // Restore current selection\r\n      this.dropdown.value = this.currentTheme;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the current theme by loading its CSS and emitting events\r\n   */\r\n  async initializeCurrentTheme() {\r\n    this.logger.info('Initializing current theme:', this.currentTheme);\r\n\r\n    // Emit that theme loading started\r\n    this.eventEmitter.emit(EVENTS.THEME_LOAD_START, {\r\n      theme: this.currentTheme\r\n    });\r\n\r\n    try {\r\n      await this.loadThemeCSS(this.currentTheme);\r\n      this.logger.info('Current theme CSS loaded:', this.currentTheme);\r\n\r\n      // Emit that theme is ready for use\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: this.currentTheme\r\n      });\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load current theme CSS:', error);\r\n\r\n      // Emit error but fallback to default\r\n      this.eventEmitter.emit(EVENTS.THEME_READY, {\r\n        theme: 'darcula', // fallback\r\n        error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the theme switcher dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.theme-switcher');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'theme-switcher examples-dropdown'; // Reuse examples dropdown styling\r\n    this.dropdown.title = 'Switch editor theme';\r\n\r\n    // Add theme options\r\n    this.populateThemes();\r\n\r\n    // Set default theme\r\n    this.dropdown.value = this.currentTheme;\r\n\r\n    this.dropdown.addEventListener('change', async (e) => {\r\n      const themeValue = e.target.value;\r\n      this.logger.info('Theme dropdown changed to:', themeValue);\r\n      this.logger.info('Current theme is:', this.currentTheme);\r\n\r\n      if (themeValue && themeValue !== this.currentTheme) {\r\n        this.logger.info('Switching theme from', this.currentTheme, 'to', themeValue);\r\n        await this.switchTheme(themeValue);\r\n      } else {\r\n        this.logger.warn('Theme value is empty or same as current theme');\r\n      }\r\n    });\r\n\r\n    // Insert after the examples dropdown if it exists, otherwise after preview button\r\n    const examplesDropdown = this.container.querySelector('.examples-dropdown');\r\n    const previewLabel = this.container.querySelector('label.btn');\r\n\r\n    if (examplesDropdown) {\r\n      this.container.insertBefore(this.dropdown, examplesDropdown.nextSibling);\r\n    } else if (previewLabel) {\r\n      this.container.insertBefore(this.dropdown, previewLabel.nextSibling);\r\n    } else {\r\n      this.container.appendChild(this.dropdown);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with available themes\r\n   */\r\n  populateThemes() {\r\n    // Clear existing options\r\n    this.dropdown.innerHTML = '';\r\n\r\n    // Add theme options\r\n    this.themes.forEach(theme => {\r\n      const option = document.createElement('option');\r\n      option.value = theme.value;\r\n      option.textContent = theme.label;\r\n      this.dropdown.appendChild(option);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads an ACE theme - themes are already loaded via CDN scripts\r\n   * @param {string} themeName - The theme name to load\r\n   * @returns {Promise<void>} Promise that resolves when theme is loaded\r\n   */\r\n  async loadThemeCSS(themeName) {\r\n    // ACE themes are loaded via script tags in HTML, so we just need to verify they're available\r\n    this.logger.info('ACE theme loading for:', themeName);\r\n    \r\n    // Check if ACE is available\r\n    if (typeof ace === 'undefined') {\r\n      throw new Error('ACE editor not loaded');\r\n    }\r\n\r\n    // Check if the theme is available in ACE\r\n    try {\r\n      // Try to access the theme to see if it's loaded\r\n      const themePath = `ace/theme/${themeName}`;\r\n      if (ace.require && ace.require(themePath)) {\r\n        this.logger.info('ACE theme is available:', themeName);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('ACE theme may not be loaded:', themeName, error);\r\n    }\r\n\r\n    // For now, we'll assume themes are loaded via CDN scripts\r\n    // In a production app, you might want to dynamically load theme scripts\r\n    this.logger.info('Assuming ACE theme is available:', themeName);\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Loads saved theme from localStorage\r\n   * @returns {string|null} Saved theme name or null if not found\r\n   */\r\n  loadSavedTheme() {\r\n    try {\r\n      const savedTheme = localStorage.getItem(this.options.storageKey);\r\n      if (savedTheme && this.themes.find(t => t.value === savedTheme)) {\r\n        this.logger.info('Loaded saved theme from storage:', savedTheme);\r\n        return savedTheme;\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load saved theme:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Saves current theme to localStorage\r\n   * @param {string} themeName - Theme name to save\r\n   */\r\n  saveTheme(themeName) {\r\n    try {\r\n      localStorage.setItem(this.options.storageKey, themeName);\r\n      this.logger.info('Saved theme to storage:', themeName);\r\n    } catch (error) {\r\n      this.logger.warn('Failed to save theme:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to a new theme\r\n   * @param {string} themeName - The theme name to switch to\r\n   */\r\n  async switchTheme(themeName) {\r\n    const oldTheme = this.currentTheme;\r\n    this.currentTheme = themeName;\r\n\r\n    this.logger.info('switchTheme called: changing from', oldTheme, 'to', themeName);\r\n\r\n    // Update dropdown value\r\n    this.dropdown.value = themeName;\r\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\r\n\r\n    try {\r\n      // Load theme CSS first\r\n      await this.loadThemeCSS(themeName);\r\n\r\n      // Save theme for persistence\r\n      this.saveTheme(themeName);\r\n\r\n      // Emit theme change event for editor adapters to listen to\r\n      this.logger.info('Emitting theme change event with data:', { theme: themeName, oldTheme: oldTheme });\r\n      this.eventEmitter.emit(EVENTS.THEME_CHANGE, {\r\n        theme: themeName,\r\n        oldTheme: oldTheme\r\n      });\r\n      this.logger.info('Theme change event emitted successfully');\r\n    } catch (error) {\r\n      this.logger.error('Failed to switch theme:', error);\r\n      // Revert dropdown to old theme\r\n      this.dropdown.value = oldTheme;\r\n      this.currentTheme = oldTheme;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current theme\r\n   * @returns {string} Current theme name\r\n   */\r\n  getCurrentTheme() {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  /**\r\n   * Sets the current theme programmatically\r\n   * @param {string} themeName - The theme name to set\r\n   */\r\n  setTheme(themeName) {\r\n    if (this.themes.find(t => t.value === themeName)) {\r\n      this.switchTheme(themeName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new theme to the list\r\n   * @param {string} value - Theme value/name\r\n   * @param {string} label - Display label for the theme\r\n   */\r\n  addTheme(value, label) {\r\n    // Check if theme already exists\r\n    if (!this.themes.find(t => t.value === value)) {\r\n      this.themes.push({ value, label });\r\n      this.populateThemes();\r\n      this.dropdown.value = this.currentTheme; // Restore selection\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the theme switcher\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Editor switcher UI component\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class EditorSwitcher {\r\n  /**\r\n   * Creates a new EditorSwitcher instance\r\n   * @param {HTMLElement} container - The container element for the dropdown\r\n   * @param {Object} eventEmitter - The event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} [options.defaultEditor='ace'] - Default editor name\r\n   * @param {boolean} [options.debug=true] - Enable debug logging\r\n   */\r\n  constructor(container, eventEmitter, options = {}) {\r\n    this.container = container;\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      defaultEditor: 'ace',\r\n      debug: true,\r\n      storageKey: 'sandbox_current_editor',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'EditorSwitcher'\r\n    });\r\n\r\n    // Define available editors\r\n    this.editors = [\r\n      { value: 'ace', label: '🎯 ACE Editor', available: () => typeof ace !== 'undefined' },\r\n      { value: 'codemirror', label: '📝 CodeMirror', available: () => typeof CodeMirror !== 'undefined' },\r\n      { value: 'textarea', label: '📄 Textarea', available: () => true } // Always available\r\n    ];\r\n\r\n    // Load saved editor or use default\r\n    this.currentEditor = this.loadSavedEditor() || this.options.defaultEditor;\r\n    this.logger.info('Initializing editor switcher with editor:', this.currentEditor);\r\n\r\n    this.createDropdown();\r\n  }\r\n\r\n  /**\r\n   * Creates the editor switcher dropdown HTML structure\r\n   */\r\n  createDropdown() {\r\n    // Check if dropdown already exists in container\r\n    const existingDropdown = this.container.querySelector('.editor-switcher');\r\n    if (existingDropdown) {\r\n      existingDropdown.remove();\r\n    }\r\n\r\n    this.dropdown = document.createElement('select');\r\n    this.dropdown.className = 'editor-switcher examples-dropdown'; // Reuse examples dropdown styling\r\n    this.dropdown.title = 'Switch editor (ACE, CodeMirror, Textarea)';\r\n\r\n    // Add editor options\r\n    this.populateEditors();\r\n\r\n    // Set current editor\r\n    this.dropdown.value = this.currentEditor;\r\n\r\n    this.dropdown.addEventListener('change', async (e) => {\r\n      const editorValue = e.target.value;\r\n      this.logger.info('Editor dropdown changed to:', editorValue);\r\n      this.logger.info('Current editor is:', this.currentEditor);\r\n\r\n      if (editorValue && editorValue !== this.currentEditor) {\r\n        this.logger.info('Switching editor from', this.currentEditor, 'to', editorValue);\r\n        await this.switchEditor(editorValue);\r\n      } else {\r\n        this.logger.warn('Editor value is empty or same as current editor');\r\n      }\r\n    });\r\n\r\n    // Insert into the editor controls container\r\n    this.container.appendChild(this.dropdown);\r\n  }\r\n\r\n  /**\r\n   * Populates the dropdown with available editors\r\n   */\r\n  populateEditors() {\r\n    // Clear existing options\r\n    this.dropdown.innerHTML = '';\r\n\r\n    // Add editor options, filtering by availability\r\n    this.editors.forEach(editor => {\r\n      if (editor.available()) {\r\n        const option = document.createElement('option');\r\n        option.value = editor.value;\r\n        option.textContent = editor.label;\r\n        this.dropdown.appendChild(option);\r\n      } else {\r\n        this.logger.debug('Editor not available:', editor.value);\r\n      }\r\n    });\r\n\r\n    // If current editor is not available, fallback to first available\r\n    const availableEditors = this.editors.filter(e => e.available());\r\n    if (availableEditors.length > 0 && !this.editors.find(e => e.value === this.currentEditor)?.available()) {\r\n      this.logger.warn('Current editor not available, falling back to:', availableEditors[0].value);\r\n      this.currentEditor = availableEditors[0].value;\r\n      this.dropdown.value = this.currentEditor;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads saved editor from localStorage\r\n   * @returns {string|null} Saved editor name or null if not found\r\n   */\r\n  loadSavedEditor() {\r\n    try {\r\n      const savedEditor = localStorage.getItem(this.options.storageKey);\r\n      if (savedEditor && this.editors.find(e => e.value === savedEditor && e.available())) {\r\n        this.logger.info('Loaded saved editor from storage:', savedEditor);\r\n        return savedEditor;\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Failed to load saved editor:', error);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Saves current editor to localStorage\r\n   * @param {string} editorName - Editor name to save\r\n   */\r\n  saveEditor(editorName) {\r\n    try {\r\n      localStorage.setItem(this.options.storageKey, editorName);\r\n      this.logger.info('Saved editor to storage:', editorName);\r\n    } catch (error) {\r\n      this.logger.warn('Failed to save editor:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches to a new editor\r\n   * @param {string} editorName - The editor name to switch to\r\n   */\r\n  async switchEditor(editorName) {\r\n    const oldEditor = this.currentEditor;\r\n    this.currentEditor = editorName;\r\n\r\n    this.logger.info('switchEditor called: changing from', oldEditor, 'to', editorName);\r\n\r\n    // Update dropdown value\r\n    this.dropdown.value = editorName;\r\n    this.logger.info('Dropdown value updated to:', this.dropdown.value);\r\n\r\n    try {\r\n      // Save editor for persistence\r\n      this.saveEditor(editorName);\r\n\r\n      // Emit editor change event for controller to listen to\r\n      this.logger.info('Emitting editor change event with data:', { editor: editorName, oldEditor: oldEditor });\r\n      this.eventEmitter.emit(EVENTS.EDITOR_CHANGE, {\r\n        editor: editorName,\r\n        oldEditor: oldEditor\r\n      });\r\n      this.logger.info('Editor change event emitted successfully');\r\n    } catch (error) {\r\n      this.logger.error('Failed to switch editor:', error);\r\n      // Revert dropdown to old editor\r\n      this.dropdown.value = oldEditor;\r\n      this.currentEditor = oldEditor;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current editor\r\n   * @returns {string} Current editor name\r\n   */\r\n  getCurrentEditor() {\r\n    return this.currentEditor;\r\n  }\r\n\r\n  /**\r\n   * Sets the current editor programmatically\r\n   * @param {string} editorName - The editor name to set\r\n   */\r\n  setEditor(editorName) {\r\n    if (this.editors.find(e => e.value === editorName && e.available())) {\r\n      this.switchEditor(editorName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refreshes the editor list (useful when new editors become available)\r\n   */\r\n  refreshEditors() {\r\n    this.logger.info('Refreshing editor list');\r\n    this.populateEditors();\r\n    this.dropdown.value = this.currentEditor;\r\n  }\r\n\r\n  /**\r\n   * Destroys the editor switcher\r\n   */\r\n  destroy() {\r\n    if (this.dropdown && this.dropdown.parentNode) {\r\n      this.dropdown.parentNode.removeChild(this.dropdown);\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Fullscreen manager for toggling between editor and console views\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class FullscreenManager {\r\n  /**\r\n   * Creates a new FullscreenManager instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(eventEmitter, options = {}) {\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      debug: false,\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'FullscreenManager'\r\n    });\r\n\r\n    this.currentMode = null; // null, 'editor', 'console'\r\n    this.appElement = null;\r\n    this.elements = {};\r\n    this.isChanging = false; // Recursion guard\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Initializes the fullscreen manager with DOM elements\r\n   * @param {Object} elements - DOM elements\r\n   * @param {HTMLElement} elements.app - Main app container\r\n   * @param {HTMLElement} elements.fullscreenEditor - Editor fullscreen button\r\n   * @param {HTMLElement} elements.fullscreenConsole - Console fullscreen button\r\n   */\r\n  init(elements) {\r\n    this.appElement = elements.app;\r\n    this.elements = elements;\r\n\r\n    this.logger.info('Fullscreen manager initialized');\r\n\r\n    // Add click listeners to fullscreen buttons\r\n    if (this.elements.fullscreenEditor) {\r\n      this.elements.fullscreenEditor.addEventListener('click', () => {\r\n        this.toggleFullscreen('editor');\r\n      });\r\n    }\r\n\r\n    if (this.elements.fullscreenConsole) {\r\n      this.elements.fullscreenConsole.addEventListener('click', () => {\r\n        this.toggleFullscreen('console');\r\n      });\r\n    }\r\n\r\n    // Add keyboard shortcut (F11 or Escape)\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'F11') {\r\n        e.preventDefault();\r\n        this.toggleFullscreen();\r\n      } else if (e.key === 'Escape' && this.currentMode) {\r\n        this.exitFullscreen();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for fullscreen events\r\n   */\r\n  setupEventListeners() {\r\n    this.eventEmitter.on(EVENTS.FULLSCREEN_TOGGLE, (mode) => {\r\n      this.toggleFullscreen(mode);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.FULLSCREEN_EXIT, () => {\r\n      this.exitFullscreen();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggles fullscreen mode for specified pane\r\n   * @param {string} [mode] - 'editor', 'console', or null to cycle\r\n   */\r\n  toggleFullscreen(mode) {\r\n    if (!this.appElement) {\r\n      this.logger.warn('App element not initialized');\r\n      return;\r\n    }\r\n\r\n    // If no mode specified, cycle through modes\r\n    if (!mode) {\r\n      if (this.currentMode === null) {\r\n        mode = 'editor';\r\n      } else if (this.currentMode === 'editor') {\r\n        mode = 'console';\r\n      } else {\r\n        mode = null; // exit fullscreen\r\n      }\r\n    }\r\n\r\n    // If same mode is clicked, exit fullscreen\r\n    if (mode === this.currentMode) {\r\n      mode = null;\r\n    }\r\n\r\n    this.setFullscreenMode(mode);\r\n  }\r\n\r\n  /**\r\n   * Sets the fullscreen mode\r\n   * @param {string|null} mode - 'editor', 'console', or null for normal view\r\n   */\r\n  setFullscreenMode(mode) {\r\n    if (!this.appElement) return;\r\n\r\n    // Prevent recursion: if we're already changing or in the target mode, don't do anything\r\n    if (this.isChanging || mode === this.currentMode) return;\r\n\r\n    this.isChanging = true;\r\n    const previousMode = this.currentMode;\r\n\r\n    try {\r\n      // Remove all fullscreen classes\r\n      this.appElement.classList.remove('fullscreen-editor', 'fullscreen-console');\r\n\r\n      // Update button states\r\n      this.updateButtonStates(null);\r\n\r\n      if (mode) {\r\n        // Add appropriate fullscreen class\r\n        this.appElement.classList.add(`fullscreen-${mode}`);\r\n        this.updateButtonStates(mode);\r\n\r\n        this.logger.info(`Entering fullscreen mode: ${mode}`);\r\n        this.eventEmitter.emit(`FULLSCREEN_${mode.toUpperCase()}`, { mode });\r\n      } else if (previousMode) {\r\n        // Only emit exit event if we were actually in fullscreen before\r\n        this.logger.info('Exiting fullscreen mode');\r\n        this.eventEmitter.emit(EVENTS.FULLSCREEN_EXIT, { previousMode });\r\n      }\r\n\r\n      this.currentMode = mode;\r\n    } finally {\r\n      // Always clear the changing flag\r\n      this.isChanging = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates button states based on current mode\r\n   * @param {string|null} activeMode - Current active mode\r\n   */\r\n  updateButtonStates(activeMode) {\r\n    // Update editor button\r\n    if (this.elements.fullscreenEditor) {\r\n      if (activeMode === 'editor') {\r\n        this.elements.fullscreenEditor.textContent = '◱'; // Exit symbol\r\n        this.elements.fullscreenEditor.title = 'Exit Fullscreen';\r\n      } else {\r\n        this.elements.fullscreenEditor.textContent = '⛶'; // Fullscreen symbol\r\n        this.elements.fullscreenEditor.title = 'Fullscreen Editor';\r\n      }\r\n    }\r\n\r\n    // Update console button\r\n    if (this.elements.fullscreenConsole) {\r\n      if (activeMode === 'console') {\r\n        this.elements.fullscreenConsole.textContent = '◱'; // Exit symbol\r\n        this.elements.fullscreenConsole.title = 'Exit Fullscreen';\r\n      } else {\r\n        this.elements.fullscreenConsole.textContent = '⛶'; // Fullscreen symbol\r\n        this.elements.fullscreenConsole.title = 'Fullscreen Console';\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Exits fullscreen mode\r\n   */\r\n  exitFullscreen() {\r\n    this.setFullscreenMode(null);\r\n  }\r\n\r\n  /**\r\n   * Gets the current fullscreen mode\r\n   * @returns {string|null} Current mode or null\r\n   */\r\n  getCurrentMode() {\r\n    return this.currentMode;\r\n  }\r\n\r\n  /**\r\n   * Checks if currently in fullscreen\r\n   * @returns {boolean} True if in fullscreen mode\r\n   */\r\n  isFullscreen() {\r\n    return this.currentMode !== null;\r\n  }\r\n\r\n  /**\r\n   * Destroys the fullscreen manager\r\n   */\r\n  destroy() {\r\n    this.exitFullscreen();\r\n    this.logger.info('Fullscreen manager destroyed');\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Library Manager - Handles CDN library loading with user-controlled allowlists\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class LibraryManager {\r\n  /**\r\n   * Creates a new LibraryManager instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.storageKey='sandbox_libraries'] - localStorage key\r\n   */\r\n  constructor(eventEmitter, options = {}) {\r\n    this.eventEmitter = eventEmitter;\r\n    this.options = {\r\n      debug: false,\r\n      storageKey: 'sandbox_libraries',\r\n      allowlistKey: 'sandbox_allowed_domains',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'LibraryManager'\r\n    });\r\n\r\n    // Force a log message to test if logging is working\r\n    console.log('🔧 LibraryManager created with debug:', this.options.debug);\r\n\r\n    // Default trusted CDN domains\r\n    this.defaultDomains = [\r\n      'cdnjs.cloudflare.com',\r\n      'unpkg.com',\r\n      'jsdelivr.net',\r\n      'code.jquery.com',\r\n      'stackpath.bootstrapcdn.com'\r\n    ];\r\n\r\n    this.libraries = [];\r\n    this.allowedDomains = [];\r\n    this.libraryCache = new Map(); // Cache for fetched library content\r\n\r\n    this.loadFromStorage();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for library management\r\n   */\r\n  setupEventListeners() {\r\n    this.eventEmitter.on(EVENTS.LIBRARY_ADD, (data) => {\r\n      this.addLibrary(data.url, data.name);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVE, (data) => {\r\n      this.removeLibrary(data.id);\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\r\n      this.addDomain(data.domain);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads libraries and allowed domains from localStorage\r\n   */\r\n  loadFromStorage() {\r\n    this.logger.debug('Loading library data from localStorage...');\r\n\r\n    try {\r\n      // Load libraries\r\n      this.logger.debug(`Checking localStorage for key: ${this.options.storageKey}`);\r\n      const librariesData = localStorage.getItem(this.options.storageKey);\r\n      this.libraries = librariesData ? JSON.parse(librariesData) : [];\r\n      this.logger.debug(`Loaded ${this.libraries.length} libraries from storage`);\r\n\r\n      // Load allowed domains (merge with defaults)\r\n      this.logger.debug(`Checking localStorage for key: ${this.options.allowlistKey}`);\r\n      const domainsData = localStorage.getItem(this.options.allowlistKey);\r\n      const savedDomains = domainsData ? JSON.parse(domainsData) : [];\r\n      this.allowedDomains = [...new Set([...this.defaultDomains, ...savedDomains])];\r\n\r\n      this.logger.debug(`Merged domains - defaults: ${this.defaultDomains.length}, saved: ${savedDomains.length}, total: ${this.allowedDomains.length}`);\r\n      this.logger.info(`Storage load complete: ${this.libraries.length} libraries, ${this.allowedDomains.length} allowed domains`);\r\n\r\n      // Log library names for debugging\r\n      if (this.libraries.length > 0) {\r\n        this.logger.debug('Loaded libraries:', this.libraries.map(lib => lib.name).join(', '));\r\n      }\r\n    } catch (error) {\r\n      this.logger.error('Failed to load from storage:', error);\r\n      this.logger.warn('Falling back to empty state with default domains');\r\n      this.libraries = [];\r\n      this.allowedDomains = [...this.defaultDomains];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves libraries to localStorage\r\n   */\r\n  saveLibraries() {\r\n    this.logger.debug(`Saving ${this.libraries.length} libraries to localStorage...`);\r\n    try {\r\n      const serialized = JSON.stringify(this.libraries);\r\n      localStorage.setItem(this.options.storageKey, serialized);\r\n      this.logger.debug(`Libraries saved successfully (${serialized.length} chars)`);\r\n    } catch (error) {\r\n      this.logger.error('Failed to save libraries to localStorage:', error);\r\n      if (error.name === 'QuotaExceededError') {\r\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves allowed domains to localStorage\r\n   */\r\n  saveDomains() {\r\n    // Only save non-default domains to avoid bloating storage\r\n    const customDomains = this.allowedDomains.filter(\r\n      domain => !this.defaultDomains.includes(domain)\r\n    );\r\n\r\n    this.logger.debug(`Saving ${customDomains.length} custom domains to localStorage...`);\r\n    try {\r\n      const serialized = JSON.stringify(customDomains);\r\n      localStorage.setItem(this.options.allowlistKey, serialized);\r\n      this.logger.debug(`Custom domains saved successfully: [${customDomains.join(', ')}]`);\r\n    } catch (error) {\r\n      this.logger.error('Failed to save domains to localStorage:', error);\r\n      if (error.name === 'QuotaExceededError') {\r\n        this.logger.warn('localStorage quota exceeded - consider clearing old data');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates a unique ID for a library\r\n   * @returns {string} Unique identifier\r\n   */\r\n  generateId() {\r\n    return 'lib_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  /**\r\n   * Extracts domain from URL\r\n   * @param {string} url - The URL to extract domain from\r\n   * @returns {string|null} Domain or null if invalid\r\n   */\r\n  extractDomain(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.hostname;\r\n    } catch (error) {\r\n      this.logger.warn('Invalid URL provided:', url);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts library name from URL (best guess)\r\n   * @param {string} url - The library URL\r\n   * @returns {string} Guessed library name\r\n   */\r\n  guessLibraryName(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const pathname = urlObj.pathname;\r\n\r\n      // Extract filename without extension\r\n      const filename = pathname.split('/').pop();\r\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\r\n\r\n      // Common library name patterns\r\n      const patterns = [\r\n        /^(.+?)[-.][\\d]/,  // name-version or name.version\r\n        /^(.+?)\\.min$/,    // name.min\r\n        /^(.+?)$/          // fallback to full name\r\n      ];\r\n\r\n      for (const pattern of patterns) {\r\n        const match = nameWithoutExt.match(pattern);\r\n        if (match && match[1]) {\r\n          return match[1].charAt(0).toUpperCase() + match[1].slice(1);\r\n        }\r\n      }\r\n\r\n      return nameWithoutExt || 'Unknown Library';\r\n    } catch (error) {\r\n      return 'Unknown Library';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts version from URL (best guess)\r\n   * @param {string} url - The library URL\r\n   * @returns {string|null} Version string or null if not found\r\n   */\r\n  extractVersionFromUrl(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const pathname = urlObj.pathname;\r\n\r\n      // Extract filename without extension\r\n      const filename = pathname.split('/').pop();\r\n      const nameWithoutExt = filename.replace(/\\.(min\\.)?js$/, '');\r\n\r\n      // Version extraction patterns\r\n      const versionPatterns = [\r\n        /[-.](\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)/,  // semantic version (e.g., jquery-3.6.0.min.js)\r\n        /[-.](\\d+\\.\\d+\\.\\d+)/,                              // x.y.z version\r\n        /[-.](\\d+\\.\\d+)/,                                   // x.y version\r\n        /\\/(\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?(?:-[a-zA-Z0-9]+)*)\\//  // version in path (e.g., /3.6.0/)\r\n      ];\r\n\r\n      for (const pattern of versionPatterns) {\r\n        const match = url.match(pattern) || nameWithoutExt.match(pattern);\r\n        if (match && match[1]) {\r\n          return match[1];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a domain is in the allowed list\r\n   * @param {string} domain - Domain to check\r\n   * @returns {boolean} True if domain is allowed\r\n   */\r\n  isDomainAllowed(domain) {\r\n    return this.allowedDomains.includes(domain);\r\n  }\r\n\r\n  /**\r\n   * Validates a library URL\r\n   * @param {string} url - URL to validate\r\n   * @returns {Object} Validation result with status and domain\r\n   */\r\n  validateLibraryUrl(url) {\r\n    if (!url || typeof url !== 'string') {\r\n      return { valid: false, error: 'URL is required' };\r\n    }\r\n\r\n    // Basic URL validation\r\n    const domain = this.extractDomain(url);\r\n    if (!domain) {\r\n      return { valid: false, error: 'Invalid URL format' };\r\n    }\r\n\r\n    // Check if URL points to a JavaScript file\r\n    if (!url.match(/\\.js(\\?.*)?$/i)) {\r\n      return { valid: false, error: 'URL must point to a JavaScript file (.js)' };\r\n    }\r\n\r\n    // Check if domain is allowed\r\n    const domainAllowed = this.isDomainAllowed(domain);\r\n\r\n    return {\r\n      valid: true,\r\n      domain,\r\n      domainAllowed,\r\n      needsDomainApproval: !domainAllowed\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Adds a library to the collection\r\n   * @param {string} url - Library URL\r\n   * @param {string} [name] - Optional library name (will be guessed if not provided)\r\n   * @returns {Object} Result object with success status\r\n   */\r\n  addLibrary(url, name = null) {\r\n    const validation = this.validateLibraryUrl(url);\r\n\r\n    if (!validation.valid) {\r\n      this.logger.warn('Library validation failed:', validation.error);\r\n      return { success: false, error: validation.error };\r\n    }\r\n\r\n    // Check if library already exists\r\n    const existing = this.libraries.find(lib => lib.url === url);\r\n    if (existing) {\r\n      this.logger.warn('Library already exists:', url);\r\n      return { success: false, error: 'Library already added' };\r\n    }\r\n\r\n    // Check domain approval\r\n    if (validation.needsDomainApproval) {\r\n      this.logger.info('Domain approval needed for:', validation.domain);\r\n      this.eventEmitter.emit(EVENTS.DOMAIN_TRUST_REQUEST, {\r\n        domain: validation.domain,\r\n        url,\r\n        name: name || this.guessLibraryName(url)\r\n      });\r\n      return { success: false, needsApproval: true, domain: validation.domain };\r\n    }\r\n\r\n    // Add the library\r\n    const library = {\r\n      id: this.generateId(),\r\n      name: name || this.guessLibraryName(url),\r\n      url: url.trim(),\r\n      domain: validation.domain,\r\n      addedAt: new Date().toISOString()\r\n    };\r\n\r\n    this.libraries.push(library);\r\n    this.saveLibraries();\r\n\r\n    this.logger.info('Library added:', library.name);\r\n    this.eventEmitter.emit(EVENTS.LIBRARY_ADDED, { library });\r\n\r\n    return { success: true, library };\r\n  }\r\n\r\n  /**\r\n   * Removes a library by ID\r\n   * @param {string} id - Library ID to remove\r\n   * @returns {boolean} True if library was removed\r\n   */\r\n  removeLibrary(id) {\r\n    const index = this.libraries.findIndex(lib => lib.id === id);\r\n    if (index === -1) {\r\n      this.logger.warn('Library not found for removal:', id);\r\n      return false;\r\n    }\r\n\r\n    const removed = this.libraries.splice(index, 1)[0];\r\n    this.saveLibraries();\r\n\r\n    this.logger.info('Library removed:', removed.name);\r\n    this.eventEmitter.emit(EVENTS.LIBRARY_REMOVED, { library: removed });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Adds a domain to the allowed list\r\n   * @param {string} domain - Domain to add\r\n   * @returns {boolean} True if domain was added\r\n   */\r\n  addDomain(domain) {\r\n    if (!domain || this.allowedDomains.includes(domain)) {\r\n      return false;\r\n    }\r\n\r\n    this.allowedDomains.push(domain);\r\n    this.saveDomains();\r\n\r\n    this.logger.info('Domain added to allowlist:', domain);\r\n    this.eventEmitter.emit(EVENTS.DOMAIN_ADDED, { domain });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Removes a domain from the allowed list (if not default)\r\n   * @param {string} domain - Domain to remove\r\n   * @returns {boolean} True if domain was removed\r\n   */\r\n  removeDomain(domain) {\r\n    if (this.defaultDomains.includes(domain)) {\r\n      this.logger.warn('Cannot remove default domain:', domain);\r\n      return false;\r\n    }\r\n\r\n    const index = this.allowedDomains.indexOf(domain);\r\n    if (index === -1) {\r\n      return false;\r\n    }\r\n\r\n    this.allowedDomains.splice(index, 1);\r\n    this.saveDomains();\r\n\r\n    this.logger.info('Domain removed from allowlist:', domain);\r\n    this.eventEmitter.emit(EVENTS.DOMAIN_REMOVED, { domain });\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Gets all libraries\r\n   * @returns {Array} Array of library objects\r\n   */\r\n  getLibraries() {\r\n    return [...this.libraries];\r\n  }\r\n\r\n  /**\r\n   * Gets all allowed domains\r\n   * @returns {Array} Array of allowed domains\r\n   */\r\n  getAllowedDomains() {\r\n    return [...this.allowedDomains];\r\n  }\r\n\r\n  /**\r\n   * Fetches library content and generates inline script tags\r\n   * @returns {Promise<string>} HTML script tags with inline content\r\n   */\r\n  async generateScriptTags() {\r\n    if (this.libraries.length === 0) {\r\n      this.logger.debug('No libraries to generate scripts for');\r\n      return '';\r\n    }\r\n\r\n    this.logger.info(`Fetching content for ${this.libraries.length} libraries...`);\r\n    const scripts = [];\r\n\r\n    for (const lib of this.libraries) {\r\n      try {\r\n        let content;\r\n\r\n        // Check cache first\r\n        if (this.libraryCache.has(lib.url)) {\r\n          this.logger.debug(`Using cached content for: ${lib.name}`);\r\n          content = this.libraryCache.get(lib.url);\r\n        } else {\r\n          this.logger.debug(`Fetching library: ${lib.name} from ${lib.url}`);\r\n\r\n          const response = await fetch(lib.url);\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n          }\r\n\r\n          content = await response.text();\r\n          this.logger.debug(`Fetched ${lib.name}: ${content.length} characters`);\r\n\r\n          // Cache the content\r\n          this.libraryCache.set(lib.url, content);\r\n        }\r\n\r\n        // Create clean inline script with library content\r\n        scripts.push(`  <script data-library=\"${lib.name}\">\r\n/* Library: ${lib.name} */\r\n/* Source: ${lib.url} */\r\n/* Cached: ${new Date().toISOString()} */\r\n${content}\r\n</script>`);\r\n\r\n        this.logger.info(`✅ Successfully loaded library: ${lib.name}`);\r\n      } catch (error) {\r\n        this.logger.error(`❌ Failed to fetch library ${lib.name}:`, error.message);\r\n\r\n        // Add error placeholder script\r\n        scripts.push(`  <script data-library=\"${lib.name}\">\r\n/* Library: ${lib.name} - FAILED TO LOAD */\r\n/* Error: ${error.message} */\r\n/* URL: ${lib.url} */\r\nconsole.error('Failed to load library ${lib.name}: ${error.message}');\r\n</script>`);\r\n      }\r\n    }\r\n\r\n    const result = scripts.join('\\n');\r\n\r\n    // Enhanced logging for library injection\r\n    if (this.libraries.length > 0) {\r\n      const libraryNames = this.libraries.map(lib => lib.name).join(', ');\r\n      this.logger.info(`📚 Injecting ${this.libraries.length} libraries into sandbox: ${libraryNames}`);\r\n\r\n      // Log each library with detailed info including version detection\r\n      this.libraries.forEach(lib => {\r\n        const scriptSize = scripts.find(s => s.includes(`data-library=\"${lib.name}\"`))?.length || 0;\r\n        const version = this.extractVersionFromUrl(lib.url);\r\n        const versionInfo = version ? ` v${version}` : '';\r\n        this.logger.debug(`  → ${lib.name}${versionInfo}: ${(scriptSize / 1024).toFixed(1)}KB from ${lib.url}`);\r\n      });\r\n\r\n      this.logger.info(`📦 Total script injection size: ${(result.length / 1024).toFixed(1)}KB`);\r\n    } else {\r\n      this.logger.debug('No libraries to inject into sandbox');\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates dynamic CSP policy with allowed domains\r\n   * @returns {string} CSP policy string\r\n   */\r\n  generateCSP() {\r\n    const scriptSrc = [\r\n      \"'self'\",\r\n      \"'unsafe-inline'\",\r\n      \"'unsafe-eval'\",\r\n      ...this.allowedDomains.map(domain => `https://${domain}`)\r\n    ].join(' ');\r\n\r\n    return `default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; script-src ${scriptSrc}; connect-src 'none';`;\r\n  }\r\n\r\n  /**\r\n   * Gets library statistics\r\n   * @returns {Object} Statistics object\r\n   */\r\n  getStats() {\r\n    return {\r\n      libraryCount: this.libraries.length,\r\n      domainCount: this.allowedDomains.length,\r\n      customDomainCount: this.allowedDomains.length - this.defaultDomains.length\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clears all libraries and custom domains\r\n   */\r\n  clear() {\r\n    this.libraries = [];\r\n    this.allowedDomains = [...this.defaultDomains];\r\n\r\n    localStorage.removeItem(this.options.storageKey);\r\n    localStorage.removeItem(this.options.allowlistKey);\r\n\r\n    this.logger.info('All libraries and custom domains cleared');\r\n    this.eventEmitter.emit(EVENTS.LIBRARIES_CLEARED);\r\n  }\r\n\r\n  /**\r\n   * Test method to verify logging is working\r\n   */\r\n  testLogging() {\r\n    console.log('🧪 LibraryManager test logging - debug enabled:', this.options.debug);\r\n    this.logger.debug('This is a debug message');\r\n    this.logger.info('This is an info message');\r\n    this.logger.warn('This is a warn message');\r\n    this.logger.error('This is an error message');\r\n  }\r\n\r\n  /**\r\n   * Destroys the library manager\r\n   */\r\n  destroy() {\r\n    this.libraries = [];\r\n    this.allowedDomains = [];\r\n    this.logger.info('Library manager destroyed');\r\n  }\r\n}","import { Logger } from '../core/logger.js';\r\n\r\n/**\r\n * Base Dialog - Reusable dialog foundation with neon glow effects\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class BaseDialog {\r\n  /**\r\n   * Creates a new BaseDialog instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} options.title - Dialog title\r\n   * @param {string} [options.className=''] - Additional CSS classes\r\n   * @param {boolean} [options.modal=true] - Whether dialog is modal\r\n   * @param {boolean} [options.closeOnBackdrop=true] - Close on backdrop click\r\n   * @param {boolean} [options.closeOnEscape=true] - Close on Escape key\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.logPrefix='BaseDialog'] - Logger prefix\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      title: 'Dialog',\r\n      className: '',\r\n      modal: true,\r\n      closeOnBackdrop: true,\r\n      closeOnEscape: true,\r\n      debug: false,\r\n      logPrefix: 'BaseDialog',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: this.options.logPrefix\r\n    });\r\n\r\n    this.dialog = null;\r\n    this.content = null;\r\n    this.isOpen = false;\r\n    this.closeButton = null;\r\n\r\n    this.logger.debug('BaseDialog instance created with options:', this.options);\r\n    this.createDialog();\r\n  }\r\n\r\n  /**\r\n   * Creates the base dialog structure\r\n   */\r\n  createDialog() {\r\n    this.logger.debug('Creating dialog structure...');\r\n\r\n    // Create dialog element\r\n    this.dialog = document.createElement('dialog');\r\n    this.dialog.className = `base-dialog ${this.options.className}`.trim();\r\n\r\n    // Create dialog content wrapper\r\n    this.content = document.createElement('div');\r\n    this.content.className = 'dialog-content';\r\n\r\n    // Create header\r\n    const header = document.createElement('header');\r\n    header.className = 'dialog-header';\r\n    header.innerHTML = `\r\n      <h3 class=\"dialog-title\">${this.options.title}</h3>\r\n      <button class=\"close-btn\" title=\"Close\">×</button>\r\n    `;\r\n\r\n    // Cache close button reference\r\n    this.closeButton = header.querySelector('.close-btn');\r\n\r\n    // Create body container (to be populated by subclasses)\r\n    const body = document.createElement('div');\r\n    body.className = 'dialog-body';\r\n\r\n    // Assemble dialog\r\n    this.content.appendChild(header);\r\n    this.content.appendChild(body);\r\n    this.dialog.appendChild(this.content);\r\n\r\n    // Add to document\r\n    document.body.appendChild(this.dialog);\r\n\r\n    this.logger.debug('Dialog structure created and added to DOM');\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up base event listeners\r\n   */\r\n  setupEventListeners() {\r\n    this.logger.debug('Setting up base event listeners...');\r\n\r\n    // Close button\r\n    if (this.closeButton) {\r\n      this.closeButton.addEventListener('click', () => {\r\n        this.logger.debug('Close button clicked');\r\n        this.close();\r\n      });\r\n    }\r\n\r\n    // Backdrop click\r\n    if (this.options.closeOnBackdrop) {\r\n      this.dialog.addEventListener('click', (e) => {\r\n        if (e.target === this.dialog) {\r\n          this.logger.debug('Backdrop clicked, closing dialog');\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    // Escape key\r\n    if (this.options.closeOnEscape) {\r\n      this.dialog.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Escape') {\r\n          this.logger.debug('Escape key pressed, closing dialog');\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.logger.debug('Base event listeners configured');\r\n  }\r\n\r\n  /**\r\n   * Gets the dialog body element for content injection\r\n   * @returns {HTMLElement} The dialog body element\r\n   */\r\n  getBody() {\r\n    return this.content.querySelector('.dialog-body');\r\n  }\r\n\r\n  /**\r\n   * Sets the dialog title\r\n   * @param {string} title - New title\r\n   */\r\n  setTitle(title) {\r\n    this.logger.debug(`Setting dialog title to: \"${title}\"`);\r\n    const titleElement = this.content.querySelector('.dialog-title');\r\n    if (titleElement) {\r\n      titleElement.textContent = title;\r\n      this.options.title = title;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens the dialog\r\n   * @param {Object} [options={}] - Open options\r\n   * @param {boolean} [options.focus=true] - Whether to focus the dialog\r\n   */\r\n  open(options = {}) {\r\n    const { focus = true } = options;\r\n\r\n    if (this.isOpen) {\r\n      this.logger.warn('Dialog is already open');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Opening dialog...');\r\n\r\n    // Call pre-open hook\r\n    this.onBeforeOpen();\r\n\r\n    // Show dialog\r\n    if (this.options.modal) {\r\n      this.dialog.showModal();\r\n    } else {\r\n      this.dialog.show();\r\n    }\r\n\r\n    this.isOpen = true;\r\n\r\n    // Focus management\r\n    if (focus) {\r\n      setTimeout(() => {\r\n        this.dialog.focus();\r\n        this.onFocus();\r\n      }, 100);\r\n    }\r\n\r\n    // Call post-open hook\r\n    this.onAfterOpen();\r\n\r\n    this.logger.info('Dialog opened successfully');\r\n  }\r\n\r\n  /**\r\n   * Closes the dialog\r\n   */\r\n  close() {\r\n    if (!this.isOpen) {\r\n      this.logger.warn('Dialog is already closed');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Closing dialog...');\r\n\r\n    // Call pre-close hook\r\n    this.onBeforeClose();\r\n\r\n    this.dialog.close();\r\n    this.isOpen = false;\r\n\r\n    // Call post-close hook\r\n    this.onAfterClose();\r\n\r\n    this.logger.info('Dialog closed successfully');\r\n  }\r\n\r\n  /**\r\n   * Toggles the dialog open/closed state\r\n   */\r\n  toggle() {\r\n    this.logger.debug('Toggling dialog state');\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if dialog is currently open\r\n   * @returns {boolean} True if dialog is open\r\n   */\r\n  isDialogOpen() {\r\n    return this.isOpen;\r\n  }\r\n\r\n  /**\r\n   * Adds content to the dialog body\r\n   * @param {string|HTMLElement} content - Content to add\r\n   */\r\n  setContent(content) {\r\n    this.logger.debug('Setting dialog content...');\r\n    const body = this.getBody();\r\n\r\n    if (typeof content === 'string') {\r\n      body.innerHTML = content;\r\n    } else if (content instanceof HTMLElement) {\r\n      body.innerHTML = '';\r\n      body.appendChild(content);\r\n    }\r\n\r\n    this.logger.debug('Dialog content updated');\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS class to the dialog\r\n   * @param {string} className - Class name to add\r\n   */\r\n  addClass(className) {\r\n    this.logger.debug(`Adding class: ${className}`);\r\n    this.dialog.classList.add(className);\r\n  }\r\n\r\n  /**\r\n   * Removes a CSS class from the dialog\r\n   * @param {string} className - Class name to remove\r\n   */\r\n  removeClass(className) {\r\n    this.logger.debug(`Removing class: ${className}`);\r\n    this.dialog.classList.remove(className);\r\n  }\r\n\r\n  // Lifecycle hooks (to be overridden by subclasses)\r\n\r\n  /**\r\n   * Called before dialog opens\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onBeforeOpen() {\r\n    this.logger.debug('onBeforeOpen hook called');\r\n  }\r\n\r\n  /**\r\n   * Called after dialog opens\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onAfterOpen() {\r\n    this.logger.debug('onAfterOpen hook called');\r\n  }\r\n\r\n  /**\r\n   * Called when dialog receives focus\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onFocus() {\r\n    this.logger.debug('onFocus hook called');\r\n  }\r\n\r\n  /**\r\n   * Called before dialog closes\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onBeforeClose() {\r\n    this.logger.debug('onBeforeClose hook called');\r\n  }\r\n\r\n  /**\r\n   * Called after dialog closes\r\n   * Override in subclasses for custom behavior\r\n   */\r\n  onAfterClose() {\r\n    this.logger.debug('onAfterClose hook called');\r\n  }\r\n\r\n  /**\r\n   * Destroys the dialog and cleans up resources\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying dialog...');\r\n\r\n    if (this.isOpen) {\r\n      this.close();\r\n    }\r\n\r\n    if (this.dialog) {\r\n      this.dialog.remove();\r\n      this.dialog = null;\r\n    }\r\n\r\n    this.content = null;\r\n    this.closeButton = null;\r\n    this.isOpen = false;\r\n\r\n    this.logger.info('Dialog destroyed successfully');\r\n  }\r\n}","import { BaseDialog } from '../ui/base-dialog.js';\r\nimport { EVENTS } from '../core/constants.js';\r\n\r\n/**\r\n * Library Manager Dialog - UI for managing runtime libraries\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class LibraryDialog extends BaseDialog {\r\n  /**\r\n   * Creates a new LibraryDialog instance\r\n   * @param {Object} eventEmitter - Event emitter instance\r\n   * @param {Object} libraryManager - Library manager instance\r\n   * @param {Object} options - Configuration options\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(eventEmitter, libraryManager, options = {}) {\r\n    // Call parent constructor with dialog-specific options\r\n    super({\r\n      title: 'Runtime Libraries',\r\n      className: 'library-dialog',\r\n      debug: options.debug || false,\r\n      logPrefix: 'LibraryDialog',\r\n      ...options\r\n    });\r\n\r\n    this.eventEmitter = eventEmitter;\r\n    this.libraryManager = libraryManager;\r\n\r\n    this.urlInput = null;\r\n    this.addBtn = null;\r\n    this.libraryList = null;\r\n\r\n    // Force a log message to test if logging is working\r\n    console.log('🔧 LibraryDialog created with debug:', this.options.debug);\r\n\r\n    this.logger.info('LibraryDialog initializing...');\r\n    this.createLibraryContent();\r\n    this.setupLibraryEventListeners();\r\n    this.logger.info('LibraryDialog initialization complete');\r\n  }\r\n\r\n  /**\r\n   * Creates the library-specific content for the dialog\r\n   */\r\n  createLibraryContent() {\r\n    this.logger.debug('Creating library-specific dialog content...');\r\n\r\n    const body = this.getBody();\r\n    body.innerHTML = `\r\n      <section class=\"current-libraries\">\r\n        <p class=\"descriptor\">Manage libraries loaded into the sandbox environment</p>\r\n        <div class=\"library-list\">\r\n          <div class=\"empty-state\">\r\n            <span class=\"empty-icon\">📚</span>\r\n            <p>No libraries added yet</p>\r\n            <small>Add a CDN URL below to get started</small>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section class=\"add-library\">\r\n        <h4>Add Library</h4>\r\n        <p class=\"descriptor\">Paste CDN URL to add a new library to your sandbox</p>\r\n        <div class=\"input-row\">\r\n          <input type=\"url\" class=\"url-input\" placeholder=\"https://cdnjs.cloudflare.com/ajax/libs/...\">\r\n          <button class=\"add-btn\">Add</button>\r\n        </div>\r\n        <div class=\"input-feedback\"></div>\r\n      </section>\r\n    `;\r\n\r\n    // Cache element references\r\n    this.urlInput = body.querySelector('.url-input');\r\n    this.addBtn = body.querySelector('.add-btn');\r\n    this.libraryList = body.querySelector('.library-list');\r\n\r\n    // Setup library-specific event listeners\r\n    this.addBtn.addEventListener('click', () => {\r\n      this.logger.debug('Add button clicked');\r\n      this.handleAddLibrary();\r\n    });\r\n\r\n    this.urlInput.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter') {\r\n        this.logger.debug('Enter key pressed in URL input');\r\n        this.handleAddLibrary();\r\n      }\r\n    });\r\n\r\n    this.logger.debug('Library content created successfully');\r\n  }\r\n\r\n  /**\r\n   * Sets up library-specific event listeners\r\n   */\r\n  setupLibraryEventListeners() {\r\n    this.logger.debug('Setting up library event listeners...');\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_MANAGER_OPEN, () => {\r\n      this.logger.info('Received LIBRARY_MANAGER_OPEN event');\r\n      this.open();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_ADDED, (data) => {\r\n      this.logger.info('Received LIBRARY_ADDED event for:', data?.library?.name);\r\n      this.refreshLibraryList();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.LIBRARY_REMOVED, (data) => {\r\n      this.logger.info('Received LIBRARY_REMOVED event for:', data?.library?.name);\r\n      this.refreshLibraryList();\r\n    });\r\n\r\n    this.eventEmitter.on(EVENTS.DOMAIN_TRUST_REQUEST, (data) => {\r\n      this.logger.warn('Received DOMAIN_TRUST_REQUEST for domain:', data?.domain);\r\n      this.showDomainTrustDialog(data);\r\n    });\r\n\r\n    this.logger.debug('Library event listeners configured');\r\n  }\r\n\r\n  /**\r\n   * Called before dialog opens - prepare library content\r\n   */\r\n  onBeforeOpen() {\r\n    this.logger.debug('Preparing library dialog for opening...');\r\n    this.refreshLibraryList();\r\n    this.urlInput.value = '';\r\n    this.clearFeedback();\r\n  }\r\n\r\n  /**\r\n   * Called when dialog receives focus - focus URL input\r\n   */\r\n  onFocus() {\r\n    this.logger.debug('Library dialog focused, focusing URL input');\r\n    if (this.urlInput) {\r\n      this.urlInput.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called after dialog closes - clear feedback\r\n   */\r\n  onAfterClose() {\r\n    this.logger.debug('Library dialog closed, clearing feedback');\r\n    this.clearFeedback();\r\n  }\r\n\r\n  /**\r\n   * Handles adding a new library\r\n   */\r\n  handleAddLibrary() {\r\n    const url = this.urlInput.value.trim();\r\n    this.logger.debug('handleAddLibrary called with URL:', url);\r\n\r\n    if (!url) {\r\n      this.logger.warn('Add library attempted with empty URL');\r\n      this.showFeedback('Please enter a library URL', 'error');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Attempting to add library:', url);\r\n    this.showFeedback('Adding library...', 'loading');\r\n    this.addBtn.disabled = true;\r\n\r\n    // Attempt to add the library\r\n    const result = this.libraryManager.addLibrary(url);\r\n    this.logger.debug('Library manager result:', result);\r\n\r\n    if (result.success) {\r\n      this.logger.info(`Library added successfully: ${result.library.name}`);\r\n      this.showFeedback(`Added: ${result.library.name}`, 'success');\r\n      this.urlInput.value = '';\r\n      setTimeout(() => {\r\n        this.logger.debug('Clearing success feedback after timeout');\r\n        this.clearFeedback();\r\n      }, 2000);\r\n    } else if (result.needsApproval) {\r\n      this.logger.warn(`Domain approval needed for: ${result.domain}`);\r\n      this.showFeedback(`Waiting for domain approval: ${result.domain}`, 'warning');\r\n      // Dialog will be shown by domain trust request event\r\n    } else {\r\n      this.logger.error(`Failed to add library: ${result.error}`);\r\n      this.showFeedback(`Error: ${result.error}`, 'error');\r\n    }\r\n\r\n    this.addBtn.disabled = false;\r\n    this.logger.debug('Add library operation completed');\r\n  }\r\n\r\n  /**\r\n   * Shows domain trust confirmation dialog\r\n   * @param {Object} data - Domain trust data\r\n   */\r\n  showDomainTrustDialog(data) {\r\n    this.logger.info(`Showing domain trust dialog for: ${data.domain}`);\r\n\r\n    const confirmed = confirm(\r\n      `⚠️ New CDN Domain Detected\\n\\n` +\r\n      `The domain \"${data.domain}\" is not in your trusted list.\\n\\n` +\r\n      `Adding this domain will allow all scripts from:\\n` +\r\n      `https://${data.domain}\\n\\n` +\r\n      `Do you want to trust this domain?`\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.logger.info(`User confirmed trust for domain: ${data.domain}`);\r\n      this.libraryManager.addDomain(data.domain);\r\n\r\n      // Try adding the library again\r\n      this.logger.debug(`Retrying library addition for: ${data.url}`);\r\n      const result = this.libraryManager.addLibrary(data.url, data.name);\r\n\r\n      if (result.success) {\r\n        this.logger.info(`Library added after domain approval: ${result.library.name}`);\r\n        this.showFeedback(`Added: ${result.library.name}`, 'success');\r\n        this.urlInput.value = '';\r\n        setTimeout(() => {\r\n          this.logger.debug('Clearing success feedback after domain approval');\r\n          this.clearFeedback();\r\n        }, 2000);\r\n      } else {\r\n        this.logger.error(`Library addition failed after domain approval: ${result.error}`);\r\n        this.showFeedback(`Error: ${result.error}`, 'error');\r\n      }\r\n    } else {\r\n      this.logger.info(`User cancelled domain trust for: ${data.domain}`);\r\n      this.showFeedback('Library addition cancelled', 'info');\r\n      setTimeout(() => {\r\n        this.logger.debug('Clearing cancellation feedback');\r\n        this.clearFeedback();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refreshes the library list display\r\n   */\r\n  refreshLibraryList() {\r\n    this.logger.debug('Refreshing library list display...');\r\n    const libraries = this.libraryManager.getLibraries();\r\n\r\n    if (libraries.length === 0) {\r\n      this.logger.debug('No libraries found, showing empty state');\r\n      this.libraryList.innerHTML = `\r\n        <div class=\"empty-state\">\r\n          <span class=\"empty-icon\">📚</span>\r\n          <p>No libraries added yet</p>\r\n          <small>Add a CDN URL below to get started</small>\r\n        </div>\r\n      `;\r\n    } else {\r\n      this.logger.info(`Displaying ${libraries.length} libraries in list`);\r\n      this.libraryList.innerHTML = libraries.map(lib => {\r\n        this.logger.trace(`Rendering library item: ${lib.name}`);\r\n        return `\r\n          <div class=\"library-item\" data-id=\"${lib.id}\">\r\n            <div class=\"library-info\">\r\n              <span class=\"library-name\">${lib.name}</span>\r\n              <small class=\"library-url\">${lib.url}</small>\r\n            </div>\r\n            <button class=\"remove-btn\" title=\"Remove library\" data-id=\"${lib.id}\">🗑️</button>\r\n          </div>\r\n        `;\r\n      }).join('');\r\n\r\n      // Add remove button listeners\r\n      this.libraryList.querySelectorAll('.remove-btn').forEach(btn => {\r\n        btn.addEventListener('click', (e) => {\r\n          const id = e.target.dataset.id;\r\n          const library = libraries.find(lib => lib.id === id);\r\n          this.logger.info(`Remove button clicked for library: ${library?.name || id}`);\r\n          this.libraryManager.removeLibrary(id);\r\n        });\r\n      });\r\n\r\n      this.logger.debug('Remove button listeners attached to all library items');\r\n    }\r\n\r\n    this.logger.debug(`Library list refresh completed: ${libraries.length} libraries displayed`);\r\n  }\r\n\r\n  /**\r\n   * Shows feedback message\r\n   * @param {string} message - Message to show\r\n   * @param {string} type - Type of feedback (success, error, warning, info, loading)\r\n   */\r\n  showFeedback(message, type = 'info') {\r\n    this.logger.debug(`Showing ${type} feedback: ${message}`);\r\n    const feedback = this.getBody().querySelector('.input-feedback');\r\n    if (feedback) {\r\n      feedback.textContent = message;\r\n      feedback.className = `input-feedback ${type}`;\r\n    } else {\r\n      this.logger.warn('Feedback element not found in dialog body');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears feedback message\r\n   */\r\n  clearFeedback() {\r\n    this.logger.debug('Clearing feedback message');\r\n    const feedback = this.getBody().querySelector('.input-feedback');\r\n    if (feedback) {\r\n      feedback.textContent = '';\r\n      feedback.className = 'input-feedback';\r\n    }\r\n  }\r\n}","/**\r\n * Neon Glass Glow Effect Manager\r\n * Applies animated neon glass borders to UI elements\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { Logger } from '../core/logger.js';\r\n\r\nexport class NeonGlowManager {\r\n  /**\r\n   * Creates a new NeonGlowManager instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.transitionDuration=8000] - Duration for color transitions in ms\r\n   * @param {boolean} [options.autoRotate=true] - Automatically rotate colors\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      transitionDuration: 8000,\r\n      autoRotate: true,\r\n      debug: false,\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: 'info',\r\n      prefix: 'NeonGlow'\r\n    });\r\n\r\n    this.hue1 = this.randomHue();\r\n    this.hue2 = this.randomHue();\r\n    this.rotationInterval = null;\r\n    this.glowElements = new Set();\r\n  }\r\n\r\n  /**\r\n   * Generates a random hue value\r\n   * @returns {number} Hue between 0-360\r\n   */\r\n  randomHue() {\r\n    return Math.floor(Math.random() * 360);\r\n  }\r\n\r\n  /**\r\n   * Generates a complementary hue with some variance\r\n   * @param {number} baseHue - Base hue value\r\n   * @returns {number} Complementary hue\r\n   */\r\n  complementaryHue(baseHue) {\r\n    const offset = 80 + Math.floor(Math.random() * 60) - 30;\r\n    return (baseHue + offset) % 360;\r\n  }\r\n\r\n  /**\r\n   * Applies neon glow effect to an element\r\n   * @param {HTMLElement} element - Element to apply glow to\r\n   * @param {Object} [options={}] - Glow options\r\n   * @param {boolean} [options.dynamicSize=true] - Enable dynamic sizing\r\n   */\r\n  applyGlow(element, options = {}) {\r\n    const { dynamicSize = true } = options;\r\n    \r\n    // Add neon-glow class\r\n    element.classList.add('neon-glow');\r\n\r\n    // Create glow container\r\n    const glowContainer = document.createElement('div');\r\n    glowContainer.className = 'neon-glow-container';\r\n\r\n    // Create SINGLE glow element that covers entire pane\r\n    const shine = document.createElement('div');\r\n    shine.className = 'neon-shine';\r\n    glowContainer.appendChild(shine);\r\n\r\n    element.appendChild(glowContainer);\r\n    this.glowElements.add(element);\r\n\r\n    // Set up dynamic sizing if enabled\r\n    if (dynamicSize) {\r\n      this.setupDynamicSizing(element);\r\n    }\r\n\r\n    this.logger.debug('Applied glow to element:', element);\r\n  }\r\n\r\n  /**\r\n   * Sets up dynamic sizing for glow effects\r\n   * @param {HTMLElement} element - Element to set up dynamic sizing for\r\n   */\r\n  setupDynamicSizing(element) {\r\n    const updateGlowSize = () => {\r\n      const rect = element.getBoundingClientRect();\r\n      const width = rect.width;\r\n      const height = rect.height;\r\n      \r\n      // Calculate responsive gradient sizes based on element dimensions\r\n      const gradientSizeX = Math.min(width * 0.8, height * 0.8);\r\n      const gradientSizeY = Math.min(width * 0.7, height * 0.7);\r\n      \r\n      // Calculate responsive corner border sizes\r\n      const cornerSize = Math.min(width * 0.15, height * 0.15, 120);\r\n      const borderWidth = Math.max(2, width * 0.003);\r\n      const glowRadius = Math.max(6, width * 0.01);\r\n      \r\n      // Update CSS custom properties for this element\r\n      element.style.setProperty('--gradient-size-x', `${gradientSizeX}px`);\r\n      element.style.setProperty('--gradient-size-y', `${gradientSizeY}px`);\r\n      element.style.setProperty('--corner-size', `${cornerSize}px`);\r\n      element.style.setProperty('--border-width', `${borderWidth}px`);\r\n      element.style.setProperty('--glow-radius', `${glowRadius}px`);\r\n    };\r\n\r\n    // Initial sizing\r\n    updateGlowSize();\r\n\r\n    // Set up resize observer for dynamic updates\r\n    if (window.ResizeObserver) {\r\n      const resizeObserver = new ResizeObserver(() => {\r\n        updateGlowSize();\r\n      });\r\n      resizeObserver.observe(element);\r\n      \r\n      // Store observer for cleanup\r\n      element._neonResizeObserver = resizeObserver;\r\n    } else {\r\n      // Fallback to window resize for older browsers\r\n      const resizeHandler = () => updateGlowSize();\r\n      window.addEventListener('resize', resizeHandler);\r\n      element._neonResizeHandler = resizeHandler;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates CSS custom properties for hue values\r\n   * @param {number} hue1 - Primary hue\r\n   * @param {number} hue2 - Secondary hue\r\n   */\r\n  updateHues(hue1, hue2) {\r\n    this.hue1 = hue1;\r\n    this.hue2 = hue2;\r\n\r\n    document.documentElement.style.setProperty('--hue1', String(hue1));\r\n    document.documentElement.style.setProperty('--hue2', String(hue2));\r\n\r\n    this.logger.debug(`Updated hues: ${hue1}, ${hue2}`);\r\n  }\r\n\r\n  /**\r\n   * Rotates to new random colors\r\n   */\r\n  rotateColors() {\r\n    const newHue1 = this.randomHue();\r\n    const newHue2 = this.complementaryHue(newHue1);\r\n\r\n    this.logger.info(`Rotating colors: ${newHue1}, ${newHue2}`);\r\n    this.updateHues(newHue1, newHue2);\r\n  }\r\n\r\n  /**\r\n   * Starts automatic color rotation\r\n   */\r\n  startRotation() {\r\n    if (this.rotationInterval) {\r\n      this.stopRotation();\r\n    }\r\n\r\n    // Initial colors\r\n    this.rotateColors();\r\n\r\n    // Set up interval\r\n    this.rotationInterval = setInterval(() => {\r\n      this.rotateColors();\r\n    }, this.options.transitionDuration);\r\n\r\n    this.logger.info('Started color rotation');\r\n  }\r\n\r\n  /**\r\n   * Stops automatic color rotation\r\n   */\r\n  stopRotation() {\r\n    if (this.rotationInterval) {\r\n      clearInterval(this.rotationInterval);\r\n      this.rotationInterval = null;\r\n      this.logger.info('Stopped color rotation');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes glow from an element\r\n   * @param {HTMLElement} element - Element to remove glow from\r\n   */\r\n  removeGlow(element) {\r\n    element.classList.remove('neon-glow');\r\n    const container = element.querySelector('.neon-glow-container');\r\n    if (container) {\r\n      container.remove();\r\n    }\r\n    this.glowElements.delete(element);\r\n  }\r\n\r\n  /**\r\n   * Cleans up the glow manager\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying neon glow manager');\r\n    this.stopRotation();\r\n    \r\n    // Remove glow from all elements\r\n    this.glowElements.forEach(element => {\r\n      this.removeGlow(element);\r\n    });\r\n\r\n    this.glowElements.clear();\r\n  }\r\n}\r\n","import { SandboxEngine } from '../core/sandbox.js';\r\nimport { ConsoleOutput } from '../core/console.js';\r\nimport { Storage } from '../core/storage.js';\r\nimport { Logger } from '../core/logger.js';\r\nimport { EventEmitter } from '../core/events.js';\r\nimport { ExamplesLoader } from './examples.js';\r\nimport { ExamplesDropdown } from './examples-dropdown.js';\r\nimport { ThemeSwitcher } from './theme-switcher.js';\r\nimport { EditorSwitcher } from './editor-switcher.js';\r\nimport { FullscreenManager } from './fullscreen.js';\r\nimport { LibraryManager } from '../libraries/manager.js';\r\nimport { LibraryDialog } from '../libraries/dialog.js';\r\nimport { createHorizontalResizeHandler, createVerticalResizeHandler } from './resize-utils.js';\r\nimport { isMobile } from '../core/utils.js';\r\nimport { NeonGlowManager } from './neon.js';\r\nimport { \r\n  DEFAULT_TIMEOUT_MS, \r\n  DEFAULT_STORAGE_KEY, \r\n  EVENTS, \r\n  STATUS_MESSAGES,\r\n  MOBILE_BREAKPOINT \r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Main controller that orchestrates the sandbox application components\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class SandboxController {\r\n  /**\r\n   * Creates a new SandboxController instance\r\n   * @param {Object} [options={}] - Configuration options\r\n   * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n   * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n   * @param {string} [options.defaultCode] - Default code to load\r\n   * @param {boolean} [options.debug=false] - Enable debug logging\r\n   * @param {string} [options.logLevel='info'] - Log level for debugging\r\n   */\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      timeLimit: DEFAULT_TIMEOUT_MS,\r\n      storageKey: DEFAULT_STORAGE_KEY,\r\n      defaultCode: this.getDefaultCode(),\r\n      debug: false,\r\n      logLevel: 'info',\r\n      ...options\r\n    };\r\n\r\n    this.logger = new Logger({\r\n      enabled: this.options.debug,\r\n      level: this.options.logLevel,\r\n      prefix: 'Controller'\r\n    });\r\n\r\n    this.events = new EventEmitter();\r\n    this.editor = null;\r\n    this.sandbox = null;\r\n    this.console = null;\r\n    this.storage = null;\r\n    this.examples = null;\r\n    this.examplesDropdown = null;\r\n    this.themeSwitcher = null;\r\n    this.editorSwitcher = null;\r\n    this.fullscreenManager = null;\r\n    this.libraryManager = null;\r\n    this.libraryDialog = null;\r\n    this.neonGlow = null;\r\n    this.elements = {};\r\n    this.resizeHandlers = [];\r\n    this.responsiveListener = null;\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Returns the default JavaScript code to load in the editor\r\n   * @returns {string} Default code content\r\n   */\r\n  getDefaultCode() {\r\n    return [\r\n      '// Welcome to JS Sandbox! 🙌',\r\n      '//',\r\n      '// Tips:',\r\n      '//  - Use console.log/info/warn/error',\r\n      '//  - Ctrl/Cmd+Enter to execute',\r\n      '//  - \"Reset\" kills stuck executions',\r\n      '//',\r\n      '// Examples:',\r\n      'console.log(\"Hello, sandbox!\");',\r\n      'function noReturn() { var x = 1+1; }',\r\n      'noReturn(); // no return value, all good',\r\n      '',\r\n      '// DOM inside sandbox:',\r\n      'var el = document.createElement(\"h1\");',\r\n      'el.textContent = \"Hello from iframe!\";',\r\n      'document.body.appendChild(el);',\r\n      '',\r\n      '// Errors:',\r\n      'Promise.reject(\"rejected!\");',\r\n      '// throw new Error(\"Exception thrown\");',\r\n      '',\r\n      '// Infinite loop test (commented):',\r\n      '// while(true) {}'\r\n    ].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Initializes the controller and all components\r\n   * @returns {Promise<void>}\r\n   */\r\n  async init() {\r\n    if (this.isInitialized) {\r\n      this.logger.warn('Controller already initialized');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.events.emit(EVENTS.INIT_START);\r\n      this.logger.info('Initializing controller...');\r\n      \r\n      this.findElements();\r\n      await this.initializeComponents();\r\n      this.setupEventListeners();\r\n      \r\n      this.isInitialized = true;\r\n      this.events.emit(EVENTS.INIT_COMPLETE);\r\n      this.logger.info('Controller initialization complete');\r\n    } catch (error) {\r\n      this.logger.error('Initialization failed:', error);\r\n      this.events.emit(EVENTS.INIT_ERROR, error);\r\n      \r\n      // Show user-friendly error message\r\n      this.showInitializationError(error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows initialization error to user\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  showInitializationError(error) {\r\n    if (this.elements.consoleContainer) {\r\n      const errorDiv = document.createElement('div');\r\n      errorDiv.className = 'console-line console-error';\r\n      errorDiv.textContent = `⚠️ Initialization failed: ${error.message}`;\r\n      this.elements.consoleContainer.appendChild(errorDiv);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds and caches DOM elements\r\n   */\r\n  findElements() {\r\n    this.elements = {\r\n      app: document.querySelector('.app'),\r\n      editorContainer: document.getElementById('editorContainer'),\r\n      consoleContainer: document.getElementById('console'),\r\n      sandboxContainer: document.getElementById('sandboxContainer'),\r\n      runBtn: document.getElementById('runBtn'),\r\n      clearBtn: document.getElementById('clearBtn'),\r\n      resetBtn: document.getElementById('resetBtn'),\r\n      togglePreview: document.getElementById('togglePreview'),\r\n      previewWrap: document.getElementById('previewWrap'),\r\n      status: document.getElementById('status'),\r\n      limitLabel: document.getElementById('limitLabel'),\r\n      toolbar: document.querySelector('.toolbar'),\r\n      fullscreenEditor: document.getElementById('fullscreenEditor'),\r\n      fullscreenConsole: document.getElementById('fullscreenConsole'),\r\n      librariesBtn: document.getElementById('librariesBtn'),\r\n      clearConsoleBtn: document.getElementById('clearConsoleBtn')\r\n    };\r\n\r\n    // Validate required elements\r\n    const required = ['app', 'editorContainer', 'consoleContainer', 'sandboxContainer'];\r\n    const missing = required.filter(key => !this.elements[key]);\r\n    \r\n    if (missing.length > 0) {\r\n      throw new Error(`Missing required elements: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes all components with error boundaries\r\n   * @returns {Promise<void>}\r\n   */\r\n  async initializeComponents() {\r\n    this.logger.info('Initializing components...');\r\n\r\n    // Initialize storage\r\n    try {\r\n      this.storage = new Storage(this.options.storageKey, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Storage initialized');\r\n    } catch (error) {\r\n      this.logger.error('Storage initialization failed:', error);\r\n      // Non-fatal, continue without persistence\r\n    }\r\n\r\n    // Initialize console\r\n    try {\r\n      this.console = new ConsoleOutput(this.elements.consoleContainer, {\r\n        debug: this.options.debug\r\n      });\r\n      this.logger.debug('Console initialized');\r\n    } catch (error) {\r\n      this.logger.error('Console initialization failed:', error);\r\n      throw new Error('Failed to initialize console output');\r\n    }\r\n\r\n    // Initialize sandbox\r\n    try {\r\n      this.sandbox = new SandboxEngine(this.elements.sandboxContainer, {\r\n        timeLimit: this.options.timeLimit,\r\n        debug: this.options.debug,\r\n        logLevel: this.options.logLevel,\r\n        onMessage: (type, args) => {\r\n          this.console.addLine(type, args);\r\n          this.events.emit(EVENTS.CONSOLE_MESSAGE, { type, args });\r\n        },\r\n        onStatusChange: (status) => this.updateStatus(status)\r\n      });\r\n      this.logger.debug('SandboxEngine created');\r\n\r\n      // Initialize sandbox template\r\n      await this.sandbox.initialize();\r\n      this.logger.info('Sandbox initialized');\r\n    } catch (error) {\r\n      this.logger.error('Sandbox initialization failed:', error);\r\n      throw new Error(`Failed to initialize sandbox: ${error.message}`);\r\n    }\r\n\r\n    // Initialize examples system\r\n    try {\r\n      this.examples = new ExamplesLoader({\r\n        onLoad: (example) => this.events.emit(EVENTS.EXAMPLE_LOAD, example),\r\n        onError: (error) => this.events.emit(EVENTS.EXAMPLE_ERROR, error),\r\n        debug: true // Always debug examples loading to help troubleshoot\r\n      });\r\n\r\n      // Initialize examples dropdown (only if not already created)\r\n      if (this.elements.toolbar && !this.examplesDropdown) {\r\n        this.examplesDropdown = new ExamplesDropdown(this.elements.toolbar, {\r\n          onSelect: (exampleId) => this.loadExample(exampleId)\r\n        });\r\n\r\n        // Load available examples\r\n        try {\r\n          this.examplesDropdown.setLoading(true);\r\n          const availableExamples = await this.examples.discoverExamples();\r\n          this.examplesDropdown.setExamples(availableExamples);\r\n          this.logger.info('Examples loaded:', availableExamples.length);\r\n        } catch (error) {\r\n          this.logger.error('Failed to load examples:', error);\r\n          this.examplesDropdown.setError('Failed to load');\r\n        }\r\n      }\r\n\r\n      // Initialize theme switcher (only if not already created)\r\n      if (this.elements.toolbar && !this.themeSwitcher) {\r\n        this.themeSwitcher = new ThemeSwitcher(this.elements.toolbar, this.events, {\r\n          defaultTheme: 'monokai'\r\n        });\r\n        this.logger.info('Theme switcher initialized');\r\n      }\r\n\r\n      // Initialize editor switcher (only if not already created)\r\n      const editorControls = this.elements.app.querySelector('.editor-controls');\r\n      if (editorControls && !this.editorSwitcher) {\r\n        this.editorSwitcher = new EditorSwitcher(editorControls, this.events, {\r\n          defaultEditor: 'ace'\r\n        });\r\n        this.logger.info('Editor switcher initialized');\r\n      }\r\n\r\n      // Initialize fullscreen manager (only if not already created)\r\n      if (!this.fullscreenManager) {\r\n        this.fullscreenManager = new FullscreenManager(this.events, {\r\n          debug: this.options.debug\r\n        });\r\n        this.fullscreenManager.init({\r\n          app: this.elements.app,\r\n          fullscreenEditor: this.elements.fullscreenEditor,\r\n          fullscreenConsole: this.elements.fullscreenConsole\r\n        });\r\n        this.logger.info('Fullscreen manager initialized');\r\n      }\r\n\r\n      // Initialize library manager (only if not already created)\r\n      if (!this.libraryManager) {\r\n        this.libraryManager = new LibraryManager(this.events, {\r\n          debug: this.options.debug\r\n        });\r\n        this.logger.info('Library manager initialized');\r\n      }\r\n\r\n      // Initialize library dialog (only if not already created)\r\n      if (!this.libraryDialog) {\r\n        this.libraryDialog = new LibraryDialog(this.events, this.libraryManager, {\r\n          debug: this.options.debug\r\n        });\r\n        this.logger.info('Library dialog initialized');\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('Examples system initialization failed:', error);\r\n      // Non-fatal, continue without examples\r\n    }\r\n\r\n    // Update time limit display\r\n    if (this.elements.limitLabel) {\r\n      this.elements.limitLabel.textContent = this.options.timeLimit + 'ms';\r\n    }\r\n\r\n    // Initialize resizable panes\r\n    this.initializeResizer();\r\n\r\n    // Handle responsive layout changes\r\n    this.setupResponsiveListener();\r\n\r\n    // Set initial state for preview toggle\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (rightPane && this.elements.previewWrap) {\r\n      const isPreviewVisible = this.elements.previewWrap.classList.contains('show');\r\n      rightPane.classList.toggle('has-preview', isPreviewVisible);\r\n    }\r\n\r\n    // Initialize neon glow effects\r\n    this.initializeNeonGlow();\r\n\r\n    this.logger.info('Components initialization complete');\r\n  }\r\n\r\n  /**\r\n   * Initializes neon glow effects on UI elements\r\n   */\r\n  initializeNeonGlow() {\r\n    try {\r\n      this.neonGlow = new NeonGlowManager({\r\n        transitionDuration: 8000,\r\n        autoRotate: true,\r\n        debug: true // Enable debug to see color changes\r\n      });\r\n\r\n      // Apply glow ONLY to panes (not navbar)\r\n      const panes = this.elements.app.querySelectorAll('.pane');\r\n      panes.forEach(pane => {\r\n        this.neonGlow.applyGlow(pane);\r\n      });\r\n\r\n      // Start automatic color rotation\r\n      this.neonGlow.startRotation();\r\n\r\n      this.logger.info('Neon glow effects initialized');\r\n    } catch (error) {\r\n      this.logger.warn('Failed to initialize neon glow:', error);\r\n      // Non-fatal, continue without neon effects\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up existing resize handlers\r\n   */\r\n  cleanupResizeHandlers() {\r\n    this.resizeHandlers.forEach(handler => {\r\n      if (handler && handler.cleanup) {\r\n        handler.cleanup();\r\n      }\r\n    });\r\n    this.resizeHandlers = [];\r\n  }\r\n\r\n  /**\r\n   * Initializes the resizable panes functionality\r\n   */\r\n  initializeResizer() {\r\n    if (!this.elements.app) return;\r\n\r\n    // Cleanup existing handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Skip horizontal resize on mobile\r\n    if (isMobile(MOBILE_BREAKPOINT)) {\r\n      this.initializeVerticalResize();\r\n      return;\r\n    }\r\n\r\n    const mainContent = this.elements.app.querySelector('.main-content');\r\n    if (!mainContent) return;\r\n\r\n    // Remove any existing resize handles first\r\n    const existingHandles = this.elements.app.querySelectorAll('.resize-handle, .vertical-resize-handle');\r\n    existingHandles.forEach(handle => handle.remove());\r\n\r\n    // Reset any inline grid styles that might have been applied\r\n    mainContent.style.gridTemplateColumns = '';\r\n    mainContent.style.gridTemplateRows = '';\r\n\r\n    // Reset right pane styles\r\n    const rightPane = mainContent.querySelector('.pane:last-child');\r\n    if (rightPane) {\r\n      rightPane.style.gridTemplateRows = '';\r\n      rightPane.classList.remove('preview-hidden');\r\n    }\r\n\r\n    // Create resize handle\r\n    const resizeHandle = document.createElement('div');\r\n    resizeHandle.className = 'resize-handle';\r\n\r\n    // Insert between the first and last pane in main-content\r\n    const panes = mainContent.querySelectorAll('.pane');\r\n    if (panes.length >= 2) {\r\n      mainContent.insertBefore(resizeHandle, panes[1]);\r\n\r\n      // Create horizontal resize handler using utility\r\n      const horizontalHandler = createHorizontalResizeHandler({\r\n        container: mainContent,\r\n        leftPane: panes[0],\r\n        rightPane: panes[1],\r\n        handle: resizeHandle,\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED)\r\n      });\r\n\r\n      this.resizeHandlers.push(horizontalHandler);\r\n    }\r\n\r\n    // Initialize vertical resizing\r\n    this.initializeVerticalResize();\r\n  }\r\n\r\n  /**\r\n   * Sets up responsive layout listener for orientation/resize changes\r\n   */\r\n  setupResponsiveListener() {\r\n    // Clean up existing listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n    }\r\n\r\n    const mediaQuery = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT}px)`);\r\n\r\n    const handleChange = () => {\r\n      this.logger.debug('Responsive breakpoint changed');\r\n      this.initializeResizer();\r\n    };\r\n\r\n    mediaQuery.addListener(handleChange);\r\n\r\n    // Store reference for cleanup\r\n    this.responsiveListener = { mediaQuery, handleChange };\r\n  }\r\n\r\n  /**\r\n   * Initializes vertical resizing between console and preview\r\n   */\r\n  initializeVerticalResize() {\r\n    const rightPane = this.elements.app.querySelector('.pane.right');\r\n    if (!rightPane) return;\r\n\r\n    // Create vertical resize handle\r\n    const verticalHandle = document.createElement('div');\r\n    verticalHandle.className = 'vertical-resize-handle';\r\n\r\n    // Insert after console\r\n    const consoleEl = rightPane.querySelector('.console');\r\n    if (consoleEl) {\r\n      consoleEl.parentNode.insertBefore(verticalHandle, consoleEl.nextSibling);\r\n\r\n      // Create vertical resize handler using utility\r\n      const verticalHandler = createVerticalResizeHandler({\r\n        container: rightPane,\r\n        topPane: consoleEl,\r\n        bottomPane: this.elements.previewWrap,\r\n        handle: verticalHandle,\r\n        shouldResize: () => this.elements.previewWrap.classList.contains('show'),\r\n        onResize: () => this.events.emit(EVENTS.PANES_RESIZED_VERTICAL)\r\n      });\r\n\r\n      this.resizeHandlers.push(verticalHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the event emitter instance\r\n   * @returns {EventEmitter} The event emitter\r\n   */\r\n  getEventEmitter() {\r\n    return this.events;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the editor instance\r\n   * @param {EditorAdapter} editor - The editor instance\r\n   */\r\n  setEditor(editor) {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n    }\r\n\r\n    this.editor = editor;\r\n\r\n    // Setup editor event handlers\r\n    this.editor.onChange((code) => {\r\n      if (this.storage) {\r\n        this.storage.save(code);\r\n      }\r\n      this.events.emit(EVENTS.CODE_CHANGE, { code });\r\n    });\r\n\r\n    this.editor.onExecute(() => {\r\n      this.run();\r\n    });\r\n\r\n    // Load initial code now that editor is ready\r\n    this.loadInitialCode();\r\n    this.events.emit(EVENTS.EDITOR_READY, { editor });\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for UI interactions\r\n   */\r\n  setupEventListeners() {\r\n    if (this.elements.runBtn) {\r\n      this.elements.runBtn.addEventListener('click', () => this.run());\r\n    }\r\n\r\n    if (this.elements.clearBtn) {\r\n      this.elements.clearBtn.addEventListener('click', () => this.clearConsole());\r\n    }\r\n\r\n    if (this.elements.resetBtn) {\r\n      this.elements.resetBtn.addEventListener('click', () => this.reset());\r\n    }\r\n\r\n    if (this.elements.togglePreview) {\r\n      this.elements.togglePreview.addEventListener('change', (e) => {\r\n        this.elements.previewWrap.classList.toggle('show', e.target.checked);\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          if (e.target.checked) {\r\n            rightPane.classList.add('has-preview');\r\n          } else {\r\n            rightPane.classList.remove('has-preview');\r\n            rightPane.style.gridTemplateRows = '';\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.elements.librariesBtn) {\r\n      this.elements.librariesBtn.addEventListener('click', () => {\r\n        this.events.emit(EVENTS.LIBRARY_MANAGER_OPEN);\r\n      });\r\n    }\r\n\r\n    if (this.elements.clearConsoleBtn) {\r\n      this.elements.clearConsoleBtn.addEventListener('click', () => {\r\n        this.clearConsole();\r\n      });\r\n    }\r\n\r\n    // Set up theme event listeners\r\n    this.setupThemeEventListeners();\r\n\r\n    // Set up editor change event listeners\r\n    this.setupEditorEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up theme-related event listeners\r\n   */\r\n  setupThemeEventListeners() {\r\n    // Listen for theme loading start\r\n    this.events.on(EVENTS.THEME_LOAD_START, (data) => {\r\n      this.logger.info('Theme loading started:', data.theme);\r\n    });\r\n\r\n    // Listen for theme ready\r\n    this.events.on(EVENTS.THEME_READY, (data) => {\r\n      this.logger.info('Theme ready:', data.theme);\r\n      if (data.error) {\r\n        this.logger.warn('Theme ready with error:', data.error);\r\n      }\r\n    });\r\n\r\n    // Listen for theme changes\r\n    this.events.on(EVENTS.THEME_CHANGE, (data) => {\r\n      this.logger.info('Theme changed from', data.oldTheme, 'to', data.theme);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets up editor-related event listeners\r\n   */\r\n  setupEditorEventListeners() {\r\n    // Listen for editor changes\r\n    this.events.on(EVENTS.EDITOR_CHANGE, async (data) => {\r\n      this.logger.info('Editor change requested:', data);\r\n      await this.switchEditor(data.editor, data.oldEditor);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Switches to a different editor\r\n   * @param {string} editorName - The editor to switch to\r\n   * @param {string} oldEditor - The previous editor name\r\n   */\r\n  async switchEditor(editorName, oldEditor) {\r\n    this.logger.info('Switching editor from', oldEditor, 'to', editorName);\r\n\r\n    // Save current code before switching\r\n    const currentCode = this.editor ? this.editor.getValue() : '';\r\n\r\n    // Destroy current editor\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    // Create new editor\r\n    const editorContainer = this.elements.editorContainer;\r\n    if (!editorContainer) {\r\n      throw new Error('Editor container not found');\r\n    }\r\n\r\n    // Clear container\r\n    editorContainer.innerHTML = '';\r\n\r\n    // Import and create the appropriate editor\r\n    let newEditor;\r\n    try {\r\n      if (editorName === 'ace') {\r\n        const { ACEEditor } = await import('../editors/ace.js');\r\n        newEditor = new ACEEditor(editorContainer, {\r\n          mode: 'javascript',\r\n          theme: this.themeSwitcher ? this.themeSwitcher.getCurrentTheme() : 'monokai',\r\n          autofocus: true,\r\n          debug: this.options.debug\r\n        }, this.events);\r\n      } else if (editorName === 'codemirror') {\r\n        const { CodeMirrorEditor } = await import('../editors/codemirror.js');\r\n        newEditor = new CodeMirrorEditor(editorContainer, {\r\n          mode: 'javascript',\r\n          theme: this.themeSwitcher ? this.themeSwitcher.getCurrentTheme() : 'darcula',\r\n          autofocus: true,\r\n          debug: this.options.debug\r\n        }, this.events);\r\n      } else {\r\n        const { TextareaEditor } = await import('../editors/textarea.js');\r\n        newEditor = new TextareaEditor(editorContainer, {\r\n          autofocus: true,\r\n          debug: this.options.debug\r\n        }, this.events);\r\n      }\r\n\r\n      // Set up the new editor\r\n      this.setEditor(newEditor);\r\n\r\n      // Restore code\r\n      if (currentCode) {\r\n        this.editor.setValue(currentCode);\r\n      }\r\n\r\n      this.logger.info('Editor switched successfully to:', editorName);\r\n      this.events.emit(EVENTS.EDITOR_CHANGED, { editor: editorName, oldEditor: oldEditor });\r\n\r\n    } catch (error) {\r\n      this.logger.error('Failed to switch editor:', error);\r\n      // Fallback to textarea\r\n      const { TextareaEditor } = await import('../editors/textarea.js');\r\n      this.editor = new TextareaEditor(editorContainer, {\r\n        autofocus: true,\r\n        debug: this.options.debug\r\n      }, this.events);\r\n      this.setEditor(this.editor);\r\n      if (currentCode) {\r\n        this.editor.setValue(currentCode);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads initial code into the editor\r\n   */\r\n  loadInitialCode() {\r\n    const savedCode = this.storage ? this.storage.load() : null;\r\n    const initialCode = savedCode || this.options.defaultCode;\r\n\r\n    if (this.editor) {\r\n      this.editor.setValue(initialCode);\r\n      this.editor.focus();\r\n      this.events.emit(EVENTS.CODE_LOAD, { code: initialCode, fromStorage: !!savedCode });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Runs the current code in the sandbox\r\n   */\r\n  async run() {\r\n    if (!this.editor) {\r\n      this.logger.error('No editor configured');\r\n      return;\r\n    }\r\n\r\n    const code = this.editor.getValue();\r\n    this.events.emit(EVENTS.CODE_EXECUTE_START, { code });\r\n\r\n    // Validate syntax first\r\n    const validation = this.sandbox.validateSyntax(code);\r\n    this.events.emit(EVENTS.CODE_VALIDATE, { code, validation });\r\n\r\n    this.console.clear();\r\n\r\n    // On mobile, enter fullscreen console mode after running code\r\n    if (isMobile(MOBILE_BREAKPOINT)) {\r\n      this.enterConsoleFullscreenOnMobile();\r\n    }\r\n\r\n    // Prepare library data for injection (async)\r\n    let libraryData = null;\r\n    if (this.libraryManager) {\r\n      const libraries = this.libraryManager.getLibraries();\r\n      if (libraries.length > 0) {\r\n        // Show loading status for libraries\r\n        this.updateStatus(`Loading ${libraries.length} libraries...`);\r\n\r\n        try {\r\n          this.logger.debug('Generating library scripts...');\r\n          const scripts = await this.libraryManager.generateScriptTags();\r\n          const csp = this.libraryManager.generateCSP();\r\n\r\n          libraryData = { scripts, csp };\r\n          this.logger.debug('Library data prepared successfully');\r\n        } catch (error) {\r\n          this.logger.error('Failed to prepare library data:', error);\r\n          this.updateStatus('Library loading failed');\r\n          // Continue without libraries\r\n        }\r\n      }\r\n    }\r\n\r\n    this.sandbox.execute(code, libraryData);\r\n  }\r\n\r\n  /**\r\n   * Enters fullscreen console mode on mobile devices when running code\r\n   */\r\n  enterConsoleFullscreenOnMobile() {\r\n    if (this.fullscreenManager && !this.fullscreenManager.isFullscreen()) {\r\n      this.logger.debug('Entering console fullscreen mode on mobile after run');\r\n      this.fullscreenManager.setFullscreenMode('console');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the console output\r\n   */\r\n  clearConsole() {\r\n    this.console.clear();\r\n    this.updateStatus(STATUS_MESSAGES.cleared);\r\n    this.events.emit(EVENTS.CONSOLE_CLEAR);\r\n  }\r\n\r\n  /**\r\n   * Resets the sandbox\r\n   */\r\n  reset() {\r\n    this.sandbox.reset();\r\n    this.updateStatus(STATUS_MESSAGES.reset);\r\n    this.events.emit(EVENTS.SANDBOX_RESET);\r\n  }\r\n\r\n  /**\r\n   * Updates the status display\r\n   * @param {string} status - Status message or key\r\n   */\r\n  updateStatus(status) {\r\n    if (!this.elements.status) return;\r\n\r\n    const displayStatus = STATUS_MESSAGES[status] || status;\r\n    this.elements.status.textContent = displayStatus;\r\n    this.events.emit(EVENTS.STATUS_CHANGE, { status, displayStatus });\r\n\r\n    // Emit specific status events\r\n    if (status === 'completed') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_COMPLETE);\r\n    } else if (status === 'timeout') {\r\n      this.events.emit(EVENTS.CODE_EXECUTE_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @param {Object} [options={}] - Options for the listener\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  on(event, callback, options) {\r\n    return this.events.on(event, callback, options);\r\n  }\r\n\r\n  /**\r\n   * Registers a one-time event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  once(event, callback) {\r\n    return this.events.once(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Removes an event listener\r\n   * @param {string} event - The event name\r\n   * @param {Function} callback - The callback function\r\n   */\r\n  off(event, callback) {\r\n    this.events.off(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Gets the current code from the editor\r\n   * @returns {string|null} The current code or null if no editor\r\n   */\r\n  getCode() {\r\n    return this.editor ? this.editor.getValue() : null;\r\n  }\r\n\r\n  /**\r\n   * Sets code in the editor\r\n   * @param {string} code - The code to set\r\n   */\r\n  setCode(code) {\r\n    if (this.editor) {\r\n      this.editor.setValue(code);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates JavaScript syntax without executing\r\n   * @param {string} [code] - The code to validate, or current editor code if not provided\r\n   * @returns {Object} Validation result with {valid: boolean, error?: string}\r\n   */\r\n  validateCode(code) {\r\n    const codeToValidate = code || this.getCode();\r\n    return this.sandbox ? \r\n      this.sandbox.validateSyntax(codeToValidate) : \r\n      { valid: false, error: 'Sandbox not initialized' };\r\n  }\r\n\r\n  /**\r\n   * Loads and runs an example\r\n   * @param {string} exampleId - The example ID to load\r\n   * @returns {Promise<void>}\r\n   */\r\n  async loadExample(exampleId) {\r\n    try {\r\n      this.logger.info('Loading example:', exampleId);\r\n\r\n      const example = await this.examples.loadExample(exampleId);\r\n\r\n      // Set the code in the editor\r\n      this.setCode(example.code);\r\n\r\n      // Open preview pane\r\n      if (this.elements.togglePreview && !this.elements.togglePreview.checked) {\r\n        this.elements.togglePreview.checked = true;\r\n        this.elements.previewWrap.classList.add('show');\r\n\r\n        const rightPane = this.elements.app.querySelector('.pane.right');\r\n        if (rightPane) {\r\n          rightPane.classList.add('has-preview');\r\n        }\r\n      }\r\n\r\n      // Run the example\r\n      this.run();\r\n\r\n      this.events.emit(EVENTS.EXAMPLE_LOADED, { exampleId, example });\r\n    } catch (error) {\r\n      this.logger.error('Failed to load example:', error);\r\n      this.events.emit(EVENTS.EXAMPLE_ERROR, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up the controller and all components\r\n   */\r\n  destroy() {\r\n    this.logger.info('Destroying controller...');\r\n    \r\n    this.events.emit(EVENTS.DESTROY);\r\n\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n\r\n    if (this.sandbox) {\r\n      this.sandbox.destroy();\r\n      this.sandbox = null;\r\n    }\r\n\r\n    if (this.examples) {\r\n      this.examples.destroy();\r\n      this.examples = null;\r\n    }\r\n\r\n    if (this.examplesDropdown) {\r\n      this.examplesDropdown.destroy();\r\n      this.examplesDropdown = null;\r\n    }\r\n\r\n    if (this.themeSwitcher) {\r\n      this.themeSwitcher.destroy();\r\n      this.themeSwitcher = null;\r\n    }\r\n\r\n    if (this.editorSwitcher) {\r\n      this.editorSwitcher.destroy();\r\n      this.editorSwitcher = null;\r\n    }\r\n\r\n    if (this.neonGlow) {\r\n      this.neonGlow.destroy();\r\n      this.neonGlow = null;\r\n    }\r\n\r\n    if (this.fullscreenManager) {\r\n      this.fullscreenManager.destroy();\r\n      this.fullscreenManager = null;\r\n    }\r\n\r\n    if (this.libraryManager) {\r\n      this.libraryManager.destroy();\r\n      this.libraryManager = null;\r\n    }\r\n\r\n    if (this.libraryDialog) {\r\n      this.libraryDialog.destroy();\r\n      this.libraryDialog = null;\r\n    }\r\n\r\n    // Cleanup resize handlers\r\n    this.cleanupResizeHandlers();\r\n\r\n    // Cleanup responsive listener\r\n    if (this.responsiveListener) {\r\n      this.responsiveListener.mediaQuery.removeListener(this.responsiveListener.handleChange);\r\n      this.responsiveListener = null;\r\n    }\r\n\r\n    this.events.removeAllListeners();\r\n    this.isInitialized = false;\r\n    \r\n    this.logger.info('Controller destroyed');\r\n  }\r\n}\r\n","import {\r\n  MIN_LEFT_PANE_WIDTH,\r\n  MIN_RIGHT_PANE_WIDTH,\r\n  MIN_CONSOLE_HEIGHT,\r\n  MIN_PREVIEW_HEIGHT,\r\n  RESIZE_HANDLE_WIDTH\r\n} from '../core/constants.js';\r\n\r\n/**\r\n * Shared resize functionality for panes\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\n/**\r\n * Creates a horizontal resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.leftPane - Left pane element\r\n * @param {HTMLElement} config.rightPane - Right pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createHorizontalResizeHandler(config) {\r\n  const { container, leftPane, rightPane, handle, onResize } = config;\r\n\r\n  let isResizing = false;\r\n  let startX = 0;\r\n  let startLeftWidth = 0;\r\n  let startRightWidth = 0;\r\n\r\n  const handleStart = (e) => {\r\n    isResizing = true;\r\n    // Support both mouse and touch events\r\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\r\n    startX = clientX;\r\n    handle.classList.add('dragging');\r\n\r\n    startLeftWidth = leftPane.getBoundingClientRect().width;\r\n    startRightWidth = rightPane.getBoundingClientRect().width;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'col-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    // Support both mouse and touch events\r\n    const clientX = e.clientX || (e.touches && e.touches[0].clientX);\r\n    const deltaX = clientX - startX;\r\n    const containerRect = container.getBoundingClientRect();\r\n    const totalWidth = containerRect.width - RESIZE_HANDLE_WIDTH - 10; // Subtract handle and padding\r\n\r\n    // Calculate new widths with constraints\r\n    const newLeftWidth = Math.max(\r\n      MIN_LEFT_PANE_WIDTH,\r\n      Math.min(totalWidth - MIN_RIGHT_PANE_WIDTH, startLeftWidth + deltaX)\r\n    );\r\n    const newRightWidth = totalWidth - newLeftWidth;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateColumns = `${newLeftWidth}px ${RESIZE_HANDLE_WIDTH}px ${newRightWidth}px`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  // Add both mouse and touch event listeners\r\n  handle.addEventListener('mousedown', handleStart);\r\n  handle.addEventListener('touchstart', handleStart);\r\n  document.addEventListener('mousemove', handleMove);\r\n  document.addEventListener('touchmove', handleMove);\r\n  document.addEventListener('mouseup', handleEnd);\r\n  document.addEventListener('touchend', handleEnd);\r\n\r\n  return {\r\n    handleStart,\r\n    handleMove,\r\n    handleEnd,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleStart);\r\n      handle.removeEventListener('touchstart', handleStart);\r\n      document.removeEventListener('mousemove', handleMove);\r\n      document.removeEventListener('touchmove', handleMove);\r\n      document.removeEventListener('mouseup', handleEnd);\r\n      document.removeEventListener('touchend', handleEnd);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a vertical resize handler\r\n * @param {Object} config - Configuration object\r\n * @param {HTMLElement} config.container - Container element\r\n * @param {HTMLElement} config.topPane - Top pane element\r\n * @param {HTMLElement} config.bottomPane - Bottom pane element\r\n * @param {HTMLElement} config.handle - Resize handle element\r\n * @param {Function} config.onResize - Callback when resize completes\r\n * @param {Function} config.shouldResize - Optional function to check if resize should proceed\r\n * @returns {Object} Handler functions and cleanup\r\n */\r\nexport function createVerticalResizeHandler(config) {\r\n  const { container, topPane, bottomPane, handle, onResize, shouldResize } = config;\r\n  \r\n  let isResizing = false;\r\n  let startY = 0;\r\n  let startTopHeight = 0;\r\n  let startBottomHeight = 0;\r\n\r\n  const handleStart = (e) => {\r\n    // Check if resizing is allowed\r\n    if (shouldResize && !shouldResize()) return;\r\n\r\n    isResizing = true;\r\n    // Support both mouse and touch events\r\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\r\n    startY = clientY;\r\n    handle.classList.add('dragging');\r\n\r\n    const topRect = topPane.getBoundingClientRect();\r\n    const bottomRect = bottomPane.getBoundingClientRect();\r\n\r\n    startTopHeight = topRect.height;\r\n    startBottomHeight = bottomRect.height;\r\n\r\n    document.body.style.userSelect = 'none';\r\n    document.body.style.cursor = 'row-resize';\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    if (!isResizing) return;\r\n\r\n    // Support both mouse and touch events\r\n    const clientY = e.clientY || (e.touches && e.touches[0].clientY);\r\n    const deltaY = clientY - startY;\r\n    const totalContentHeight = startTopHeight + startBottomHeight;\r\n\r\n    // Calculate new heights with constraints\r\n    const newTopHeight = Math.max(\r\n      MIN_CONSOLE_HEIGHT,\r\n      Math.min(totalContentHeight - MIN_PREVIEW_HEIGHT, startTopHeight + deltaY)\r\n    );\r\n    const newBottomHeight = totalContentHeight - newTopHeight;\r\n\r\n    // Update grid template\r\n    container.style.gridTemplateRows = `auto ${newTopHeight}px 8px ${newBottomHeight}px auto`;\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    if (!isResizing) return;\r\n\r\n    isResizing = false;\r\n    handle.classList.remove('dragging');\r\n\r\n    document.body.style.userSelect = '';\r\n    document.body.style.cursor = '';\r\n\r\n    if (onResize) onResize();\r\n  };\r\n\r\n  // Add both mouse and touch event listeners\r\n  handle.addEventListener('mousedown', handleStart);\r\n  handle.addEventListener('touchstart', handleStart);\r\n  document.addEventListener('mousemove', handleMove);\r\n  document.addEventListener('touchmove', handleMove);\r\n  document.addEventListener('mouseup', handleEnd);\r\n  document.addEventListener('touchend', handleEnd);\r\n\r\n  return {\r\n    handleStart,\r\n    handleMove,\r\n    handleEnd,\r\n    cleanup: () => {\r\n      handle.removeEventListener('mousedown', handleStart);\r\n      handle.removeEventListener('touchstart', handleStart);\r\n      document.removeEventListener('mousemove', handleMove);\r\n      document.removeEventListener('touchmove', handleMove);\r\n      document.removeEventListener('mouseup', handleEnd);\r\n      document.removeEventListener('touchend', handleEnd);\r\n    }\r\n  };\r\n}\r\n","import { EditorAdapter } from './base.js';\r\nimport { Logger } from '../core/logger.js';\r\n\r\n/**\r\n * ACE editor adapter with syntax highlighting and advanced features\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class ACEEditor extends EditorAdapter {\r\n  /**\r\n   * Creates a new ACEEditor instance\r\n   * @param {HTMLElement} container - DOM element to contain the editor\r\n   * @param {Object} [options={}] - Editor configuration options\r\n   * @param {string} [options.mode='javascript'] - ACE language mode\r\n   * @param {string} [options.theme='monokai'] - ACE theme\r\n   * @param {boolean} [options.autofocus=true] - Whether to autofocus the editor\r\n   * @param {boolean} [options.autocomplete=true] - Enable autocomplete\r\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\r\n   */\r\n  constructor(container, options = {}, eventEmitter = null) {\r\n    super(container, options, eventEmitter);\r\n    this.editor = null;\r\n    this.currentTheme = options.theme || 'monokai';\r\n\r\n    this.logger = new Logger({\r\n      enabled: true,\r\n      level: 'info',\r\n      prefix: 'ACEEditor'\r\n    });\r\n\r\n    this.logger.info('ACE editor initialized with theme:', this.currentTheme);\r\n    this.logger.info('Event emitter provided:', !!eventEmitter);\r\n\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the ACE editor instance\r\n   * @throws {Error} If ACE is not loaded\r\n   */\r\n  init() {\r\n    if (typeof ace === 'undefined') {\r\n      throw new Error('ACE is not loaded. Include ACE before using this adapter.');\r\n    }\r\n\r\n    // Create editor element\r\n    const editorElement = document.createElement('div');\r\n    editorElement.style.cssText = `\r\n      width: 100%;\r\n      height: 100%;\r\n      min-height: 300px;\r\n    `;\r\n    this.container.appendChild(editorElement);\r\n\r\n    // Initialize ACE editor\r\n    this.editor = ace.edit(editorElement);\r\n    \r\n    // Configure editor\r\n    this.editor.setTheme(`ace/theme/${this.currentTheme}`);\r\n    this.editor.session.setMode('ace/mode/javascript');\r\n    this.editor.setOptions({\r\n      fontSize: '14px',\r\n      showPrintMargin: false,\r\n      showGutter: true,\r\n      highlightActiveLine: true,\r\n      enableBasicAutocompletion: this.options.autocomplete !== false,\r\n      enableLiveAutocompletion: this.options.autocomplete !== false,\r\n      enableSnippets: true,\r\n      wrap: true,\r\n      tabSize: 2,\r\n      useSoftTabs: true,\r\n      behavioursEnabled: true,\r\n      wrapBehavioursEnabled: true\r\n    });\r\n\r\n    // Set up keyboard shortcuts\r\n    this.editor.commands.addCommand({\r\n      name: 'executeCode',\r\n      bindKey: { win: 'Ctrl-Enter', mac: 'Cmd-Enter' },\r\n      exec: () => this.triggerExecute()\r\n    });\r\n\r\n    // Set up event listeners\r\n    this.editor.on('change', () => {\r\n      this.triggerChange();\r\n    });\r\n\r\n    // Apply glass effect on initial load\r\n    this.applyGlassEffect(this.currentTheme);\r\n\r\n    // Focus if requested\r\n    if (this.options.autofocus !== false) {\r\n      this.editor.focus();\r\n    }\r\n\r\n    this.logger.info('ACE editor initialized successfully');\r\n  }\r\n\r\n  /**\r\n   * Gets the current code value from ACE\r\n   * @returns {string} The current code\r\n   */\r\n  getValue() {\r\n    return this.editor ? this.editor.getValue() : '';\r\n  }\r\n\r\n  /**\r\n   * Sets the code value in ACE\r\n   * @param {string} code - The code to set\r\n   */\r\n  setValue(code) {\r\n    if (this.editor) {\r\n      this.editor.setValue(code, -1); // -1 means move cursor to start\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focuses the ACE editor\r\n   */\r\n  focus() {\r\n    if (this.editor) {\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles theme change events\r\n   * @param {string} newTheme - The new theme name\r\n   * @param {string} oldTheme - The previous theme name\r\n   */\r\n  onThemeChange(newTheme, oldTheme) {\r\n    this.logger.info('onThemeChange called with:', { newTheme, oldTheme });\r\n    this.logger.info('Current theme before change:', this.currentTheme);\r\n    this.logger.info('ACE editor instance exists:', !!this.editor);\r\n\r\n    if (this.editor && newTheme !== this.currentTheme) {\r\n      this.logger.info('Applying theme change from', this.currentTheme, 'to', newTheme);\r\n      this.currentTheme = newTheme;\r\n      this.editor.setTheme(`ace/theme/${newTheme}`);\r\n      this.logger.info('Theme applied successfully');\r\n\r\n      // Apply glass glow effect by reducing background opacity\r\n      this.applyGlassEffect(newTheme);\r\n    } else {\r\n      this.logger.warn('Theme change skipped. Reasons:');\r\n      this.logger.warn('- ACE editor exists:', !!this.editor);\r\n      this.logger.warn('- New theme different from current:', newTheme !== this.currentTheme);\r\n      this.logger.warn('- New theme value:', newTheme);\r\n      this.logger.warn('- Current theme value:', this.currentTheme);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applies glass effect by reducing ACE background opacity\r\n   * @param {string} theme - The current theme name\r\n   */\r\n  applyGlassEffect(theme) {\r\n    // Wait for theme to be applied, then modify background opacity\r\n    setTimeout(() => {\r\n      const aceElement = this.container.querySelector('.ace_editor');\r\n      if (aceElement) {\r\n        this.logger.info('Applying glass effect for theme:', theme);\r\n\r\n        // Get the computed background color from the theme\r\n        const computedStyle = window.getComputedStyle(aceElement);\r\n        const backgroundColor = computedStyle.backgroundColor;\r\n        this.logger.info('Original background color:', backgroundColor);\r\n\r\n        // Parse the color and reduce opacity to 70%\r\n        const reducedOpacityColor = this.reduceColorOpacity(backgroundColor, 0.7);\r\n        this.logger.info('Reduced opacity color:', reducedOpacityColor);\r\n\r\n        // Create or update style element for glass effect\r\n        let styleElement = document.getElementById('ace-glass-effect');\r\n        if (!styleElement) {\r\n          styleElement = document.createElement('style');\r\n          styleElement.id = 'ace-glass-effect';\r\n          document.head.appendChild(styleElement);\r\n        }\r\n\r\n        // Apply reduced opacity background to let glow show through\r\n        styleElement.textContent = `\r\n          .ace_editor {\r\n            background-color: ${reducedOpacityColor} !important;\r\n          }\r\n          .ace_gutter {\r\n            background-color: ${this.reduceColorOpacity(backgroundColor, 0.8)} !important;\r\n          }\r\n        `;\r\n\r\n        this.logger.info('Glass effect applied with reduced opacity background');\r\n      }\r\n    }, 200); // Slightly longer delay to ensure theme CSS is fully loaded\r\n  }\r\n\r\n  /**\r\n   * Reduces the opacity of a CSS color value\r\n   * @param {string} color - The CSS color value (rgb, rgba, hex, etc.)\r\n   * @param {number} opacity - The target opacity (0-1)\r\n   * @returns {string} The color with reduced opacity in rgba format\r\n   */\r\n  reduceColorOpacity(color, opacity) {\r\n    // Handle rgba format\r\n    const rgbaMatch = color.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)/);\r\n    if (rgbaMatch) {\r\n      const [, r, g, b] = rgbaMatch;\r\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    // Handle rgb format\r\n    const rgbMatch = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\r\n    if (rgbMatch) {\r\n      const [, r, g, b] = rgbMatch;\r\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    // Handle hex format\r\n    const hexMatch = color.match(/^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i);\r\n    if (hexMatch) {\r\n      const r = parseInt(hexMatch[1], 16);\r\n      const g = parseInt(hexMatch[2], 16);\r\n      const b = parseInt(hexMatch[3], 16);\r\n      return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    // Fallback for other formats or if parsing fails\r\n    this.logger.warn('Could not parse color:', color, 'using fallback');\r\n    return `rgba(0, 0, 0, ${opacity})`;\r\n  }\r\n\r\n  /**\r\n   * Gets the current theme\r\n   * @returns {string} Current theme name\r\n   */\r\n  getCurrentTheme() {\r\n    return this.currentTheme;\r\n  }\r\n\r\n  /**\r\n   * Sets the theme programmatically\r\n   * @param {string} theme - Theme name to set\r\n   */\r\n  setTheme(theme) {\r\n    if (this.editor && theme !== this.currentTheme) {\r\n      this.currentTheme = theme;\r\n      this.editor.setTheme(`ace/theme/${theme}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply a transformation to the ACE editor\r\n   * @param {Object} transformation - Transformation to apply\r\n   */\r\n  applyTransformation(transformation) {\r\n    this.logger.debug('Applying transformation:', transformation);\r\n\r\n    const cursor = this.editor.getCursorPosition();\r\n\r\n    switch (transformation.action) {\r\n      case 'insert':\r\n        this.editor.insert(transformation.text);\r\n        if (transformation.cursorOffset !== undefined) {\r\n          const newCursor = this.editor.getCursorPosition();\r\n          this.editor.moveCursorTo(newCursor.row, newCursor.column + transformation.cursorOffset);\r\n        }\r\n        break;\r\n\r\n      case 'skip':\r\n        this.editor.moveCursorTo(cursor.row, cursor.column + transformation.positions);\r\n        break;\r\n\r\n      case 'deleteRange':\r\n        const range = new ace.Range(\r\n          cursor.row, transformation.start,\r\n          cursor.row, transformation.end\r\n        );\r\n        this.editor.session.remove(range);\r\n        break;\r\n\r\n      default:\r\n        this.logger.warn('Unknown transformation action:', transformation.action);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleans up the ACE editor\r\n   */\r\n  destroy() {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n  }\r\n}\r\n","import { EditorAdapter } from './base.js';\r\n\r\n/**\r\n * Plain textarea editor adapter for basic code editing\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\nexport class TextareaEditor extends EditorAdapter {\r\n  /**\r\n   * Creates a new TextareaEditor instance\r\n   * @param {HTMLElement} container - DOM element to contain the editor\r\n   * @param {Object} [options={}] - Editor configuration options\r\n   * @param {string} [options.placeholder] - Placeholder text for the textarea\r\n   * @param {Object} [eventEmitter] - Event emitter for listening to global events\r\n   */\r\n  constructor(container, options = {}, eventEmitter = null) {\r\n    super(container, options, eventEmitter);\r\n    this.textarea = null;\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the textarea editor\r\n   */\r\n  init() {\r\n    this.textarea = document.createElement('textarea');\r\n    this.textarea.className = 'code-editor';\r\n    this.textarea.spellcheck = false;\r\n    this.textarea.placeholder = this.options.placeholder || 'Enter your JavaScript code here...';\r\n\r\n    this.container.appendChild(this.textarea);\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  /**\r\n   * Sets up event listeners for the textarea\r\n   */\r\n  setupEventListeners() {\r\n    this.textarea.addEventListener('input', () => {\r\n      this.triggerChange();\r\n    });\r\n\r\n    this.textarea.addEventListener('keydown', (e) => {\r\n      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\r\n        e.preventDefault();\r\n        this.triggerExecute();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the current code value from the textarea\r\n   * @returns {string} The current code\r\n   */\r\n  getValue() {\r\n    return this.textarea.value;\r\n  }\r\n\r\n  /**\r\n   * Sets the code value in the textarea\r\n   * @param {string} code - The code to set\r\n   */\r\n  setValue(code) {\r\n    this.textarea.value = code;\r\n  }\r\n\r\n  /**\r\n   * Focuses the textarea\r\n   */\r\n  focus() {\r\n    this.textarea.focus();\r\n  }\r\n\r\n  /**\r\n   * Cleans up the textarea editor\r\n   */\r\n  destroy() {\r\n    if (this.textarea) {\r\n      this.textarea.remove();\r\n    }\r\n  }\r\n}","/**\r\n * JavaScript Sandbox - A secure, isolated JavaScript execution environment\r\n * @author Joao Guilherme (Guinetik) <guinetik@gmail.com>\r\n */\r\n\r\nimport { SandboxController } from './ui/controller.js';\r\nimport { ACEEditor } from './editors/ace.js';\r\nimport { CodeMirrorEditor } from './editors/codemirror.js';\r\nimport { TextareaEditor } from './editors/textarea.js';\r\nimport { Logger } from './core/logger.js';\r\n\r\n/**\r\n * Auto-detects and initializes the best available editor\r\n * @param {HTMLElement} container - DOM element to contain the editor\r\n * @param {Object} [options={}] - Editor configuration options\r\n * @param {Object} [eventEmitter] - Event emitter for theme changes\r\n * @returns {EditorAdapter} The initialized editor instance\r\n */\r\nfunction createEditor(container, options = {}, eventEmitter = null) {\r\n  const logger = new Logger({\r\n    enabled: options.debug || false,\r\n    level: 'info',\r\n    prefix: 'EditorFactory'\r\n  });\r\n\r\n  // Check for saved editor preference\r\n  const savedEditor = localStorage.getItem('sandbox_current_editor');\r\n  logger.info('Saved editor preference:', savedEditor);\r\n\r\n  // Try saved editor first if available\r\n  if (savedEditor === 'ace' && typeof ace !== 'undefined') {\r\n    try {\r\n      logger.info('Initializing saved ACE editor');\r\n      return new ACEEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize saved ACE, falling back:', e);\r\n    }\r\n  } else if (savedEditor === 'codemirror' && typeof CodeMirror !== 'undefined') {\r\n    try {\r\n      logger.info('Initializing saved CodeMirror editor');\r\n      return new CodeMirrorEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize saved CodeMirror, falling back:', e);\r\n    }\r\n  } else if (savedEditor === 'textarea') {\r\n    try {\r\n      logger.info('Initializing saved textarea editor');\r\n      return new TextareaEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize saved textarea, falling back:', e);\r\n    }\r\n  }\r\n\r\n  // Fallback: Try ACE first if available\r\n  if (typeof ace !== 'undefined') {\r\n    try {\r\n      logger.info('Initializing ACE editor (fallback)');\r\n      return new ACEEditor(container, options, eventEmitter);\r\n    } catch (e) {\r\n      logger.warn('Failed to initialize ACE, falling back to textarea:', e);\r\n    }\r\n  }\r\n\r\n  // Final fallback to textarea\r\n  logger.info('Initializing textarea editor (final fallback)');\r\n  return new TextareaEditor(container, options, eventEmitter);\r\n}\r\n\r\n/**\r\n * Initializes the JavaScript sandbox application\r\n * @param {Object} [options={}] - Configuration options\r\n * @param {number} [options.timeLimit] - Execution timeout in milliseconds\r\n * @param {string} [options.storageKey] - LocalStorage key for persistence\r\n * @param {string} [options.defaultCode] - Default code to load\r\n * @param {boolean} [options.debug=false] - Enable debug logging\r\n * @param {string} [options.logLevel='info'] - Log level for debugging\r\n * @param {string} [options.templatePath] - Path to custom sandbox template\r\n * @returns {Promise<SandboxController>} The initialized sandbox controller\r\n */\r\nexport async function initSandbox(options = {}) {\r\n  const debug = options.debug || false;\r\n  const logger = new Logger({\r\n    enabled: debug,\r\n    level: options.logLevel || 'info',\r\n    prefix: 'App'\r\n  });\r\n\r\n  try {\r\n    logger.info('Starting sandbox initialization...');\r\n\r\n    // Create controller\r\n    const controller = new SandboxController(options);\r\n    \r\n    // Initialize controller (now properly awaited)\r\n    await controller.init();\r\n    logger.info('Controller initialized');\r\n\r\n    // Find editor container\r\n    const editorContainer = document.getElementById('editorContainer');\r\n    if (!editorContainer) {\r\n      throw new Error('Editor container element not found');\r\n    }\r\n\r\n    // Create editor with event emitter for theme switching\r\n    // Start with default theme, will be updated when ThemeSwitcher emits THEME_READY\r\n    const editor = createEditor(editorContainer, {\r\n      mode: 'javascript',\r\n      theme: 'monokai', // Temporary default, will be updated by THEME_READY event\r\n      autofocus: true,\r\n      debug: debug\r\n    }, controller.getEventEmitter());\r\n    logger.info('Editor created, waiting for theme ready event');\r\n\r\n    // Set editor on controller\r\n    controller.setEditor(editor);\r\n    logger.info('Editor set on controller');\r\n    \r\n    logger.info('Sandbox initialization complete');\r\n    return controller;\r\n  } catch (error) {\r\n    logger.error('Sandbox initialization failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Auto-initializes the sandbox if DOM is ready\r\n */\r\nfunction autoInit() {\r\n  // Only auto-init if not already initialized and editor container exists\r\n  if (!window.sandbox && document.getElementById('editorContainer')) {\r\n    initSandbox({ debug: true, logLevel: 'trace' })\r\n      .then(sandbox => {\r\n        window.sandbox = sandbox;\r\n        console.log('✅ Sandbox initialized successfully');\r\n      })\r\n      .catch(error => {\r\n        console.error('❌ Failed to initialize sandbox:', error);\r\n      });\r\n  }\r\n}\r\n\r\n// Auto-initialize based on document state\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', autoInit);\r\n} else {\r\n  // DOM already loaded\r\n  autoInit();\r\n}\r\n\r\n// Export for manual initialization\r\nexport { SandboxController, ACEEditor, CodeMirrorEditor, TextareaEditor };\r\n"],"file":"assets/index-DOPjmGLE.js"}